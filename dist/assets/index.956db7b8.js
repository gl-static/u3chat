var e=Object.defineProperty,t=Object.defineProperties,n=Object.getOwnPropertyDescriptors,a=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,i=(t,n,a)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[n]=a,r=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&i(e,n,t[n]);if(a)for(var n of a(t))o.call(t,n)&&i(e,n,t[n]);return e},l=(e,a)=>t(e,n(a)),c=(e,t,n)=>(i(e,"symbol"!=typeof t?t+"":t,n),n);import{q as d,E as u,F as m,a as h,R as p,B as _,x as g,G as f,I as b,J as v,K as y,A as w,y as E,S as C,C as S,L as T,M as k,N as A,O as I}from"./vendor.b4a3f96f.js";import{g as N,a as D,b as R,c as x,f as L,d as O,e as M,C as P,l as U,h as F,i as G,j as H,k as j,m as B,n as V,o as Y,t as W,P as q,p as z,s as J,q as $,r as K,u as Q,v as X,L as Z,w as ee,x as te,A as ne,y as ae,z as se,B as oe,D as ie,E as re,F as le,U as ce,G as de,H as ue,I as me,J as he,K as pe,M as _e,N as ge,O as fe,Q as be,R as ve,S as ye,T as we,V as Ee,W as Ce,X as Se,Y as Te,Z as ke,_ as Ae,$ as Ie,a0 as Ne,a1 as De,a2 as Re,a3 as xe,a4 as Le,a5 as Oe,a6 as Me,a7 as Pe,a8 as Ue,a9 as Fe,aa as Ge,ab as He,ac as je,ad as Be,ae as Ve,af as Ye,ag as We,ah as qe,ai as ze,aj as Je,ak as $e,al as Ke,am as Qe,an as Xe,ao as Ze,ap as et,aq as tt,ar as nt,as as at,at as st,au as ot,av as it,aw as rt,ax as lt,ay as ct,az as dt,aA as ut,aB as mt,aC as ht,aD as pt,aE as _t,aF as gt,aG as ft,aH as bt,aI as vt,aJ as yt,aK as wt,aL as Et,aM as Ct,aN as St,aO as Tt,aP as kt,aQ as At,aR as It,aS as Nt,aT as Dt,aU as Rt,aV as xt,aW as Lt,aX as Ot,aY as Mt,aZ as Pt,a_ as Ut,a$ as Ft,b0 as Gt,b1 as Ht,b2 as jt,b3 as Bt,b4 as Vt,b5 as Yt,b6 as Wt,b7 as qt,b8 as zt,b9 as Jt,ba as $t,bb as Kt,bc as Qt,bd as Xt,be as Zt,bf as en,bg as tn,bh as nn,bi as an,bj as sn,bk as on,bl as rn,bm as ln,bn as cn,bo as dn,bp as un,bq as mn,br as hn,bs as pn,bt as _n,bu as gn,bv as fn,bw as bn,bx as vn,by as yn,bz as wn,bA as En,bB as Cn,bC as Sn,bD as Tn,bE as kn,bF as An,bG as In,bH as Nn,bI as Dn,bJ as Rn,bK as xn,bL as Ln,bM as On,bN as Mn,bO as Pn,bP as Un,bQ as Fn,bR as Gn,bS as Hn,bT as jn,bU as Bn,bV as Vn,bW as Yn}from"./index.c04d0919.js";function Wn(e){return async(t,n)=>{const a=n(),s=B(a),o=$(s,e),i=V(a,o);if(!i)return t(Y(s,e));W("api","api_channels_join_direct");const l=Date.now(),c={category:q.CATEGORY_DIRECT_CHANNEL_SHOW,name:e,value:"true"},u={category:q.CATEGORY_CHANNEL_OPEN_TIME,name:i.id,value:l.toString()},m=[{type:z.RECEIVED_PREFERENCES,data:[c]},{type:z.RECEIVED_PREFERENCES,data:[u]}];return t(d(m)),t(J(s,[r({user_id:s},c),r({user_id:s},u)])),{data:i}}}function qn(){return async(e,t)=>{const n=t(),a=N(n),s=D(n,a),o=R(n,s?s.id:"all",s?s.type:"").filter((e=>!x(n,e)));await e(L(O(n),o));const i=M(n);for(const r of i){const t=x(n,r);t&&t.type===P.DM_CHANNEL?e(U(t.id)):t&&t.type===P.GM_CHANNEL&&e(F(t.id))}return await G(),{data:!0}}}function zn(e,t,n){return async(a,s)=>{const o=s(),i=O(o);if(!i)return{data:!1};const{data:l,error:c}=await a(j(i,e));return l&&t?t(l):c&&n&&n(r({id:c.server_error_id},c)),{data:!0}}}function Jn(){return document.getElementById("u3-chatting")}function $n(){return{clientId:Kn("u3:secret")||"",userToken:Kn("u3:session")||""}}function Kn(e){const t=document.getElementsByTagName("meta");for(let n=0;n<t.length;n++)if(t[n].getAttribute("property")===e)return t[n].getAttribute("content");return""}var Qn={"about.buildnumber":"Build Number:","about.cloudEdition":"Cloud","about.copyright":"Copyright 2015 - {currentYear} Gomlo, Inc. All rights reserved","about.database":"Database:","about.date":"Build Date:","about.dbversion":"Database Schema Version:","about.enterpriseEditione1":"Enterprise Edition","about.enterpriseEditionLearn":"Learn more about Enterprise Edition at ","about.enterpriseEditionSst":"High trust messaging for the enterprise","about.enterpriseEditionSt":"Modern communication from behind your firewall.","about.hash":"Build Hash:","about.hashee":"EE Build Hash:","about.hashwebapp":"Webapp Build Hash:","about.licensed":"Licensed to:","about.notice":"Gomlo is made possible by the open source software used in our [server](!https://about.chatting.gomlo.me/platform-notice-txt/), [desktop](!https://about.chatting.gomlo.me/desktop-notice-txt/) and [mobile](!https://about.chatting.gomlo.me/mobile-notice-txt/) apps.","about.privacy":"Privacy Policy","about.teamEditionLearn":"Join the Gomlo community at ","about.teamEditionSt":"All your team communication in one place, instantly searchable and accessible anywhere.","about.teamEditiont0":"Team Edition","about.teamEditiont1":"Enterprise Edition","about.title":"About {appTitle}","about.tos":"Terms of Service","about.version":"Gomlo Version:","access_history.title":"Access History","accessibility.button.attachment":"attachment","accessibility.button.dialog":"{dialogName} dialog","accessibility.button.Info":"Info","accessibility.button.Search":"Search","accessibility.sections.centerContent":"message list main region","accessibility.sections.centerFooter":"message input complimentary region","accessibility.sections.channelHeader":"channel header region","accessibility.sections.lhsHeader":"team menu region","accessibility.sections.lhsList":"channel sidebar region","accessibility.sections.lhsNavigator":"channel navigator region","accessibility.sections.rhs":"{regionTitle} complimentary region","accessibility.sections.rhsContent":"message details complimentary region","accessibility.sections.rhsFooter":"reply input region","accessibility.sidebar.types.mention":"mention","accessibility.sidebar.types.mentions":"mentions","accessibility.sidebar.types.private":"private channel","accessibility.sidebar.types.public":"public channel","accessibility.sidebar.types.shared":"shared","accessibility.sidebar.types.unread":"unread","activity_log_modal.android":"Android","activity_log_modal.androidNativeApp":"Android Native App","activity_log_modal.androidNativeClassicApp":"Android Native Classic App","activity_log_modal.desktop":"Native Desktop App","activity_log_modal.iphoneNativeApp":"iPhone Native App","activity_log_modal.iphoneNativeClassicApp":"iPhone Native Classic App","activity_log.activeSessions":"Active Sessions","activity_log.browser":"Browser: {browser}","activity_log.firstTime":"First time active: {date}, {time}","activity_log.lastActivity":"Last activity: {date}, {time}","activity_log.logout":"Log Out","activity_log.moreInfo":"More info","activity_log.os":"OS: {os}","activity_log.sessionId":"Session ID: {id}","activity_log.sessionsDescription":"Sessions are created when you log in through a new browser on a device. Sessions let you use Gomlo without having to log in again for a time period specified by the System Admin. To end the session sooner, use the 'Log Out' button.","add_channels_to_scheme.title":"Add Channels to **Channel Selection** List","add_groups_to_channel.title":"Add New Groups to {channelName} Channel","add_groups_to_team.title":"Add New Groups to {teamName} Team","add_teams_to_scheme.confirmation.accept":"Yes, Move Team","add_teams_to_scheme.confirmation.message":"This team is already selected in another team scheme, are you sure you want to move it to this team scheme?","add_teams_to_scheme.confirmation.title":"Team Override Scheme Change?","add_teams_to_scheme.title":"Add Teams to **Team Selection** List","add_user_to_channel_modal.add":"Add","add_user_to_channel_modal.cancel":"Cancel","add_user_to_channel_modal.help":"Type to find a channel. Use ↑↓ to browse, ↵ to select, ESC to dismiss.","add_user_to_channel_modal.membershipExistsError":"{name} is already a member of that channel","add_user_to_channel_modal.title":"Add {name} to a Channel","add_users_to_role.title":"Add users to {roleName}","add_users_to_team.title":"Add New Members to {teamName} Team","announcement_bar.error.email_verification_required":"Check your email inbox to verify the address.","announcement_bar.error.past_grace":"Enterprise license is expired and some features may be disabled. Please contact your System Administrator for details.","announcement_bar.error.preview_mode":"Preview Mode: Email notifications have not been configured.","announcement_bar.error.warn_metric_status.link":"Learn more","announcement_bar.notification.email_verified":"Email verified","announcement_bar.number_active_users_warn_metric_status.text":"You now have over {limit} users. We strongly recommend using advanced features for large-scale servers.","announcement_bar.number_of_posts_warn_metric_status.text":"You now have over {limit} posts. We strongly advise using advanced features to avoid degraded performance.","announcement_bar.warn_metric_status_ack.text":"Thank you for contacting Gomlo. We will follow up with you soon.","announcement_bar.warn_metric_status.number_of_posts_ack.text":"Thank you for contacting Gomlo. We will follow up with you soon.","announcement_bar.warn_metric_status.number_of_posts.text":"You now have over 2,000,000 posts. We strongly advise using advanced features to avoid degraded performance.","announcement_bar.warn_metric_status.number_of_users_ack.text":"Thank you for contacting Gomlo. We will follow up with you soon.","announcement_bar.warn_metric_status.number_of_users.text":"You now have over 500 users. We strongly recommend using advanced features for large-scale servers.","announcement_bar.warn.contact_support_text":"To renew your license, contact support at support@chatting.gomlo.me.","announcement_bar.warn.email_support":"[Contact support](!{email}).","announcement_bar.warn.no_internet_connection":"Looks like you do not have access to the internet.","api.channel.add_guest.added":"{addedUsername} added to the channel as a guest by {username}.","api.channel.add_member.added":"{addedUsername} added to the channel by {username}.","api.channel.delete_channel.archived":"{username} archived the channel.","api.channel.guest_join_channel.post_and_forget":"{username} joined the channel as a guest.","api.channel.join_channel.post_and_forget":"{username} joined the channel.","api.channel.leave.left":"{username} left the channel.","api.channel.post_convert_channel_to_private.updated_from":"{username} converted the channel from public to private","api.channel.post_update_channel_displayname_message_and_forget.updated_from":"{username} updated the channel display name from: {old} to: {new}","api.channel.post_update_channel_header_message_and_forget.removed":"{username} removed the channel header (was: {old})","api.channel.post_update_channel_header_message_and_forget.updated_from":"{username} updated the channel header <br></br><strong>From:</strong> {old} <br></br><strong>To:</strong> {new}","api.channel.post_update_channel_header_message_and_forget.updated_to":"{username} updated the channel header to: {new}","api.channel.remove_member.removed":"{removedUsername} was removed from the channel","api.channel.restore_channel.unarchived":"{username} unarchived the channel.","api.team.add_member.added":"{addedUsername} added to the team by {username}","api.team.join_team.post_and_forget":"{username} joined the team.","api.team.leave.left":"{username} left the team.","api.team.remove_user_from_team.removed":"{removedUsername} was removed from the team.","app.channel.post_update_channel_purpose_message.removed":"{username} removed the channel purpose (was: {old})","app.channel.post_update_channel_purpose_message.updated_from":"{username} updated the channel purpose from: {old} to: {new}","app.channel.post_update_channel_purpose_message.updated_to":"{username} updated the channel purpose to: {new}","app.plugin.marketplace_plugins.app_error":"Error connecting to the marketplace server. Please check your settings in the [System Console]({siteURL}/admin_console/plugins/plugin_management).","apps.error":"Error: {error}","apps.error.command.field_missing":"Required fields missing: `{fieldName}`.","apps.error.command.unknown_channel":"Unknown channel for field `{fieldName}`: `{option}`.","apps.error.command.unknown_option":"Unknown option for field `{fieldName}`: `{option}`.","apps.error.command.unknown_user":"Unknown user for field `{fieldName}`: `{option}`.","apps.error.form.no_call":"`call` is not defined.","apps.error.form.no_form":"`form` is not defined.","apps.error.form.refresh":"There has been an error updating the modal. Contact the app developer. Details: {details}","apps.error.form.refresh_no_refresh":"Called refresh on no refresh field.","apps.error.form.submit.pretext":"There has been an error submitting the modal. Contact the app developer. Details: {details}","apps.error.lookup.error_preparing_request":"Error preparing lookup request: {errorMessage}","apps.error.parser":"Parsing error: {error}","apps.error.parser.empty_value":"empty values are not allowed","apps.error.parser.missing_call":"Missing binding call.","apps.error.parser.missing_field_value":"Field value is missing.","apps.error.parser.missing_quote":"Matching double quote expected before end of input.","apps.error.parser.missing_tick":"Matching tick quote expected before end of input.","apps.error.parser.multiple_equal":"Multiple `=` signs are not allowed.","apps.error.parser.no_argument_pos_x":"Unable to identify argument.","apps.error.parser.no_bindings":"No command bindings.","apps.error.parser.no_match":"`{command}`: No matching command found in this workspace.","apps.error.parser.no_slash_start":"Command must start with a `/`.","apps.error.parser.unexpected_error":"Unexpected error.","apps.error.parser.unexpected_flag":"Command does not accept flag `{flagName}`.","apps.error.parser.unexpected_state":"Unreachable: Unexpected state in matchBinding: `{state}`.","apps.error.parser.unexpected_whitespace":"Unreachable: Unexpected whitespace.","apps.error.responses.form.no_form":"Response type is `form`, but no form was included in response.","apps.error.responses.navigate.no_submit":"Response type is `navigate`, but the call was not a submission.","apps.error.responses.navigate.no_url":"Response type is `navigate`, but no url was included in response.","apps.error.responses.unexpected_error":"Received an unexpected error.","apps.error.responses.unexpected_type":"App response type was not expected. Response type: {type}","apps.error.responses.unknown_type":"App response type not supported. Response type: {type}.","apps.error.unknown":"Unknown error occurred.","apps.suggestion.dynamic.error":"Dynamic select error","apps.suggestion.errors.parser_error":"Parsing error","apps.suggestion.no_dynamic":"No data was returned for dynamic suggestions","apps.suggestion.no_static":"No matching options.","apps.suggestion.no_suggestion":"No matching suggestions.",archivedChannelMessage:"You are viewing an **archived channel**. New messages cannot be posted.","atmos/camo":"atmos/camo","authorize.access":"Allow **{appName}** access?","authorize.allow":"Allow","authorize.app":"The app **{appName}** would like the ability to access and modify your basic information.","authorize.deny":"Deny","authorize.title":"Authorize **{appName}** to Connect to Your **Gomlo** User Account","avatars.overflowUnnamedOnly":"{overflowUnnamedCount, plural, =1 {one other} other {# others}}","avatars.overflowUsers":"{overflowUnnamedCount, plural, =0 {{names}} =1 {{names} and one other} other {{names} and # others}}","backstage_list.search":"Search","backstage_navbar.backToGomlo":"Back to {siteName}","backstage_sidebar.bots":"Bot Accounts","backstage_sidebar.emoji":"Custom Emoji","backstage_sidebar.integrations":"Integrations","backstage_sidebar.integrations.commands":"Slash Commands","backstage_sidebar.integrations.incoming_webhooks":"Incoming Webhooks","backstage_sidebar.integrations.oauthApps":"OAuth 2.0 Applications","backstage_sidebar.integrations.outgoing_webhooks":"Outgoing Webhooks","call_button.menuAriaLabel":"Call type selector","center_panel.archived.closeChannel":"Close Channel","center_panel.direct.closeDirectMessage":"Close Direct Message","center_panel.direct.closeGroupMessage":"Close Group Message","channel_header.addChannelHeader":"Add a channel description","channel_header.channelFiles":"Channel files","channel_header.channelHasGuests":"This channel has guests","channel_header.channelMembers":"Members","channel_header.convert":"Convert to Private Channel","channel_header.delete":"Archive Channel","channel_header.directchannel.you":"{displayname} (you) ","channel_header.editLink":"Edit","channel_header.flagged":"Saved posts","channel_header.groupConstrained":"Members managed by linked groups.","channel_header.groupMessageHasGuests":"This group message has guests","channel_header.leave":"Leave Channel","channel_header.manageMembers":"Manage Members","channel_header.menuAriaLabel":"Channel Menu","channel_header.mute":"Mute Channel","channel_header.pinnedPosts":"Pinned posts","channel_header.recentMentions":"Recent mentions","channel_header.rename":"Rename","channel_header.search":"Search","channel_header.setHeader":"Edit Banner","channel_header.setPurpose":"Edit Purpose","channel_header.unarchive":"Unarchive Group","channel_header.unmute":"Unmute Group","channel_header.userHelpGuide":"Help","channel_header.viewMembers":"View Members","channel_info.about":"About","channel_info.header":"Header:","channel_info.id":"ID: ","channel_info.notFound":"No Channel Found","channel_info.purpose":"Purpose:","channel_info.url":"URL:","channel_invite.addNewMembers":"Add people to {channel}","channel_loader.posted":"Posted","channel_loader.postedImage":" posted an image","channel_loader.socketError":"Please check connection, Gomlo unreachable. If issue persists, ask administrator to check WebSocket port.","channel_loader.someone":"Someone","channel_loader.something":" did something new","channel_loader.unknown_error":"We received an unexpected status code from the server.","channel_loader.uploadedFile":" uploaded a file","channel_loader.uploadedImage":" uploaded an image","channel_members_dropdown.channel_admin":"Admin","channel_members_dropdown.channel_admins":"Group Admins","channel_members_dropdown.channel_mod":"Mod","channel_members_dropdown.channel_mods":"Group Mods","channel_members_dropdown.channel_guest":"Guest","channel_members_dropdown.channel_member":"Member","channel_members_dropdown.channel_members":"Group Members","channel_members_dropdown.make_channel_admin":"Make as Admin","channel_members_dropdown.make_channel_admins":"Make as Admins","channel_members_dropdown.make_channel_mod":"Make as Mod","channel_members_dropdown.make_channel_mods":"Make as Mods","channel_members_dropdown.make_channel_member":"Make as Member","channel_members_dropdown.make_channel_members":"Make as Members","channel_members_dropdown.menuAriaLabel":"Change the role of channel member","channel_members_dropdown.remove_from_channel":"Kick user","channel_members_dropdown.shared_member":"Shared Member","channel_members_modal.addNew":" Add Members","channel_members_modal.members":" Members","channel_modal.cancel":"Cancel","channel_modal.createNew":"Create Channel","channel_modal.descriptionHelp":"Describe how this channel should be used.","channel_modal.displayNameError":"Display name must have at least 2 characters.","channel_modal.edit":"Edit","channel_modal.header":"Header","channel_modal.headerEx":'E.g.: "[Link Title](http://example.com)"',"channel_modal.headerHelp":"Set text that will appear in the header of the channel beside the channel name. For example, include frequently used links by typing [Link Title](http://example.com).","channel_modal.modalTitle":"New Channel","channel_modal.name":"Name","channel_modal.nameEx":'E.g.: "Bugs", "Marketing", "客户支持"',"channel_modal.optional":"(optional)","channel_modal.privateHint":" - Only invited members can join this channel","channel_modal.privateName":"Private","channel_modal.publicHint":" - Anyone can join this channel","channel_modal.publicName":"Public","channel_modal.purpose":"Purpose","channel_modal.purposeEx":'E.g.: "A channel to file bugs and improvements"',"channel_modal.type":"Type","channel_notifications.allActivity":"For all activity","channel_notifications.globalDefault":"Global default ({notifyLevel})","channel_notifications.ignoreChannelMentions":"Ignore mentions for @group, @here and @all","channel_notifications.ignoreChannelMentions.help":"When enabled, @group, @here and @all will not trigger mentions or mention notifications in this channel.","channel_notifications.ignoreChannelMentions.off.title":"Off","channel_notifications.ignoreChannelMentions.on.title":"On","channel_notifications.levels.all":"All","channel_notifications.levels.default":"Default","channel_notifications.levels.mention":"Mention","channel_notifications.levels.none":"None","channel_notifications.muteChannel.help":"Muting turns off desktop, email and push notifications for this channel. The channel will not be marked as unread unless you're mentioned.","channel_notifications.muteChannel.off.title":"Off","channel_notifications.muteChannel.on.title":"On","channel_notifications.muteChannel.on.title.collapse":"Mute is enabled. Desktop, email and push notifications will not be sent for this channel.","channel_notifications.muteChannel.settings":"Mute channel","channel_notifications.never":"Never","channel_notifications.onlyMentions":"Only for mentions","channel_notifications.override":'Selecting an option other than "Default" will override the global notification settings. Desktop notifications are available on Firefox, Safari, and Chrome.',"channel_notifications.overridePush":'Selecting an option other than "Global default" will override the global notification settings for mobile push notifications in account settings. Push notifications must be enabled by the System Admin.',"channel_notifications.preferences":"Notification Preferences for ","channel_notifications.push":"Send mobile push notifications","channel_notifications.sendDesktop":"Send desktop notifications","channel_select.placeholder":"--- Select a channel ---","channel_switch_modal.deactivated":"Deactivated","channel_switch_modal.title":"Switch a chat","channel_toggle_button.private":"Private","channel_toggle_button.public":"Public","channelHeader.addToFavorites":"Add to Favorites","channelHeader.removeFromFavorites":"Remove from Favorites","channelHeader.unmute":"Unmute","cloud.upgrade.notrightnow":"Not right now","combined_system_message.added_to_channel.many_expanded":"{users} and {lastUser} were **added to the channel** by {actor}.","combined_system_message.added_to_channel.one":"{firstUser} **added to the channel** by {actor}.","combined_system_message.added_to_channel.one_you":"You were **added to the channel** by {actor}.","combined_system_message.added_to_channel.two":"{firstUser} and {secondUser} **added to the channel** by {actor}.","combined_system_message.added_to_team.many_expanded":"{users} and {lastUser} were **added to the team** by {actor}.","combined_system_message.added_to_team.one":"{firstUser} **added to the team** by {actor}.","combined_system_message.added_to_team.one_you":"You were **added to the team** by {actor}.","combined_system_message.added_to_team.two":"{firstUser} and {secondUser} **added to the team** by {actor}.","combined_system_message.joined_channel.many_expanded":"{users} and {lastUser} **joined the channel**.","combined_system_message.joined_channel.one":"{firstUser} **joined the channel**.","combined_system_message.joined_channel.one_you":"You **joined the channel**.","combined_system_message.joined_channel.two":"{firstUser} and {secondUser} **joined the channel**.","combined_system_message.joined_team.many_expanded":"{users} and {lastUser} **joined the team**.","combined_system_message.joined_team.one":"{firstUser} **joined the team**.","combined_system_message.joined_team.one_you":"You **joined the team**.","combined_system_message.joined_team.two":"{firstUser} and {secondUser} **joined the team**.","combined_system_message.left_channel.many_expanded":"{users} and {lastUser} **left the channel**.","combined_system_message.left_channel.one":"{firstUser} **left the channel**.","combined_system_message.left_channel.one_you":"You **left the channel**.","combined_system_message.left_channel.two":"{firstUser} and {secondUser} **left the channel**.","combined_system_message.left_team.many_expanded":"{users} and {lastUser} **left the team**.","combined_system_message.left_team.one":"{firstUser} **left the team**.","combined_system_message.left_team.one_you":"You **left the team**.","combined_system_message.left_team.two":"{firstUser} and {secondUser} **left the team**.","combined_system_message.removed_from_channel.many_expanded":"{users} and {lastUser} were **removed from the channel**.","combined_system_message.removed_from_channel.one":"{firstUser} was **removed from the channel**.","combined_system_message.removed_from_channel.one_you":"You were **removed from the channel**.","combined_system_message.removed_from_channel.two":"{firstUser} and {secondUser} were **removed from the channel**.","combined_system_message.removed_from_team.many_expanded":"{users} and {lastUser} were **removed from the team**.","combined_system_message.removed_from_team.one":"{firstUser} was **removed from the team**.","combined_system_message.removed_from_team.one_you":"You were **removed from the team**.","combined_system_message.removed_from_team.two":"{firstUser} and {secondUser} were **removed from the team**.","combined_system_message.you":"You","confirm_modal.cancel":"Cancel","confirm.notification_sent_to_admin.modal_body":"A notification has been sent to your administrator.","confirm.notification_sent_to_admin.modal_done":"Done","confirm.notification_sent_to_admin.modal_title":"Thank you!","convert_channel.cancel":"No, cancel","convert_channel.confirm":"Yes, convert to private channel","convert_channel.question1":"When you convert **{display_name}** to a private channel, history and membership are preserved. Publicly shared files remain accessible to anyone with the link. Membership in a private channel is by invitation only.","convert_channel.question2":"The change is permanent and cannot be undone.","convert_channel.question3":"Are you sure you want to convert **{display_name}** to a private channel?","convert_channel.title":"Convert {display_name} to a Private Channel?","copy_url_context_menu.getChannelLink":"Copy Link","create_category_modal.create":"Create","create_category_modal.createCategory":"Create New Category","create_comment.addComment":"Add a comment...","create_comment.comment":"Add Comment","create_comment.commentTitle":"Comment","create_comment.file":"File uploading","create_comment.files":"Files uploading","create_post.comment":"Comment","create_post.deactivated":"You are viewing an archived channel with a **deactivated user**. New messages cannot be posted.","create_post.error_message":"Your message is too long. Character count: {length}/{limit}","create_post.fileProcessing":"Processing...","create_post.icon":"Create a post","create_post.post":"Post","create_post.read_only":"This channel is read-only. Only members with permission can post here.","create_post.send_message":"Send a message","create_post.shortcutsNotSupported":"Keyboard shortcuts are not supported on your device.","create_post.tutorialTip.title":"Sending Messages","create_post.tutorialTip1":"Type here to write a message and press **Enter** to post it.","create_post.tutorialTip2":"Click the **Attachment** button to upload an image or a file.","create_post.write":"Write to {channelDisplayName}","custom_emoji.header":"Custom Emoji","custom_status.modal_cancel":"Clear Status","custom_status.modal_confirm":"Set Status","custom_status.set_status":"Set a status","custom_status.suggestions.in_a_meeting":"In a meeting","custom_status.suggestions.on_a_vacation":"On a vacation","custom_status.suggestions.out_for_lunch":"Out for lunch","custom_status.suggestions.out_sick":"Out sick","custom_status.suggestions.recent_title":"RECENT","custom_status.suggestions.title":"SUGGESTIONS","custom_status.suggestions.working_from_home":"Working from home","date_separator.today":"Today","date_separator.yesterday":"Yesterday","deactivate_member_modal.deactivate":"Deactivate","deactivate_member_modal.desc":"This action deactivates {username}. They will be logged out and not have access to any teams or channels on this system.\n","deactivate_member_modal.desc.confirm":" Are you sure you want to deactivate {username}?","deactivate_member_modal.desc.for_users_with_bot_accounts":"This action deactivates {username}.\n \n * They will be logged out and not have access to any teams or channels on this system.\n * Bot accounts they manage will be disabled along with their integrations. To enable them again, go to [Integrations > Bot Accounts]({siteURL}/_redirect/integrations/bots). [Learn more about bot accounts](!https://chatting.gomlo.me/pl/default-bot-accounts).\n \n \n","deactivate_member_modal.sso_warning":"You must also deactivate this user in the SSO provider or they will be reactivated on next login or sync.","deactivate_member_modal.title":"Deactivate {username}","default_channel.purpose":"Post messages here that you want everyone to see. Everyone automatically becomes a permanent member of this channel when they join the team.","delete_category_modal.delete":"Delete","delete_category_modal.deleteCategory":"Delete this category?","delete_category_modal.helpText":"Channels in **{category_name}** will move back to the Channels and Direct messages categories. You're not removed from any channels.","delete_channel.cancel":"Cancel","delete_channel.confirm":"Confirm ARCHIVE Channel","delete_channel.del":"Archive","delete_channel.question":"This will archive the channel from the team and remove it from the user interface. Archived channels can be unarchived if needed again. \n \nAre you sure you wish to archive the {display_name} channel?","delete_channel.viewArchived.question":"This will archive the channel from the team. Channel contents will still be accessible by channel members.\n \nAre you sure you wish to archive the **{display_name}** channel?","delete_post.cancel":"Cancel","delete_post.comment":"Comment","delete_post.confirm":"Confirm {term} Delete","delete_post.del":"Delete","delete_post.post":"Post","delete_post.question":"Are you sure you want to delete this {term}?","delete_post.warning":"This post has {count, number} {count, plural, one {comment} other {comments}} on it.","demote_to_user_modal.demote":"Demote","demote_to_user_modal.desc":"This action demotes the user {username} to a guest. It will restrict the user's ability to join public channels and interact with users outside of the channels they are currently members of. Are you sure you want to demote user {username} to guest?","demote_to_user_modal.title":"Demote User {username} to Guest","device_icons.android":"Android Icon","device_icons.apple":"Apple Icon","device_icons.linux":"Linux Icon","device_icons.windows":"Windows Icon","discard_changes_modal.leave":"Yes, Discard","discard_changes_modal.message":"You have unsaved changes, are you sure you want to discard them?","discard_changes_modal.title":"Discard Changes?","dnd_custom_time_picker_modal.date":"Date","dnd_custom_time_picker_modal.defaultMsg":"Disable notifications until","dnd_custom_time_picker_modal.submitButton":"Disable Notifications","dnd_custom_time_picker_modal.time":"Time","edit_category_modal.helpText":"Drag channels into this category to organize your sidebar.","edit_category_modal.placeholder":"Name your category","edit_channel_header_modal.cancel":"Cancel","edit_channel_header_modal.description":"Edit the text appearing next to the channel name in the channel header.","edit_channel_header_modal.error":"The text entered exceeds the character limit. The channel header is limited to {maxLength} characters.","edit_channel_header_modal.save":"Save","edit_channel_header_modal.title":"Edit Header for {channel}","edit_channel_header_modal.title_dm":"Edit Header","edit_channel_header.editHeader":"Edit the Channel Header...","edit_channel_header.previewHeader":"Edit Header","edit_channel_private_purpose_modal.body":'This text appears in the "View Info" modal of the private channel.',"edit_channel_purpose_modal.body":'Describe how this channel should be used. This text appears in the channel list in the "More..." menu and helps others decide whether to join.',"edit_channel_purpose_modal.cancel":"Cancel","edit_channel_purpose_modal.save":"Save","edit_channel_purpose_modal.title1":"Edit Purpose","edit_channel_purpose_modal.title2":"Edit Purpose for ","edit_command.update":"Update","edit_command.updating":"Updating...","edit_post.cancel":"Cancel","edit_post.edit":"Edit {title}","edit_post.editPost":"Edit the post...","edit_post.save":"Save","edit_post.time_limit_button.for_n_seconds":"For {n} seconds","edit_post.time_limit_button.no_limit":"Anytime","edit_post.time_limit_modal.description":'Setting a time limit **applies to all users** who have the "Edit Post" permissions in any permission scheme.',"edit_post.time_limit_modal.invalid_time_limit":"Invalid time limit","edit_post.time_limit_modal.option_label_anytime":"Anytime","edit_post.time_limit_modal.option_label_time_limit.postinput":"seconds after posting","edit_post.time_limit_modal.option_label_time_limit.preinput":"Can edit for","edit_post.time_limit_modal.save_button":"Save Edit Time","edit_post.time_limit_modal.subscript":"Set the length of time users have to edit their messages after posting.","edit_post.time_limit_modal.title":"Configure Global Edit Post Time Limit","email_verify.almost":"{siteName}: You are almost done","email_verify.failed":" Failed to send verification email.","email_verify.notVerifiedBody":"Please verify your email address. Check your inbox for an email.","email_verify.resend":"Resend Email","email_verify.sent":" Verification email sent.","emoji_list.actions":"Actions","emoji_list.add":"Add Custom Emoji","emoji_list.creator":"Creator","emoji_list.delete":"Delete","emoji_list.delete.confirm.button":"Delete","emoji_list.delete.confirm.msg":"This action permanently deletes the custom emoji. Are you sure you want to delete it?","emoji_list.delete.confirm.title":"Delete Custom Emoji","emoji_list.empty":"No Custom Emoji Found","emoji_list.header":"Custom Emoji","emoji_list.help":"Custom emoji are available to everyone on your server. Type ':' followed by two characters in a message box to bring up the emoji selection menu.","emoji_list.help2":"Tip: If you add #, ##, or ### as the first character on a new line containing emoji, you can use larger sized emoji. To try it out, send a message such as: '# :smile:'.","emoji_list.image":"Image","emoji_list.name":"Name","emoji_list.search":"Search Custom Emoji","emoji_picker_item.emoji_aria_label":"{emojiName} emoji","emoji_picker.activity":"Activity","emoji_picker.close":"Close","emoji_picker.custom":"Custom","emoji_picker.emojiPicker":"Emoji Picker","emoji_picker.flags":"Flags","emoji_picker.foods":"Foods","emoji_picker.header":"Emoji Picker","emoji_picker.nature":"Nature","emoji_picker.objects":"Objects","emoji_picker.people":"People","emoji_picker.places":"Places","emoji_picker.recent":"Recently Used","emoji_picker.search":"Search emojis","emoji_picker.search_emoji":"Search for an emoji","emoji_picker.searchResults":"Search Results","emoji_picker.symbols":"Symbols","error.channel_not_found.message":"The channel you're requesting is private or does not exist. Please contact an Administrator to be added to the channel.","error.channel_not_found.message_guest":"Your guest account has no channels assigned. Please contact an administrator.","error.channel_not_found.title":"Channel Not Found","error.channelNotFound.guest_link":"Back","error.channelNotFound.link":"Back to {defaultChannelName}","error.generic.link":"Back to {siteName}","error.generic.link_login":"Back to Login Page","error.generic.message":"An error has occurred.","error.generic.title":"Error","error.local_storage.help1":"Enable cookies","error.local_storage.help2":"Turn off private browsing","error.local_storage.help3":"Use a supported browser (IE 11, Chrome 61+, Firefox 60+, Safari 12+, Edge 42+)","error.local_storage.message":"Gomlo was unable to load because a setting in your browser prevents the use of its local storage features. To allow Gomlo to load, try the following actions:","error.local_storage.title":"Cannot Load Gomlo","error.maxFreeUsersReached.description":"New users cannot be added to this workspace because it has reached the user limit for the free version of Gomlo Cloud. The system administrator has been notified","error.maxFreeUsersReached.title":"This workspace has reached the user limit.","error.not_found.message":"The page you were trying to reach does not exist","error.not_found.title":"Page Not Found","error.oauth_access_denied":"You must authorize Gomlo to log in with {service}.","error.oauth_access_denied.title":"Authorization Error","error.oauth_invalid_param.title":"OAuth Parameter Error","error.oauth_missing_code":"The service provider {service} did not provide an authorization code in the redirect URL.","error.oauth_missing_code.forum":"If you reviewed the above and are still having trouble with configuration, you may post in our {link} where we'll be happy to help with issues during setup.","error.oauth_missing_code.forum.link":"Troubleshooting forum","error.oauth_missing_code.gitlab":"For {link} please make sure you followed the setup instructions.","error.oauth_missing_code.gitlab.link":"GitLab","error.oauth_missing_code.google":"For {link} make sure your administrator enabled the Google+ API.","error.oauth_missing_code.google.link":"Google Apps","error.oauth_missing_code.office365":"For {link} make sure the administrator of your Microsoft organization has enabled the Gomlo app.","error.oauth_missing_code.office365.link":"Office 365","error.oauth_missing_code.title":"Gomlo Needs Your Help","error.plugin_not_found.desc":"The plugin you are looking for does not exist.","error.plugin_not_found.title":"Plugin Not Found","error.team_not_found.message":"The team you're requesting is private or does not exist. Please contact your Administrator for an invitation.","error.team_not_found.title":"Team Not Found","file_attachment.thumbnail":"file thumbnail","file_info_preview.size":"Size ","file_info_preview.type":"File type ","file_search_result_item.copy_link":"Copy link","file_search_result_item.download":"Download","file_search_result_item.more_actions":"More Actions","file_search_result_item.open_in_channel":"Open in channel","file_upload.disabled":"File attachments are disabled.","file_upload.drag_folder":"Folders cannot be uploaded. Please drag all files separately.","file_upload.fileAbove":"File above {max}MB cannot be uploaded: {filename}","file_upload.filesAbove":"Files above {max}MB cannot be uploaded: {filenames}","file_upload.generic_error":"There was a problem uploading your files.","file_upload.limited":"Uploads limited to {count, number} files maximum. Please use additional posts for more files.","file_upload.menuAriaLabel":"Upload type selector","file_upload.pasted":"Image Pasted at ","file_upload.upload_files":"Upload files","file_upload.zeroBytesFile":"You are uploading an empty file: {filename}","file_upload.zeroBytesFiles":"You are uploading empty files: {filenames}","filtered_channels_list.search":"Search channels","filtered_user_list.countTotal":"{count, number} {count, plural, one {member} other {members}} of {total, number} total","filtered_user_list.countTotalPage":"{startCount, number} - {endCount, number} {count, plural, one {member} other {members}} of {total, number} total","filtered_user_list.next":"Next","filtered_user_list.prev":"Previous","filtered_user_list.search":"Search users","filtered_user_list.team":"Team:","filtered_user_list.userStatus":"User Status:","flag_post.flag":"Save","flag_post.unflag":"Remove from Saved","full_screen_modal.back":"Back","full_screen_modal.close":"Close","general_button.close":"Close","general_button.esc":"Esc","generic_icons.add":"Add Icon","generic_icons.add-mail":"Add Mail Icon","generic_icons.add-reaction":"Add Reaction Icon","generic_icons.adminOnlyIcon":"Admin View Only Icon","generic_icons.alert":"Alert Icon","generic_icons.archive":"Archive Icon","generic_icons.arrow.down":"Down Arrow Icon","generic_icons.attach":"Attachment Icon","generic_icons.back":"Back Icon","generic_icons.bot":"Bot Icon","generic_icons.breadcrumb":"Breadcrumb Icon","generic_icons.camera":"Camera Icon","generic_icons.channel.arrow-right":"Arrow right","generic_icons.channel.draft":"Channel Draft Icon","generic_icons.channel.private":"Private Channel Icon","generic_icons.channel.public":"Public Channel Icon","generic_icons.close":"Close Icon","generic_icons.collapse":"Collapse Icon","generic_icons.download":"Download Icon","generic_icons.dropdown":"Dropdown Icon","generic_icons.edit":"Edit Icon","generic_icons.elipsisHorizontalIcon":"Ellipsis Horizontal Icon","generic_icons.expand":"Expand Icon","generic_icons.fail":"Faliure Icon","generic_icons.flag":"Save Icon","generic_icons.flagged":"Saved Icon","generic_icons.info":"Info Icon","generic_icons.invite":"Invite Icon","generic_icons.invite_members":"Invite Members Icon","generic_icons.link":"Link Icon","generic_icons.loading":"Loading Icon","generic_icons.logout":"Logout Icon","generic_icons.mail":"Mail Icon","generic_icons.chatting":"Gomlo Logo","generic_icons.member":"Member Icon","generic_icons.mention":"Mention Icon","generic_icons.menu":"Menu Icon","generic_icons.message":"Message Icon","generic_icons.muted":"Muted Icon","generic_icons.next":"Next Icon","generic_icons.pin":"Pin Icon","generic_icons.plugin":"Plugin Icon","generic_icons.plugins":"Plugins","generic_icons.previous":"Previous Icon","generic_icons.reload":"Reload Icon","generic_icons.remove":"Remove Icon","generic_icons.reply":"Reply Icon","generic_icons.search":"Search Icon","generic_icons.select":"Select Icon","generic_icons.settings":"Settings Icon","generic_icons.success":"Success Icon","generic_icons.upload":"Upload Icon","generic_icons.userGuide":"Help","generic_icons.warning":"Warning Icon","generic_modal.cancel":"Cancel","generic_modal.confirm":"Confirm","generic.done":"Done","generic.next":"Next","generic.previous":"Previous","get_link.clipboard":" Link copied","get_link.close":"Close","get_link.copy":"Copy Link","get_public_link_modal.help":"The link below allows anyone to see this file without being registered on this server.","get_public_link_modal.title":"Copy Public Link","gif_picker.gfycat":"Search Gfycat","globalThreads.heading":"Followed threads","globalThreads.noThreads.subtitle":"Any threads you are mentioned in or have participated in will show here along with any threads you have followed.","globalThreads.noThreads.title":"No followed threads yet","globalThreads.sidebarLink":"Threads","globalThreads.subtitle":"Threads you’re participating in will automatically show here","globalThreads.threadList.noUnreadThreads":"No unread threads","globalThreads.threadPane.unselectedTitle":"{numUnread, plural, =0 {Looks like you’re all caught up} other {Catch up on your threads}}","globalThreads.title":"{prefix}Threads - {displayName} {siteName}","group_list_modal.addGroupButton":"Add Groups","group_list_modal.removeGroupButton":"Remove Group",groups:"{team} Groups","inProduct_notices.adminOnlyMessage":"Visible to Admins only","input.clear":"Clear","integrations.add":"Add","integrations.command.description":"Slash commands send events to external integrations","integrations.command.title":"Slash Commands","integrations.delete.confirm.button":"Delete","integrations.delete.confirm.title":"Delete Integration","integrations.done":"Done","integrations.edit":"Edit","integrations.header":"Integrations","integrations.help":"Visit the {appDirectory} to find self-hosted, third-party apps and integrations for Gomlo.","integrations.help.appDirectory":"App Directory","integrations.incomingWebhook.description":"Incoming webhooks allow external integrations to send messages","integrations.incomingWebhook.title":"Incoming Webhooks","integrations.oauthApps.description":"OAuth 2.0 allows external applications to make authorized requests to the Gomlo API","integrations.oauthApps.title":"OAuth 2.0 Applications","integrations.outgoingWebhook.description":"Outgoing webhooks allow external integrations to receive and respond to messages","integrations.outgoingWebhook.title":"Outgoing Webhooks","integrations.successful":"Setup Successful","interactive_dialog.cancel":"Cancel","interactive_dialog.element.optional":"(optional)","interactive_dialog.submit":"Submit","interactive_dialog.submitting":"Submitting...","intro_messages.addGroupsToTeam":"Add other groups to this team","intro_messages.anyMember":" Any member can join and read this channel.","intro_messages.beginning":"Beginning of {name}","intro_messages.creator":"This is the start of the {name} channel, created by {creator} on {date}.","intro_messages.creatorPrivate":"This is the start of the {name} private channel, created by {creator} on {date}.","intro_messages.default":"**Welcome to {display_name}!**\n \nPost messages here that you want everyone to see. Everyone automatically becomes a permanent member of this channel when they join the team.","intro_messages.DM":"This is the start of your direct message history with {teammate}.\nDirect messages and files shared here are not shown to people outside this area.","intro_messages.GM":"This is the start of your group message history with {names}.\nMessages and files shared here are not shown to people outside this area.","intro_messages.group_message":"This is the start of your group message history with these teammates. Messages and files shared here are not shown to people outside this area.","intro_messages.inviteGropusToChannel.button":"Add groups to this private channel","intro_messages.inviteMembersToChannel.button":"Add members to this channel","intro_messages.inviteMembersToPrivateChannel.button":"Add members to this private channel","intro_messages.inviteOthers":"Invite others to this team","intro_messages.inviteOthersToWorkspace.button":"Invite others to the workspace","intro_messages.inviteOthersToWorkspace.title":"Let’s add some people to the workspace!","intro_messages.noCreator":"This is the start of the {name} channel, created on {date}.","intro_messages.noCreatorPrivate":"This is the start of the {name} private channel, created on {date}.","intro_messages.offTopic":"This is the start of {display_name}, a channel for non-work-related conversations.","intro_messages.onlyInvited":" Only invited members can see this private channel.","intro_messages.purpose":" This channel's purpose is: {purpose}","intro_messages.purposePrivate":" This private channel's purpose is: {purpose}","intro_messages.readonly.default":"**Welcome to {display_name}!**\n \nMessages can only be posted by system admins. Everyone automatically becomes a permanent member of this channel when they join the team.","intro_messages.setHeader":"Set a Header","intro_messages.teammate":"This is the start of your direct message history with this teammate. Direct messages and files shared here are not shown to people outside this area.","invitation_modal.confirm.done":"Done","invitation_modal.confirm.guests_title":"**Guests** Invited to **{teamName}**","invitation_modal.confirm.members_subtitle":"**{sentCount, number} {sentCount, plural, one {person} other {people}}** {sentCount, plural, one {has} other {have}} been invited, and **{notSentCount, number} {notSentCount, plural, one {invitation} other {invitations}}** {notSentCount, plural, one {was} other {were}} not sent","invitation_modal.confirm.members_subtitle_without_not_sent":"**{sentCount, number} {sentCount, plural, one {person} other {people}}** {sentCount, plural, one {has} other {have}} been invited","invitation_modal.confirm.members_subtitle_without_sent":"**{notSentCount, number} {notSentCount, plural, one {invitation} other {invitations}}** {notSentCount, plural, one {was} other {were}} not sent","invitation_modal.confirm.members_subtitle_without_sent_and_not_sent":"No invitation sent","invitation_modal.confirm.members_title":"**Members** Invited to **{teamName}**","invitation_modal.confirm.not-sent-header":"Invitations Not Sent","invitation_modal.confirm.sent-header":"Successful Invites","invitation_modal.guests.add_channels.placeholder":"Search and add channels","invitation_modal.guests.add_channels.title":"Search and Add Channels","invitation_modal.guests.add_people.description":"Add existing guests or send email invites to new guests.","invitation_modal.guests.add_people.description-email-disabled":"Add existing guests.","invitation_modal.guests.add_people.title":"Invite People","invitation_modal.guests.add-channels.description":"Specify the channels the guests have access to.","invitation_modal.guests.custom-message.description":"Create a custom message to make your invite more personal.","invitation_modal.guests.custom-message.link":"Set a custom message","invitation_modal.guests.custom-message.title":"Custom message","invitation_modal.guests.invite_button":"Invite Guests","invitation_modal.guests.search-and-add.placeholder":"Add guests or email addresses","invitation_modal.guests.search-and-add.placeholder-email-disabled":"Add guests","invitation_modal.guests.title":"Invite **Guests** to {teamName}","invitation_modal.guests.users_emails_input.no_user_found_matching":"No one found matching **{text}**, type email to invite","invitation_modal.guests.users_emails_input.no_user_found_matching-email-disabled":"No one found matching **{text}**","invitation_modal.guests.users_emails_input.valid_email":"Invite **{email}** as a guest","invitation_modal.invite_guests.description":"Invite guests to one or more channels. Guests only have access to messages, files, and people in the channels they are members of.","invitation_modal.invite_guests.title":"Invite **Guests**","invitation_modal.invite_members.description":"Invite new team members with a link or by email. Team members have access to messages and files in open teams and public channels.","invitation_modal.invite_members.description-email-disabled":"Invite new team members with a link. Team members have access to messages and files in open teams and public channels.","invitation_modal.invite_members.exceeded_max_add_members_batch":"No more than **{text}** people can be invited at once","invitation_modal.invite_members.hit_cloud_user_limit":"You can only invite **{num} more {num, plural, one {member} other {members}}** to the team on the free tier.","invitation_modal.invite_members.title":"Invite **Members**","invitation_modal.invite.more":"Invite More People","invitation_modal.members.invite_button":"Invite Members","invitation_modal.members.or":"OR","invitation_modal.members.search_and_add.title":"Add or Invite People","invitation_modal.members.search-and-add.description":"Add existing members or send email invites to new members.","invitation_modal.members.search-and-add.description-email-disabled":"Add existing members to this team.","invitation_modal.members.search-and-add.placeholder":"Add members or email addresses","invitation_modal.members.search-and-add.placeholder-email-disabled":"Add members","invitation_modal.members.share_link.copy_button":"Copy Link","invitation_modal.members.share_link.description":"Share this link to invite people to this team.","invitation_modal.members.share_link.input":"team invite link","invitation_modal.members.share_link.link_copied":"Link Copied","invitation_modal.members.share_link.title":"Share This Link","invitation_modal.members.title":"Invite **Members** to {teamName}","invitation_modal.members.users_emails_input.no_user_found_matching":"No one found matching **{text}**, type email to invite","invitation_modal.members.users_emails_input.no_user_found_matching-email-disabled":"No one found matching **{text}**","invitation_modal.members.users_emails_input.valid_email":"Invite **{email}** as a team member","invitation_modal.title":"Invite people to **{teamName}**","invitation-modal.confirm.details-header":"Details","invitation-modal.confirm.not-valid-channel":"Does not match a valid channel name.","invitation-modal.confirm.not-valid-user-or-email":"Does not match a valid user or email.","invitation-modal.confirm.people-header":"People","invitation-modal.discard-changes.button":"Yes, Discard","invitation-modal.discard-changes.message":"You have unsent invitations, are you sure you want to discard them?","invitation-modal.discard-changes.title":"Discard Changes","invitation-modal.notify-admin.failed":"Failed. Try again later.","invitation-modal.notify-admin.notify":"Notify the admin.","invitation-modal.notify-admin.sending":"Sending...","invitation-modal.notify-admin.sent":"Sent!","invite.guests.added-to-channel":"An invitation email has been sent.","invite.guests.already-all-channels-member":"This person is already a member of all the channels.","invite.guests.already-some-channels-member":"This person is already a member of some of the channels.","invite.guests.new-member":"This guest has been added to the team and {count, plural, one {channel} other {channels}}.","invite.guests.unable-to-add-the-user-to-the-channels":"Unable to add the guest to the channels.","invite.members.added-to-team":"This member has been added to the team.","invite.members.already-member":"This person is already a team member.","invite.members.invite-sent":"An invitation email has been sent.","invite.members.unable-to-add-the-user-to-the-team":"Unable to add the user to the team.","invite.members.user-is-guest":"Contact your admin to make this guest a full member.","invite.members.user-is-not-guest":"This person is already a member.","invite.rate-limit-exceeded":"Invite emails rate limit exceeded.",join_team_group_constrained_denied:"You need to be a member of a linked group to join this team.",join_team_group_constrained_denied_admin:"You need to be a member of a linked group to join this team. You can add a group to this team [here]({siteURL}/admin_console/user_management/groups).","katex.error":"Couldn't compile your Latex code. Please review the syntax and try again.","last_users_message.added_to_channel.type":"were **added to the channel** by {actor}.","last_users_message.added_to_team.type":"were **added to the team** by {actor}.","last_users_message.first":"{firstUser} and ","last_users_message.joined_channel.type":"**joined the channel**.","last_users_message.joined_team.type":"**joined the team**.","last_users_message.left_channel.type":"**left the channel**.","last_users_message.left_team.type":"**left the team**.","last_users_message.others":"{numOthers} others ","last_users_message.removed_from_channel.type":"were **removed from the channel**.","last_users_message.removed_from_team.type":"were **removed from the team**.","leave_private_channel_modal.leave":"Yes, leave channel","leave_private_channel_modal.message":"Are you sure you wish to leave the private channel {channel}? You must be re-invited in order to re-join this channel in the future.","leave_private_channel_modal.title":"Leave Private Channel {channel}","leave_team_modal_guest_only_private.desc":"**You will be removed from {num_of_private_channels} private { num_of_private_channels,plural,one {channel} other {channels}} on this team.** You won't be able to rejoin it without an invitation from another team member. Are you sure?","leave_team_modal_guest_only_public.desc":"**You will be removed from {num_of_public_channels} public { num_of_public_channels,plural,one {channel} other {channels}} on this team.** You won't be able to rejoin it without an invitation from another team member. Are you sure?","leave_team_modal_guest.desc":"**You will be removed from {num_of_public_channels} public { num_of_public_channels,plural,one {channel} other {channels}} and {num_of_private_channels} private { num_of_private_channels,plural,one {channel} other {channels}} on this team.** You won't be able to rejoin it without an invitation from another team member. Are you sure?","leave_team_modal_private.desc":"**You will be removed from {num_of_private_channels} private { num_of_private_channels,plural,one {channel} other {channels} } on this team.** If the team is private you won't be able to rejoin it the team without an invitation from another team member. Are you sure?","leave_team_modal_public.desc":"**You will be removed from {num_of_public_channels} public { num_of_public_channels,plural,one {channel} other {channels} } on this team.** Are you sure?","leave_team_modal.desc":"**You will be removed from {num_of_public_channels} public { num_of_public_channels,plural,one {channel} other {channels}} and {num_of_private_channels} private { num_of_private_channels,plural,one {channel} other {channels}} on this team.** If the team is private you won't be able to rejoin it without an invitation from another team member. Are you sure?","leave_team_modal.no":"No","leave_team_modal.title":"Leave the team?","leave_team_modal.yes":"Yes","list_modal.paginatorCount":"{startCount, number} - {endCount, number} of {total, number} total","loading_screen.loading":"Loading",local:"local","manage_channel_groups_modal.search_placeholder":"Search groups","manage_team_groups_modal.search_placeholder":"Search groups","members_popover.button.message":"message","members_popover.manageMembers":"Manage Members","members_popover.title":"Channel Members","members_popover.viewMembers":"View Members","message_submit_error.invalidCommand":"Command with a trigger of ''{command}'' not found. ","message_submit_error.sendAsMessageLink":"Click here to send as a message.","mobile.set_status.away.icon":"Away Icon","mobile.set_status.dnd.icon":"Do Not Disturb Icon","mobile.set_status.offline.icon":"Offline Icon","mobile.set_status.online.icon":"Online Icon","modal.manual_status.ask":"Do not ask me again","modal.manual_status.auto_responder.message_":'Would you like to switch your status to "{status}" and disable Automatic Replies?',"modal.manual_status.auto_responder.message_away":'Would you like to switch your status to "Away" and disable Automatic Replies?',"modal.manual_status.auto_responder.message_dnd":'Would you like to switch your status to "Do Not Disturb" and disable Automatic Replies?',"modal.manual_status.auto_responder.message_offline":'Would you like to switch your status to "Offline" and disable Automatic Replies?',"modal.manual_status.auto_responder.message_online":'Would you like to switch your status to "Online" and disable Automatic Replies?',"modal.manual_status.button_":'Yes, set my status to "{status}"',"modal.manual_status.button_away":'Yes, set my status to "Away"',"modal.manual_status.button_dnd":'Yes, set my status to "Do Not Disturb"',"modal.manual_status.button_offline":'Yes, set my status to "Offline"',"modal.manual_status.button_online":'Yes, set my status to "Online"',"modal.manual_status.cancel_":'No, keep it as "{status}"',"modal.manual_status.cancel_away":'No, keep it as "Away"',"modal.manual_status.cancel_dnd":'No, keep it as "Do Not Disturb"',"modal.manual_status.cancel_offline":'No, keep it as "Offline"',"modal.manual_status.cancel_ooo":'No, keep it as "Out of Office"',"modal.manual_status.message_":'Would you like to switch your status to "{status}"?',"modal.manual_status.message_away":'Would you like to switch your status to "Away"?',"modal.manual_status.message_dnd":'Would you like to switch your status to "Do Not Disturb"?',"modal.manual_status.message_offline":'Would you like to switch your status to "Offline"?',"modal.manual_status.message_online":'Would you like to switch your status to "Online"?',"modal.manual_status.title_":'Your Status is Set to "{status}"',"modal.manual_status.title_away":'Your Status is Set to "Away"',"modal.manual_status.title_dnd":'Your Status is Set to "Do Not Disturb"',"modal.manual_status.title_offline":'Your Status is Set to "Offline"',"modal.manual_status.title_ooo":'Your Status is Set to "Out of Office"',"more_channels.create":"Create Channel","more_channels.createClick":"Click 'Create New Channel' to make a new one","more_channels.joining":"Joining...","more_channels.next":"Next","more_channels.noMore":"No more channels to join","more_channels.prev":"Previous","more_channels.show_archived_channels":"Show: Archived Channels","more_channels.show_public_channels":"Show: Public Channels","more_channels.title":"More Channels","more_direct_channels.directchannel.deactivated":"{displayname} - Deactivated","more_direct_channels.directchannel.you":"{displayname} (you)","more_direct_channels.new_convo_note":"This will start a new conversation. If you're adding a lot of people, consider creating a private channel instead.","more_direct_channels.new_convo_note.full":"You've reached the maximum number of people for this conversation. Consider creating a private channel instead.","more_direct_channels.title":"Direct Messages","more_public_direct_channels.channels":"Channels","more_public_direct_channels.direct_messages":"Direct Messages","more_public_direct_channels.title":"Channels and Direct Messages","msg_typing.areTyping":"{users} and {last} are typing...","msg_typing.isTyping":"{user} is typing...","multiselect.add":"Add","multiselect.addChannelsPlaceholder":"Search and add channels","multiselect.addGroupsPlaceholder":"Search and add groups","multiselect.adding":"Adding...","multiselect.addTeamsPlaceholder":"Search and add teams","multiselect.go":"Go","multiselect.list.notFound":"No results found matching **{searchQuery}**","multiselect.loading":"Loading...","multiselect.numGroupsRemaining":"Use ↑↓ to browse, ↵ to select. You can add {num, number} more {num, plural, one {group} other {groups}}. ","multiselect.numMembers":"{memberOptions, number} of {totalCount, number} members","multiselect.numPeopleRemaining":"Use ↑↓ to browse, ↵ to select. You can add {num, number} more {num, plural, one {person} other {people}}. ","multiselect.numRemaining":"You can add {num, number} more","multiselect.placeholder":"Search for people","multiselect.selectChannels":"Use ↑↓ to browse, ↵ to select.","multiselect.selectTeams":"Use ↑↓ to browse, ↵ to select.","navbar_dropdown.about":"About {appTitle}","navbar_dropdown.accountSettings":"Account Settings","navbar_dropdown.addGroupsToTeam":"Add Groups to Team","navbar_dropdown.console":"System Console","navbar_dropdown.create":"Create a Team","navbar_dropdown.help":"Help","navbar_dropdown.logout":"Log Out","navbar_dropdown.menuAriaLabel":"main menu","navbar_dropdown.switchTo":"Switch to ","navbar_dropdown.teamSettings":"Team Settings","navbar_dropdown.viewMembers":"View Members","navbar.addGroups":"Add Groups","navbar.addMembers":"Add Members","navbar.click":"Click here","navbar.clickToAddHeader":"{clickHere} to add one.","navbar.noHeader":"No channel header yet.","navbar.preferences":"Notification Preferences","navbar.toggle2":"Toggle sidebar","navbar.viewInfo":"View Info","navbar.viewPinnedPosts":"View Pinned Posts","no_results.channel_files_filtered.subtitle":"This channel doesn't contains any file with the selected file format.","no_results.channel_files_filtered.title":"No files found","no_results.channel_files.subtitle":"Files posted in this channel will show here.","no_results.channel_files.title":"No files yet","no_results.channel_search.subtitle":"Check the spelling or try another search.","no_results.contact_search.subtitle":"Check the spelling or try another search.","no_results.channel_search.title":"No results for {channelName}","no_results.contact_search.title":"No contacts match with {channelName}","no_results.flagged_posts.subtitle":"Saved messages are only visible to you. Mark messages for follow-up or save something for later by clicking the {icon} to save them here.","no_results.flagged_posts.title":"No Saved posts yet","no_results.mentions.subtitle":"Messages where someone mentions you or includes your trigger words are saved here.","no_results.mentions.title":"No mentions yet","no_results.pinned_posts.subtitle":"Pin important messages which are visible to the whole channel. Open the context menu on a message and choose {text} to save it here.","no_results.pinned_posts.title":"No pinned posts yet","notification.dm":"Direct Message","notify_all.confirm":"Confirm","notify_all.question":"By using @all or @group you are about to send notifications to {totalMembers} people. Are you sure you want to do this?","notify_all.question_groups":"By using **{mentions}** and **{finalMention}** you are about to send notifications to at least **{totalMembers} people**. Are you sure you want to do this?","notify_all.question_one_group":"By using **{mention}** you are about to send notifications to **{totalMembers} people**. Are you sure you want to do this?","notify_all.question_timezone":"By using @all or @group you are about to send notifications to **{totalMembers} people** in **{timezones, number} {timezones, plural, one {timezone} other {timezones}}**. Are you sure you want to do this?","notify_all.question_timezone_groups":"By using **{mentions}** and **{finalMention}** you are about to send notifications to at least **{totalMembers} people** in **{timezones, number} {timezones, plural, one {timezone} other {timezones}}**. Are you sure you want to do this?","notify_all.question_timezone_one_group":"By using **{mention}** you are about to send notifications to **{totalMembers} people** in **{timezones, number} {timezones, plural, one {timezone} other {timezones}}**. Are you sure you want to do this?","notify_all.title.confirm":"Confirm Sending Notifications to Entire Channel","notify_all.title.confirm_groups":"Confirm sending notifications to groups",numMembers:"{num, number} {num, plural, one {member} other {members}}",passwordRequirements:"Password Requirements:","pending_post_actions.cancel":"Cancel","pending_post_actions.retry":"Retry","permalink.error.access":"Permalink belongs to a deleted message or to a channel to which you do not have access.","permalink.error.title":"Message Not Found","permalink.show_dialog_warn.description":"You are about to join {channel} without explicitly being added by the channel admin. Are you sure you wish to join this private channel?","permalink.show_dialog_warn.join":"Join","permalink.show_dialog_warn.title":"Join private channel","picture_selector.image.ariaLabel":"Picture selector image","picture_selector.remove_picture":"Remove picture","picture_selector.select_button.ariaLabel":"Select picture","post_body.check_for_out_of_channel_groups_mentions.message":"did not get notified by this mention because they are not in the channel. They cannot be added to the channel because they are not a member of the linked groups. To add them to this channel, they must be added to the linked groups.","post_body.check_for_out_of_channel_mentions.link.and":" and ","post_body.check_for_out_of_channel_mentions.link.private":"add them to this private channel","post_body.check_for_out_of_channel_mentions.link.public":"add them to the channel","post_body.check_for_out_of_channel_mentions.message_last":"? They will have access to all message history.","post_body.check_for_out_of_channel_mentions.message.multiple":"did not get notified by this mention because they are not in the channel. Would you like to ","post_body.check_for_out_of_channel_mentions.message.one":"did not get notified by this mention because they are not in the channel. Would you like to ","post_body.check_for_out_of_channel_mentions.others":"{numOthers} others","post_body.commentedOn":"Commented on {name}'s message: ","post_body.deleted":"(message deleted)","post_body.plusMore":" plus {count, number} other {count, plural, one {file} other {files}}","post_delete.notPosted":"Comment could not be posted","post_delete.okay":"Okay","post_delete.someone":"Someone deleted the message on which you tried to post a comment.","post_header.update_status":"Update your status","post_info.auto_responder":"AUTOMATIC REPLY","post_info.bot":"BOT","post_info.comment_icon.tooltip.reply":"Reply","post_info.del":"Delete","post_info.dot_menu.tooltip.more_actions":"More actions","post_info.edit":"Edit","post_info.guest":"GUEST","post_info.info.view_additional_info":"View additional info","post_info.menuAriaLabel":"Post extra options","post_info.message.show_less":"Show less","post_info.message.show_more":"Show more","post_info.message.visible":"(Only visible to you)","post_info.message.visible.compact":" (Only visible to you)","post_info.permalink":"Copy Link","post_info.pin":"Pin to Channel","post_info.reply":"Reply","post_info.submenu.icon":"submenu icon","post_info.submenu.mobile":"mobile submenu","post_info.system":"System","post_info.tooltip.add_reactions":"Add Reaction","post_info.unpin":"Unpin from Channel","post_info.unread":"Mark as Unread","post_message_view.edited":"(edited)","post_pre_header.flagged":"Saved","post_pre_header.pinned":"Pinned","post.ariaLabel.attachment":", 1 attachment","post.ariaLabel.attachmentMultiple":", {attachmentCount} attachments","post.ariaLabel.message":"At {time} {date}, {authorName} wrote, {message}","post.ariaLabel.messageIsFlagged":", message is saved","post.ariaLabel.messageIsFlaggedAndPinned":", message is saved and pinned","post.ariaLabel.messageIsPinned":", message is pinned","post.ariaLabel.reaction":", 1 reaction","post.ariaLabel.reactionMultiple":", {reactionCount} reactions","post.ariaLabel.replyMessage":"At {time} {date}, {authorName} replied, {message}","postlist.toast.history":"Viewing message history","postlist.toast.newMessages":"{count, number} new {count, plural, one {message} other {messages}}","postlist.toast.newMessagesSince":"{count, number} new {count, plural, one {message} other {messages}} {isToday, select, true {} other {since}} {date}","postlist.toast.scrollToBottom":"Jump to recents","postlist.toast.scrollToLatest":"Jump to new messages","postlist.toast.searchHint":"Tip: Try {searchShortcut} to search this channel","posts_view.loadMore":"Load More messages","posts_view.newMsg":"New Messages","promote_to_user_modal.desc":"This action promotes the guest {username} to a member. It will allow the user to join public channels and interact with users outside of the channels they are currently members of. Are you sure you want to promote guest {username} to member?","promote_to_user_modal.promote":"Promote","promote_to_user_modal.title":"Promote guest {username} to member","quick_switch_modal.channels":"Channels","quick_switch_modal.channelsShortcut.mac":"- ⌘K","quick_switch_modal.channelsShortcut.windows":"- CTRL+K","quick_switch_modal.help":"Start typing then use TAB to toggle channels/teams, **▲▼** to browse, **ENTER** to select, **ESC** to dismiss.","quick_switch_modal.help_mobile":"Type to find a channel.","quick_switch_modal.help_no_team":"Type to find a channel. Use **UP/DOWN** to browse, **ENTER** to select, **ESC** to dismiss.","quick_switch_modal.input":"quick switch input","quick_switch_modal.switchChannels":"Switch a chat","quick_switch_modal.teams":"Teams","quick_switch_modal.teamsShortcut.mac":"- ⌘⌥K","quick_switch_modal.teamsShortcut.windows":"- CTRL+ALT+K","reaction_list.addReactionTooltip":"Add a reaction","reaction.add.ariaLabel":"Add a reaction","reaction.clickToAdd":"(click to add)","reaction.clickToRemove":"(click to remove)","reaction.container.ariaLabel":"reactions","reaction.othersReacted":"{otherUsers, number} {otherUsers, plural, one {user} other {users}}","reaction.reacted":"{users} {reactionVerb} with {emoji}","reaction.reactionVerb.user":"reacted","reaction.reactionVerb.users":"reacted","reaction.reactionVerb.you":"reacted","reaction.reactionVerb.youAndUsers":"reacted","reaction.reactWidth.ariaLabel":"react with","reaction.removeReact.ariaLabel":"remove reaction","reaction.usersAndOthersReacted":"{users} and {otherUsers, number} other {otherUsers, plural, one {user} other {users}}","reaction.usersReacted":"{users} and {lastUser}","reaction.you":"You",remove_group_confirm_button:"Yes, Remove Group and {memberCount, plural, one {Member} other {Members}}",remove_group_confirm_message:"{memberCount, number} {memberCount, plural, one {member} other {members}} associated to this group will be removed from the team. Are you sure you wish to remove this group and {memberCount} {memberCount, plural, one {member} other {members}}?",remove_group_confirm_title:"Remove Group and {memberCount, number} {memberCount, plural, one {Member} other {Members}}","remove_next_steps_modal.confirm":"Remove","remove_next_steps_modal.header":"Remove {title}?","remove_next_steps_modal.helpText":"Access {title} any time through the Main Menu","remove_next_steps_modal.mainText":"This will remove this section from your sidebar, but you can access it later in the Help section of the Main Menu.","removed_channel.channelName":"the channel","removed_channel.from":"Removed from ","removed_channel.okay":"Okay","removed_channel.remover":"{remover} removed you from {channel}","removed_channel.someone":"Someone","rename_category_modal.rename":"Rename","rename_category_modal.renameCategory":"Rename Category","rename_channel.cancel":"Cancel","rename_channel.defaultError":" - Cannot be changed for the default channel","rename_channel.displayName":"Display Name","rename_channel.displayNameHolder":"Enter display name","rename_channel.maxLength":"This field must be less than {maxLength, number} characters","rename_channel.minLength":"Display name must have at least {minLength, number} characters.","rename_channel.save":"Save","rename_channel.title":"Rename Channel","rename_channel.url":"URL","revoke_user_sessions_modal.desc":"This action revokes all sessions for {username}. They will be logged out from all devices. Are you sure you want to revoke all sessions for {username}?","revoke_user_sessions_modal.revoke":"Revoke","revoke_user_sessions_modal.title":"Revoke Sessions for {username}","rhs_card.jump":"Jump","rhs_card.message_by":"Message by {avatar} {user}","rhs_comment.comment":"Comment","rhs_header.backToFlaggedTooltip":"Back to saved posts","rhs_header.backToPinnedTooltip":"Back to pinned posts","rhs_header.backToResultsTooltip":"Back to search results","rhs_header.closeSidebarTooltip":"Close","rhs_header.closeTooltip.icon":"Close Sidebar Icon","rhs_header.collapseSidebarTooltip":"Collapse Sidebar","rhs_header.collapseSidebarTooltip.icon":"Collapse Sidebar Icon","rhs_header.details":"Thread","rhs_header.expandSidebarTooltip":"Expand Sidebar","rhs_header.expandSidebarTooltip.icon":"Expand Sidebar Icon","rhs_root.mobile.add_reaction":"Add Reaction","rhs_root.mobile.flag":"Save","rhs_root.mobile.unflag":"Remove from Saved","rhs_thread.rootPostDeletedMessage.body":"Part of this thread has been deleted due to a data retention policy. You can no longer reply to this thread.","save_button.save":"Save","save_button.saving":"Saving","search_bar.files_tab":"Files","search_bar.messages_tab":"Messages","search_bar.search":"Search","search_bar.search_types.files":"FILES","search_bar.search_types.messages":"MESSAGES","search_bar.usage.search_type_files":"Files","search_bar.usage.search_type_messages":"Messages","search_bar.usage.search_type_question":"What are you searching for?","search_bar.usage.title":"Search options","search_bar.usage.title_files":"File search options","search_bar.usage.title_messages":"Message search options","search_files_list_option.after":"Files after a date","search_files_list_option.before":"Files before a date","search_files_list_option.exclude":"Exclude search terms","search_files_list_option.ext":"Files with a extension","search_files_list_option.from":"Files from a user","search_files_list_option.in":"Files in a channel","search_files_list_option.on":"Files on a date","search_files_list_option.phrases":"Files with phrases","search_header.loading":"Searching...","search_header.title5":"Extra Information","search_item.channelArchived":"Archived","search_item.direct":"Direct Message (with {username})","search_item.file_badge.direct_message":"Direct Message","search_item.file_badge.group_message":"Group Message","search_item.jump":"Jump","search_list_option.after":"Messages after a date","search_list_option.before":"Messages before a date","search_list_option.exclude":"Exclude search terms","search_list_option.from":"Messages from a user","search_list_option.in":"Messages in a channel","search_list_option.on":"Messages on a date","search_list_option.phrases":"Messages with phrases","search_results.channel-files-header":"Recent files","search_results.usage.dataRetention":"Only messages posted in the last {days} days are returned. Contact your System Administrator for more detail.","select_team.icon":"Select Team Icon","select_team.join.icon":"Join Team Icon","select_team.private.icon":"Private Team","setting_item_max.cancel":"Cancel","setting_item_min.edit":"Edit","setting_picture.cancel":"Cancel","setting_picture.help.profile":"Upload a picture in BMP, JPG or PNG format. Maximum file size: {max}","setting_picture.help.team":"Upload a team icon in BMP, JPG or PNG format.\nSquare images with a solid background color are recommended.","setting_picture.remove":"Remove This Icon","setting_picture.remove_profile_picture":"Remove Profile Picture","setting_picture.save":"Save","setting_picture.select":"Select","setting_picture.uploading":"Uploading...","setting_upload.import":"Import","setting_upload.noFile":"No file selected.","setting_upload.select":"Select file","shared_channel_indicator.tooltip":"Shared with trusted organizations","shared_user_indicator.tooltip":"From a trusted organization","sidebar_header.tutorial.body1":"The **Main Menu** is where you can **Invite New Members**, access your **Account Settings** and set your **Theme Color**.","sidebar_header.tutorial.body2":"Team administrators can also access their **Team Settings** from this menu.","sidebar_header.tutorial.body3":"System administrators will find a **System Console** option to administrate the entire system.","sidebar_header.tutorial.title":"Main Menu","sidebar_left.add_channel_dropdown.browseChannels":"Browse Channels","sidebar_left.add_channel_dropdown.browseOrCreateChannels":"Browse or create channels","sidebar_left.add_channel_dropdown.createCategory":"Create New Category","sidebar_left.add_channel_dropdown.createNewChannel":"Create New Channel","sidebar_left.add_channel_dropdown.dropdownAriaLabel":"Add Channel Dropdown","sidebar_left.channel_filter.filterByUnread":"Filter by unread","sidebar_left.channel_filter.showAllChannels":"Show all channels","sidebar_left.channel_navigator.channelSwitcherLabel":"Channel Switcher","sidebar_left.channel_navigator.goBackLabel":"Back","sidebar_left.channel_navigator.goForwardLabel":"Forward","sidebar_left.channel_navigator.jumpTo":"Find contacts or chat","sidebar_left.sidebar_category_menu.createCategory":"Create New Category","sidebar_left.sidebar_category_menu.deleteCategory":"Delete Category","sidebar_left.sidebar_category_menu.dropdownAriaLabel":"Edit category menu","sidebar_left.sidebar_category_menu.editCategory":"Category options","sidebar_left.sidebar_category_menu.muteCategory":"Mute Category","sidebar_left.sidebar_category_menu.renameCategory":"Rename Category","sidebar_left.sidebar_category_menu.unmuteCategory":"Unmute Category","sidebar_left.sidebar_category.newDropBoxLabel":"Drag channels here...","sidebar_left.sidebar_category.newLabel":"new","sidebar_left.sidebar_channel_menu.addMembers":"Add Members","sidebar_left.sidebar_channel_menu.copyLink":"Copy Link","sidebar_left.sidebar_channel_menu.dropdownAriaLabel":"Edit channel menu","sidebar_left.sidebar_channel_menu.editChannel":"Channel options","sidebar_left.sidebar_channel_menu.favoriteChannel":"Favorite","sidebar_left.sidebar_channel_menu.leaveChannel":"Leave Channel","sidebar_left.sidebar_channel_menu.leaveConversation":"Close Conversation","sidebar_left.sidebar_channel_menu.markAsRead":"Mark as Read","sidebar_left.sidebar_channel_menu.moveTo":"Move to","sidebar_left.sidebar_channel_menu.moveToNewCategory":"New Category","sidebar_left.sidebar_channel_menu.muteChannel":"Mute Channel","sidebar_left.sidebar_channel_menu.muteConversation":"Mute Conversation","sidebar_left.sidebar_channel_menu.unfavoriteChannel":"Unfavorite","sidebar_left.sidebar_channel_menu.unmuteChannel":"Unmute Channel","sidebar_left.sidebar_channel_menu.unmuteConversation":"Unmute Conversation","sidebar_left.sidebar_channel.selectedCount":"{count} selected","sidebar_next_steps.gettingStarted":"Getting Started","sidebar_next_steps.otherAreasToExplore":"A few other areas to explore","sidebar_next_steps.stepsComplete":"{complete} / {total} steps complete","sidebar_next_steps.tipsAndNextSteps":"Tips & Next Steps","sidebar_right_menu.console":"System Console","sidebar_right_menu.flagged":"Saved Posts","sidebar_right_menu.recentMentions":"Recent Mentions","sidebar.allDirectMessages":"All direct messages","sidebar.browseChannelDirectChannel":"Browse channels and direct messages","sidebar.createChannel":"Create a public channel","sidebar.createDirectMessage":"Write a direct message","sidebar.createGroup":"Create a private channel","sidebar.createPublicPrivateChannel":"Create a public or private channel","sidebar.directchannel.you":"{displayname} (you)","sidebar.leave":"Leave the channel","sidebar.moreDmAria":"See more direct messages","sidebar.moreElips":"More...","sidebar.morePublicAria":"See more public channels","sidebar.morePublicDmAria":"See more public channels and direct messages","sidebar.openDirectMessage":"Open a Direct Message","sidebar.removeList":"Remove from this list","sidebar.show":"Show","sidebar.sort":"Sort","sidebar.sortedByRecencyLabel":"Recent activity","sidebar.sortedManually":"Manually","sidebar.team_select":"{siteName} - Join a team","sidebar.types.alpha":"Groups","sidebar.types.channels":"Groups","sidebar.types.direct":"Direct messages","sidebar.types.direct_messages":"Direct messages","sidebar.types.favorite":"Favorite channel","sidebar.types.favorites":"Favorites","sidebar.types.private":"Private groups","sidebar.types.public":"Public groups","sidebar.types.recent":"Recent activity","sidebar.types.unreads":"Unreads","sidebar.unreads":"More unreads","someting.string":"defaultString","status_dropdown.custom_status.tooltip_clear":"Clear","status_dropdown.dnd_sub_menu_header":"Disable notifications until:","status_dropdown.menuAriaLabel":"set status","status_dropdown.set_away":"Away","status_dropdown.set_custom":"Set a Custom Status","status_dropdown.set_dnd":"Do Not Disturb","status_dropdown.set_dnd.extra":"Disables all notifications","status_dropdown.set_offline":"Offline","status_dropdown.set_online":"Online","status_dropdown.set_ooo":"Out of Office","status_dropdown.set_ooo.extra":"Automatic Replies are enabled","status_dropdown.set_your_status":"Set your status","string.id":"default message","suggestion_list.no_matches":"No items match __{value}__","suggestion.archive":"Archived Channels","suggestion.mention.all":"Notifies everyone in this channel","suggestion.mention.channel":"Notifies everyone in this channel","suggestion.mention.channels":"My Channels","suggestion.mention.groups":"Group Mentions","suggestion.mention.here":"Notifies everyone online in this channel","suggestion.mention.members":"Channel Members","suggestion.mention.morechannels":"Other Channels","suggestion.mention.moremembers":"Other Members","suggestion.mention.nonmembers":"Not in Channel","suggestion.mention.special":"Special Mentions","suggestion.mention.unread.channels":"Unread Channels","suggestion.search.direct":"Direct Messages","suggestion.search.private":"Private Channels","suggestion.search.public":"Public Channels","suggestion.user.isCurrent":"(you)","textbox.bold":"**bold**","textbox.edit":"Edit message","textbox.help":"Help","textbox.inlinecode":"`inline code`","textbox.italic":"*italic*","textbox.preformatted":"```preformatted```","textbox.preview":"Preview","textbox.quote":">quote","textbox.strike":"strike","threading.filters.allThreads":"All your threads","threading.filters.unreads":"Unreads","threading.following":"Following","threading.footer.lastReplyAt":"Last reply {formatted}","threading.header.heading":"Thread","threading.notFollowing":"Follow","threading.numNewMessages":"{newReplies, plural, =0 {No unread messages} =1 {One unread message} other {# unread messages}}","threading.numNewReplies":"{newReplies, plural, =1 {# new reply} other {# new replies}}","threading.numReplies":"{totalReplies, plural, =0 {Reply} =1 {# reply} other {# replies}}","threading.threadHeader.menu":"More Actions","threading.threadItem.menu":"Actions","threading.threadList.markRead":"Mark all as read","threading.threadMenu.copy":"Copy link","threading.threadMenu.follow":"Follow thread","threading.threadMenu.followExtra":"You will be notified about replies","threading.threadMenu.markRead":"Mark as read","threading.threadMenu.markUnread":"Mark as unread","threading.threadMenu.openInChannel":"Open in channel","threading.threadMenu.save":"Save","threading.threadMenu.unfollow":"Unfollow thread","threading.threadMenu.unfollowExtra":"You won’t be notified about replies","threading.threadMenu.unsave":"Unsave","timestamp.datetime":"{relativeOrDate} at {time}","upload_overlay.info":"Drop a file to upload it.","user_list.notFound":"No users found","user_profile.account.editSettings":"Edit Account Settings","user_profile.account.localTime":"Local Time","user_profile.account.post_was_created":"This post was created by an integration from","user_profile.add_user_to_channel":"Add to a Channel","user_profile.add_user_to_channel.icon":"Add User to Channel Icon","user_profile.custom_status":"Status","user_profile.custom_status.set_status":"Set a status","user_profile.send.dm":"Send Message","user_profile.send.dm.icon":"Send Message Icon","user.settings.advance.confirmDeactivateAccountTitle":"Confirm Deactivation","user.settings.advance.confirmDeactivateDesc":"Are you sure you want to deactivate your account? This can only be reversed by your System Administrator.","user.settings.advance.deactivate_member_modal.deactivateButton":"Yes, deactivate my account","user.settings.advance.deactivateAccountTitle":"Deactivate Account","user.settings.advance.deactivateDesc":"Deactivating your account removes your ability to log in to this server and disables all email and mobile notifications. To reactivate your account, contact your System Administrator.","user.settings.advance.deactivateDescShort":"Click 'Edit' to deactivate your account","user.settings.advance.enabledFeatures":"{count, number} {count, plural, one {Feature} other {Features}} Enabled","user.settings.advance.formattingDesc":"If enabled, posts will be formatted to create links, show emoji, style the text, and add line breaks. By default, this setting is enabled.","user.settings.advance.formattingTitle":"Enable Post Formatting","user.settings.advance.icon":"Advanced Settings Icon","user.settings.advance.joinLeaveDesc":'When "On", System Messages saying a user has joined or left a channel will be visible. When "Off", the System Messages about joining or leaving a channel will be hidden. A message will still show up when you are added to a channel, so you can receive a notification.',"user.settings.advance.joinLeaveTitle":"Enable Join/Leave Messages","user.settings.advance.markdown_preview":"Show markdown preview option in message input box","user.settings.advance.off":"Off","user.settings.advance.on":"On","user.settings.advance.onForAllMessages":"On for all messages","user.settings.advance.onForCode":"On only for code blocks starting with ```","user.settings.advance.preReleaseDesc":"Check any pre-released features you'd like to preview.  You may also need to refresh the page before the setting will take effect.","user.settings.advance.preReleaseTitle":"Preview Pre-release Features","user.settings.advance.sendDesc":"When enabled, CTRL + ENTER will send the message and ENTER inserts a new line.","user.settings.advance.sendDesc.mac":"When enabled, ⌘ + ENTER will send the message and ENTER inserts a new line.","user.settings.advance.sendTitle":"Send Messages on CTRL+ENTER","user.settings.advance.sendTitle.mac":"Send Messages on ⌘+ENTER","user.settings.advance.title":"Advanced Settings","user.settings.custom_theme.awayIndicator":"Away Indicator","user.settings.custom_theme.buttonBg":"Button BG","user.settings.custom_theme.buttonColor":"Button Text","user.settings.custom_theme.centerChannelBg":"Center Channel BG","user.settings.custom_theme.centerChannelColor":"Center Channel Text","user.settings.custom_theme.centerChannelTitle":"Center Channel Styles","user.settings.custom_theme.codeTheme":"Code Theme","user.settings.custom_theme.copied":"✔ Copied","user.settings.custom_theme.copyPaste":"Copy and paste to share theme colors:","user.settings.custom_theme.copyThemeColors":"Copy Theme Colors","user.settings.custom_theme.dndIndicator":"Do Not Disturb Indicator","user.settings.custom_theme.errorTextColor":"Error Text Color","user.settings.custom_theme.linkButtonTitle":"Link and Button Styles","user.settings.custom_theme.linkColor":"Link Color","user.settings.custom_theme.mentionBg":"Mention Jewel BG","user.settings.custom_theme.mentionColor":"Mention Jewel Text","user.settings.custom_theme.mentionHighlightBg":"Mention Highlight BG","user.settings.custom_theme.mentionHighlightLink":"Mention Highlight Link","user.settings.custom_theme.newMessageSeparator":"New Message Separator","user.settings.custom_theme.onlineIndicator":"Online Indicator","user.settings.custom_theme.sidebarBg":"Sidebar BG","user.settings.custom_theme.sidebarHeaderBg":"Sidebar Header BG","user.settings.custom_theme.sidebarHeaderTextColor":"Sidebar Header Text","user.settings.custom_theme.sidebarTeamBarBg":"Team Sidebar BG","user.settings.custom_theme.sidebarText":"Sidebar Text","user.settings.custom_theme.sidebarTextActiveBorder":"Sidebar Text Active Border","user.settings.custom_theme.sidebarTextActiveColor":"Sidebar Text Active Color","user.settings.custom_theme.sidebarTextHoverBg":"Sidebar Text Hover BG","user.settings.custom_theme.sidebarTitle":"Sidebar Styles","user.settings.custom_theme.sidebarUnreadText":"Sidebar Unread Text","user.settings.display.channeldisplaymode":"Select the width of the center channel.","user.settings.display.channelDisplayTitle":"Channel Display","user.settings.display.clockDisplay":"Clock Display","user.settings.display.collapseDesc":"Set whether previews of image links and image attachment thumbnails show as expanded or collapsed by default. This setting can also be controlled using the slash commands /expand and /collapse.","user.settings.display.collapseDisplay":"Default Appearance of Image Previews","user.settings.display.collapsedReplyThreadsDescription":"When enabled, reply messages are not shown in the channel view. You can still read and reply to threads in the right-hand sidebar. You'll be notified about threads you're following in a new \"Threads\" item in the channel sidebar.","user.settings.display.collapsedReplyThreadsOff":"Off","user.settings.display.collapsedReplyThreadsOn":"On","user.settings.display.collapsedReplyThreadsTitle":"Collapsed Reply Threads (Beta)","user.settings.display.collapseOff":"Collapsed","user.settings.display.collapseOn":"Expanded","user.settings.display.fixedWidthCentered":"Fixed width, centered","user.settings.display.fullScreen":"Full width","user.settings.display.icon":"Display Settings Icon","user.settings.display.language":"Language","user.settings.display.linkPreviewDesc":"When available, the first web link in a message will show a preview of the website content below the message.","user.settings.display.linkPreviewDisplay":"Website Link Previews","user.settings.display.linkPreviewOff":"Off","user.settings.display.linkPreviewOn":"On","user.settings.display.messageDisplayClean":"Standard","user.settings.display.messageDisplayCleanDes":"Easy to scan and read.","user.settings.display.messageDisplayCompact":"Compact","user.settings.display.messageDisplayCompactDes":"Fit as many messages on the screen as we can.","user.settings.display.messageDisplayDescription":"Select how messages in a channel should be displayed.","user.settings.display.messageDisplayTitle":"Message Display","user.settings.display.militaryClock":"24-hour clock (example: 16:00)","user.settings.display.normalClock":"12-hour clock (example: 4:00 PM)","user.settings.display.preferTime":"Select how you prefer time displayed.","user.settings.display.teammateNameDisplay":"This field is handled through your System Administrator. If you want to change it, you need to do so through your System Administrator.","user.settings.display.teammateNameDisplayDescription":"Set how to display other user's names in posts and the Direct Messages list.","user.settings.display.teammateNameDisplayFullname":"Show first and last name","user.settings.display.teammateNameDisplayNicknameFullname":"Show nickname if one exists, otherwise show first and last name","user.settings.display.teammateNameDisplayTitle":"Teammate Name Display","user.settings.display.teammateNameDisplayUsername":"Show username","user.settings.display.theme.applyToAllTeams":"Apply new theme to all my teams","user.settings.display.theme.customTheme":"Custom Theme","user.settings.display.theme.describe":"Open to manage your theme","user.settings.display.theme.import":"Import theme colors from Slack","user.settings.display.theme.otherThemes":"See other themes","user.settings.display.theme.themeColors":"Theme Colors","user.settings.display.theme.title":"Theme","user.settings.display.timezone":"Timezone","user.settings.display.title":"Display Settings","user.settings.general.close":"Close","user.settings.general.confirmEmail":"Confirm Email","user.settings.general.currentEmail":"Current Email","user.settings.general.currentPassword":"Current Password","user.settings.general.email":"Email","user.settings.general.emailGitlabCantUpdate":"Login occurs through GitLab. Email cannot be updated. Email address used for notifications is {email}.","user.settings.general.emailGoogleCantUpdate":"Login occurs through Google. Email cannot be updated. Email address used for notifications is {email}.","user.settings.general.emailHelp1":"Email is used for sign-in, notifications, and password reset. Email requires verification if changed.","user.settings.general.emailHelp3":"Email is used for sign-in, notifications, and password reset.","user.settings.general.emailLdapCantUpdate":"Login occurs through AD/LDAP. Email cannot be updated. Email address used for notifications is {email}.","user.settings.general.emailMatch":"The new emails you entered do not match.","user.settings.general.emailOffice365CantUpdate":"Login occurs through Office 365. Email cannot be updated. Email address used for notifications is {email}.","user.settings.general.emailOpenIdCantUpdate":"Login occurs through OpenID Connect. Email cannot be updated. Email address used for notifications is {email}.","user.settings.general.emailSamlCantUpdate":"Login occurs through SAML. Email cannot be updated. Email address used for notifications is {email}.","user.settings.general.emptyName":"Click 'Edit' to add your full name","user.settings.general.emptyNickname":"Click 'Edit' to add a nickname","user.settings.general.emptyPassword":"Please enter your current password.","user.settings.general.emptyPosition":"Click 'Edit' to add your job title / position","user.settings.general.field_handled_externally":"This field is handled through your login provider. If you want to change it, you need to do so through your login provider.","user.settings.general.firstName":"First Name","user.settings.general.fullName":"Full Name","user.settings.general.icon":"General Settings Icon","user.settings.general.imageTooLarge":"Unable to upload profile image. File is too large.","user.settings.general.imageUpdated":"Image last updated {date}","user.settings.general.incorrectPassword":"Your password is incorrect.","user.settings.general.lastName":"Last Name","user.settings.general.loginGitlab":"Login done through GitLab ({email})","user.settings.general.loginGoogle":"Login done through Google ({email})","user.settings.general.loginLdap":"Login done through AD/LDAP ({email})","user.settings.general.loginOffice365":"Login done through Office 365 ({email})","user.settings.general.loginSaml":"Login done through SAML ({email})","user.settings.general.mobile.emptyName":"Click to add your full name","user.settings.general.mobile.emptyNickname":"Click to add a nickname","user.settings.general.mobile.emptyPosition":"Click to add your job title / position","user.settings.general.mobile.uploadImage":"Click to upload an image","user.settings.general.newEmail":"New Email","user.settings.general.nickname":"Nickname","user.settings.general.nicknameExtra":"Use Nickname for a name you might be called that is different from your first name and username. This is most often used when two or more people have similar sounding names and usernames.","user.settings.general.notificationsExtra":"By default, you will receive mention notifications when someone types your first name. Go to {notify} settings to change this default.","user.settings.general.notificationsLink":"Notifications","user.settings.general.position":"Position","user.settings.general.positionExtra":"Use Position for your role or job title. This will be shown in your profile popover.","user.settings.general.profilePicture":"Avatar","user.settings.general.sendAgain":"Send again","user.settings.general.sending":"Sending","user.settings.general.title":"General Settings","user.settings.general.uploadImage":"Click 'Edit' to upload an image.","user.settings.general.username":"Username","user.settings.general.usernameInfo":"Pick something easy for teammates to recognize and recall.","user.settings.general.usernameReserved":"This username is reserved, please choose a new one.","user.settings.general.usernameRestrictions":"Username must begin with a letter, and contain between {min} to {max} lowercase characters made up of numbers, letters, and the symbols '.', '-', and '_'.","user.settings.general.validEmail":"Please enter a valid email address","user.settings.general.validImage":"Only BMP, JPG or PNG images may be used for profile pictures","user.settings.import_theme.cancel":"Cancel","user.settings.import_theme.importBody":'To import a theme, go to a Slack team and look for "Preferences -> Sidebar Theme". Open the custom theme option, copy the theme color values and paste them here:',"user.settings.import_theme.importHeader":"Import Slack Theme","user.settings.import_theme.submit":"Submit","user.settings.import_theme.submitError":"Invalid format, please try copying and pasting in again.","user.settings.languages.change":"Change interface language","user.settings.languages.promote":"Select which language Gomlo displays in the user interface.\n \nWould you like to help with translations? Join the [Gomlo Translation Server](!http://translate.chatting.gomlo.me/) to contribute.","user.settings.mfa.add":"Add MFA to Account","user.settings.mfa.addHelp":"Adding multi-factor authentication will make your account more secure by requiring a code from your mobile phone each time you sign in.","user.settings.mfa.remove":"Remove MFA from Account","user.settings.mfa.removeHelp":"Removing multi-factor authentication means you will no longer require a phone-based passcode to sign-in to your account.","user.settings.mfa.requiredHelp":"Multi-factor authentication is required on this server. Resetting is only recommended when you need to switch code generation to a new mobile device. You will be required to set it up again immediately.","user.settings.mfa.reset":"Reset MFA on Account","user.settings.mfa.title":"Multi-factor Authentication","user.settings.modal.advanced":"Advanced","user.settings.modal.confirmBtns":"Yes, Discard","user.settings.modal.confirmMsg":"You have unsaved changes, are you sure you want to discard them?","user.settings.modal.confirmTitle":"Discard Changes?","user.settings.modal.display":"Display","user.settings.modal.general":"General","user.settings.modal.notifications":"Notifications","user.settings.modal.security":"Security","user.settings.modal.sidebar":"Sidebar","user.settings.modal.title":"Account Settings","user.settings.notifications.allActivity":"For all activity","user.settings.notifications.autoResponder":"Automatic Direct Message Replies","user.settings.notifications.autoResponderDefault":"Hello, I am out of office and unable to respond to messages.","user.settings.notifications.autoResponderDisabled":"Disabled","user.settings.notifications.autoResponderEnabled":"Enabled","user.settings.notifications.autoResponderHint":"Set a custom message that will be automatically sent in response to Direct Messages. Mentions in Public and Private Channels will not trigger the automated reply. Enabling Automatic Replies sets your status to Out of Office and disables email and push notifications.","user.settings.notifications.autoResponderPlaceholder":"Message","user.settings.notifications.channelWide":'Channel-wide mentions "@group", "@all", "@here"',"user.settings.notifications.comments":"Reply notifications","user.settings.notifications.commentsAny":"Trigger notifications on messages in reply threads that I start or participate in","user.settings.notifications.commentsInfo":"In addition to notifications for when you're mentioned, select if you would like to receive notifications on reply threads.","user.settings.notifications.commentsNever":"Do not trigger notifications on messages in reply threads unless I'm mentioned","user.settings.notifications.commentsRoot":"Trigger notifications on messages in threads that I start","user.settings.notifications.desktop":"Send desktop notifications","user.settings.notifications.desktop.allNoSound":"For all activity, without sound","user.settings.notifications.desktop.allSound":"For all activity, with sound","user.settings.notifications.desktop.allSoundHidden":"For all activity","user.settings.notifications.desktop.mentionsNoSound":"For mentions and direct messages, without sound","user.settings.notifications.desktop.mentionsSound":"For mentions and direct messages, with sound","user.settings.notifications.desktop.mentionsSoundHidden":"For mentions and direct messages","user.settings.notifications.desktop.sound":"Notification sound","user.settings.notifications.desktop.title":"Desktop Notifications","user.settings.notifications.email.disabled":"Email notifications are not enabled","user.settings.notifications.email.disabled_long":"Email notifications have not been enabled by your System Administrator.","user.settings.notifications.email.everyHour":"Every hour","user.settings.notifications.email.everyXMinutes":"Every {count, plural, one {minute} other {{count, number} minutes}}","user.settings.notifications.email.immediately":"Immediately","user.settings.notifications.email.never":"Never","user.settings.notifications.email.send":"Send email notifications","user.settings.notifications.emailBatchingInfo":"Notifications received over the time period selected are combined and sent in a single email.","user.settings.notifications.emailInfo":"Email notifications are sent for mentions and direct messages when you are offline or away for more than 5 minutes.","user.settings.notifications.emailNotifications":"Email Notifications","user.settings.notifications.header":"Notifications","user.settings.notifications.icon":"Notification Settings Icon","user.settings.notifications.info":"Desktop notifications are available on Edge, Firefox, Safari, Chrome and Gomlo Desktop Apps.","user.settings.notifications.mentionsInfo":'Mentions trigger when someone sends a message that includes your username ("@{username}") or any of the options selected above.',"user.settings.notifications.never":"Never","user.settings.notifications.noWords":"No words configured","user.settings.notifications.off":"Off","user.settings.notifications.on":"On","user.settings.notifications.onlyMentions":"Only for mentions and direct messages","user.settings.notifications.push":"Mobile Push Notifications","user.settings.notifications.push_notification.status":"Trigger push notifications when","user.settings.notifications.sensitiveName":'Your case-sensitive first name "{first_name}"',"user.settings.notifications.sensitiveUsername":'Your non case-sensitive username "{username}"',"user.settings.notifications.sensitiveWords":"Other non case-sensitive words, separated by commas:","user.settings.notifications.soundConfig":"Please configure notification sounds in your browser settings","user.settings.notifications.sounds_info":"Notification sounds are available on Firefox, Edge, Safari, Chrome and Gomlo Desktop Apps.","user.settings.notifications.title":"Notification Settings","user.settings.notifications.wordsTrigger":"Words That Trigger Mentions","user.settings.push_notification.allActivity":"For all activity","user.settings.push_notification.allActivityAway":"For all activity when away or offline","user.settings.push_notification.allActivityOffline":"For all activity when offline","user.settings.push_notification.allActivityOnline":"For all activity when online, away or offline","user.settings.push_notification.away":"Away or offline","user.settings.push_notification.disabled":"Push notifications are not enabled","user.settings.push_notification.disabled_long":"Push notifications have not been enabled by your System Administrator.","user.settings.push_notification.info":"Notification alerts are pushed to your mobile device when there is activity in Gomlo.","user.settings.push_notification.offline":"Offline","user.settings.push_notification.online":"Online, away or offline","user.settings.push_notification.onlyMentions":"For mentions and direct messages","user.settings.push_notification.onlyMentionsAway":"For mentions and direct messages when away or offline","user.settings.push_notification.onlyMentionsOffline":"For mentions and direct messages when offline","user.settings.push_notification.onlyMentionsOnline":"For mentions and direct messages when online, away or offline","user.settings.push_notification.send":"Send mobile push notifications","user.settings.push_notification.status_info":"Notification alerts are only pushed to your mobile device when your availability matches the selection above.","user.settings.security.active":"Active","user.settings.security.close":"Close","user.settings.security.currentPassword":"Current Password","user.settings.security.currentPasswordError":"Please enter your current password.","user.settings.security.deauthorize":"Deauthorize","user.settings.security.emailPwd":"Email and Password","user.settings.security.gitlab":"GitLab","user.settings.security.google":"Google","user.settings.security.icon":"Security Settings Icon","user.settings.security.inactive":"Inactive","user.settings.security.lastUpdated":"Last updated {date} at {time}","user.settings.security.ldap":"AD/LDAP","user.settings.security.loginGitlab":"Login done through GitLab","user.settings.security.loginGoogle":"Login done through Google Apps","user.settings.security.loginLdap":"Login done through AD/LDAP","user.settings.security.loginOffice365":"Login done through Office 365","user.settings.security.loginSaml":"Login done through SAML","user.settings.security.logoutActiveSessions":"View and Log Out of Active Sessions","user.settings.security.logoutActiveSessions.icon":"Active Sessions Icon","user.settings.security.method":"Sign-in Method","user.settings.security.newPassword":"New Password","user.settings.security.noApps":"No OAuth 2.0 Applications are authorized.","user.settings.security.oauthApps":"OAuth 2.0 Applications","user.settings.security.oauthAppsDescription":"Click 'Edit' to manage your OAuth 2.0 Applications","user.settings.security.oauthAppsHelp":"Applications act on your behalf to access your data based on the permissions you grant them.","user.settings.security.office365":"Office 365","user.settings.security.oneSignin":"You may only have one sign-in method at a time. Switching sign-in method will send an email notifying you if the change was successful.","user.settings.security.openid":"OpenID","user.settings.security.password":"Password","user.settings.security.passwordError":"Your password must contain between {min} and {max} characters.","user.settings.security.passwordErrorLowercase":"Your password must contain between {min} and {max} characters made up of at least one lowercase letter.","user.settings.security.passwordErrorLowercaseNumber":"Your password must contain between {min} and {max} characters made up of at least one lowercase letter and at least one number.","user.settings.security.passwordErrorLowercaseNumberSymbol":'Your password must contain between {min} and {max} characters made up of at least one lowercase letter, at least one number, and at least one symbol (e.g. "~!@#$%^&*()").',"user.settings.security.passwordErrorLowercaseSymbol":'Your password must contain between {min} and {max} characters made up of at least one lowercase letter and at least one symbol (e.g. "~!@#$%^&*()").',"user.settings.security.passwordErrorLowercaseUppercase":"Your password must contain between {min} and {max} characters made up of at least one lowercase letter and at least one uppercase letter.","user.settings.security.passwordErrorLowercaseUppercaseNumber":"Your password must contain between {min} and {max} characters made up of at least one lowercase letter, at least one uppercase letter, and at least one number.","user.settings.security.passwordErrorLowercaseUppercaseNumberSymbol":'Your password must contain between {min} and {max} characters made up of at least one lowercase letter, at least one uppercase letter, at least one number, and at least one symbol (e.g. "~!@#$%^&*()").',"user.settings.security.passwordErrorLowercaseUppercaseSymbol":'Your password must contain between {min} and {max} characters made up of at least one lowercase letter, at least one uppercase letter, and at least one symbol (e.g. "~!@#$%^&*()").',"user.settings.security.passwordErrorNumber":"Your password must contain between {min} and {max} characters made up of at least one number.","user.settings.security.passwordErrorNumberSymbol":'Your password must contain between {min} and {max} characters made up of at least one number and at least one symbol (e.g. "~!@#$%^&*()").',"user.settings.security.passwordErrorSymbol":'Your password must contain between {min} and {max} characters made up of at least one symbol (e.g. "~!@#$%^&*()").',"user.settings.security.passwordErrorUppercase":"Your password must contain between {min} and {max} characters made up of at least one uppercase letter.","user.settings.security.passwordErrorUppercaseNumber":"Your password must contain between {min} and {max} characters made up of at least one uppercase letter and at least one number.","user.settings.security.passwordErrorUppercaseNumberSymbol":'Your password must contain between {min} and {max} characters made up of at least one uppercase letter, at least one number, and at least one symbol (e.g. "~!@#$%^&*()").',"user.settings.security.passwordErrorUppercaseSymbol":'Your password must contain between {min} and {max} characters made up of at least one uppercase letter and at least one symbol (e.g. "~!@#$%^&*()").',"user.settings.security.passwordGitlabCantUpdate":"Login occurs through GitLab. Password cannot be updated.","user.settings.security.passwordGoogleCantUpdate":"Login occurs through Google Apps. Password cannot be updated.","user.settings.security.passwordLdapCantUpdate":"Login occurs through AD/LDAP. Password cannot be updated.","user.settings.security.passwordMatchError":"The new passwords you entered do not match.","user.settings.security.passwordMinLength":"Invalid minimum length, cannot show preview.","user.settings.security.passwordOffice365CantUpdate":"Login occurs through Office 365. Password cannot be updated.","user.settings.security.passwordSamlCantUpdate":"This field is handled through your login provider. If you want to change it, you need to do so through your login provider.","user.settings.security.retypePassword":"Retype New Password","user.settings.security.saml":"SAML","user.settings.security.switchEmail":"Switch to Using Email and Password","user.settings.security.switchGitlab":"Switch to Using GitLab SSO","user.settings.security.switchGoogle":"Switch to Using Google SSO","user.settings.security.switchLdap":"Switch to Using AD/LDAP","user.settings.security.switchOffice365":"Switch to Using Office 365 SSO","user.settings.security.switchOpenId":"Switch to Using OpenID SSO","user.settings.security.switchSaml":"Switch to Using SAML SSO","user.settings.security.title":"Security Settings","user.settings.security.viewHistory":"View Access History","user.settings.security.viewHistory.icon":"Access History Icon","user.settings.sidebar.after_seven_days":"After 7 days with no new messages","user.settings.sidebar.autoCloseDMDesc":"Direct Message conversations can be reopened with the “+” button in the sidebar or using the Channel Switcher (CTRL+K).","user.settings.sidebar.autoCloseDMTitle":"Automatically Close Direct Messages","user.settings.sidebar.channelSwitcherSectionDesc.mac":"The channel switcher is shown at the bottom of the sidebar and is used to jump between channels quickly. It can also be accessed using CMD + K.","user.settings.sidebar.channelSwitcherSectionDesc.windows":"The channel switcher is shown at the bottom of the sidebar and is used to jump between channels quickly. It can also be accessed using CTRL + K.","user.settings.sidebar.channelSwitcherSectionTitle":"Channel Switcher","user.settings.sidebar.favorites":"Favorites grouped separately","user.settings.sidebar.favoritesDesc":"Channels marked as favorites will be grouped separately.","user.settings.sidebar.favoritesShort":"Favorites grouped separately","user.settings.sidebar.groupAndSortChannelsTitle":"Channel Grouping and Sorting","user.settings.sidebar.groupByNone":"Combine all channel types","user.settings.sidebar.groupByNoneShort":"No grouping","user.settings.sidebar.groupByType":"Channels grouped by type","user.settings.sidebar.groupByTypeShort":"Group by channel type","user.settings.sidebar.groupChannelsTitle":"Channel grouping","user.settings.sidebar.groupDesc":"Group channels by type, or combine all types into a list.","user.settings.sidebar.icon":"Sidebar Settings Icon","user.settings.sidebar.limitVisibleGMsDMs.allDirectMessages":"All Direct Messages","user.settings.sidebar.limitVisibleGMsDMsDesc":"You can also change these settings in the direct messages sidebar menu.","user.settings.sidebar.limitVisibleGMsDMsTitle":"Number of direct messages to show","user.settings.sidebar.never":"Never","user.settings.sidebar.off":"Off","user.settings.sidebar.on":"On","user.settings.sidebar.recent":"Recent activity","user.settings.sidebar.showUnreadsCategoryDesc":"When enabled, all unread channels and direct messages will be grouped together in the sidebar.","user.settings.sidebar.showUnreadsCategoryTitle":"Group unread channels separately","user.settings.sidebar.sortAlpha":"Alphabetically","user.settings.sidebar.sortAlphaShort":"sorted alphabetically","user.settings.sidebar.sortChannelsTitle":"Channel sorting","user.settings.sidebar.sortDesc":"Sort channels alphabetically, or by most recent post.","user.settings.sidebar.sortRecent":"Recency","user.settings.sidebar.sortRecentShort":"sorted by recency","user.settings.sidebar.title":"Sidebar Settings","user.settings.sidebar.unreads":"Unreads grouped separately","user.settings.sidebar.unreadsDesc":"Group unread channels separately until read.","user.settings.sidebar.unreadsFavoritesShort":"Unreads and favorites grouped separately","user.settings.sidebar.unreadsShort":"Unreads grouped separately","user.settings.timezones.automatic":"Automatic","user.settings.timezones.promote":"Select the timezone used for timestamps in the user interface and email notifications.","user.settings.tokens.activate":"Enable","user.settings.tokens.cancel":"Cancel","user.settings.tokens.clickToEdit":"Click 'Edit' to manage your personal access tokens","user.settings.tokens.confirmCopyButton":"Yes, I have copied the token","user.settings.tokens.confirmCopyMessage":"Make sure you have copied and saved the access token below. You won't be able to see it again!","user.settings.tokens.confirmCopyTitle":"Copied Your Token?","user.settings.tokens.confirmCreateButton":"Yes, Create","user.settings.tokens.confirmCreateMessage":"You are generating a personal access token with System Admin permissions. Are you sure want to create this token?","user.settings.tokens.confirmCreateTitle":"Create System Admin Personal Access Token","user.settings.tokens.confirmDeleteButton":"Yes, Delete","user.settings.tokens.confirmDeleteMessage":"Any integrations using this token will no longer be able to access the Gomlo API. You cannot undo this action. \n \nAre you sure want to delete the **{description}** token?","user.settings.tokens.confirmDeleteTitle":"Delete Token?","user.settings.tokens.copy":"Please copy the access token below. You won't be able to see it again!","user.settings.tokens.create":"Create Token","user.settings.tokens.deactivate":"Disable","user.settings.tokens.deactivatedWarning":"(Disabled)","user.settings.tokens.delete":"Delete","user.settings.tokens.description":"[Personal access tokens](!https://about.chatting.gomlo.me/default-user-access-tokens) function similarly to session tokens and can be used by integrations to [authenticate against the REST API](!https://about.chatting.gomlo.me/default-api-authentication).","user.settings.tokens.description_mobile":"[Personal access tokens](!https://about.chatting.gomlo.me/default-user-access-tokens) function similarly to session tokens and can be used by integrations to [authenticate against the REST API](!https://about.chatting.gomlo.me/default-api-authentication). Create new tokens on your desktop.","user.settings.tokens.id":"Token ID: ","user.settings.tokens.name":"Token Description: ","user.settings.tokens.nameHelp":"Enter a description for your token to remember what it does.","user.settings.tokens.nameRequired":"Please enter a description.","user.settings.tokens.save":"Save","user.settings.tokens.title":"Personal Access Tokens","user.settings.tokens.token":"Access Token: ","user.settings.tokens.tokenDesc":"Token Description: ","user.settings.tokens.tokenId":"Token ID: ","user.settings.tokens.tokenLoading":"Loading...","user.settings.tokens.userAccessTokensNone":"No personal access tokens.","userGuideHelp.askTheCommunity":"Ask the community","userGuideHelp.helpResources":"Help resources","userGuideHelp.keyboardShortcuts":"Keyboard shortcuts","userGuideHelp.reportAProblem":"Report a problem","version_bar.new":"A new version of Gomlo is available.","version_bar.refresh":"Refresh the app now","view_image_popover.download":"Download","view_image_popover.file":"File {count, number} of {total, number}","view_image_popover.open":"Open","view_image_popover.publicLink":"Get a public link","view_image.loading":"Loading ","view_image.zoom_in":"Zoom In","view_image.zoom_out":"Zoom Out","view_image.zoom_reset":"Reset Zoom","web.footer.about":"About","web.footer.help":"Help","web.footer.privacy":"Privacy","web.footer.terms":"Terms","web.header.back":"Back","web.header.logout":"Logout","web.root.signup_info":"All team communication in one place, searchable and accessible anywhere","widgets.channels_input.empty":"No channels found","widgets.channels_input.loading":"Loading","widgets.users_emails_input.loading":"Loading","widgets.users_emails_input.no_user_found_matching":"No one found matching **{text}**, type email address","widgets.users_emails_input.valid_email":"Add **{email}**",yourcomputer:"Your computer"};function Xn(e){return async t=>{const n=[t(K()),t(Q()),t(X())],a=await Promise.all(n);return Z.getUserId(e)&&a.push(await t(ee())),a}}const Zn={};function ea(e,t){return async n=>{const a=r({},Qn);if(Object.values(Zn).forEach((t=>{Object.assign(a,t(e))})),"en"!==e)try{const e=await te.getTranslations(t);Object.assign(a,e)}catch(s){console.error(s)}n({type:ne.RECEIVED_TRANSLATIONS,data:{locale:e,translations:a}})}}var ta,na={exports:{}};ta=na,function(){
/**
     * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
     *
     * @codingstandard ftlabs-jsv2
     * @copyright The Financial Times Limited [All Rights Reserved]
     * @license MIT License (see LICENSE.txt)
     */
function e(t,a){var s;if(a=a||{},this.trackingClick=!1,this.trackingClickStart=0,this.targetElement=null,this.touchStartX=0,this.touchStartY=0,this.lastTouchIdentifier=0,this.touchBoundary=a.touchBoundary||10,this.layer=t,this.tapDelay=a.tapDelay||200,this.tapTimeout=a.tapTimeout||700,!e.notNeeded(t)){for(var o=["onMouse","onClick","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel"],i=this,r=0,l=o.length;r<l;r++)i[o[r]]=c(i[o[r]],i);n&&(t.addEventListener("mouseover",this.onMouse,!0),t.addEventListener("mousedown",this.onMouse,!0),t.addEventListener("mouseup",this.onMouse,!0)),t.addEventListener("click",this.onClick,!0),t.addEventListener("touchstart",this.onTouchStart,!1),t.addEventListener("touchmove",this.onTouchMove,!1),t.addEventListener("touchend",this.onTouchEnd,!1),t.addEventListener("touchcancel",this.onTouchCancel,!1),Event.prototype.stopImmediatePropagation||(t.removeEventListener=function(e,n,a){var s=Node.prototype.removeEventListener;"click"===e?s.call(t,e,n.hijacked||n,a):s.call(t,e,n,a)},t.addEventListener=function(e,n,a){var s=Node.prototype.addEventListener;"click"===e?s.call(t,e,n.hijacked||(n.hijacked=function(e){e.propagationStopped||n(e)}),a):s.call(t,e,n,a)}),"function"==typeof t.onclick&&(s=t.onclick,t.addEventListener("click",(function(e){s(e)}),!1),t.onclick=null)}function c(e,t){return function(){return e.apply(t,arguments)}}}var t=navigator.userAgent.indexOf("Windows Phone")>=0,n=navigator.userAgent.indexOf("Android")>0&&!t,a=/iP(ad|hone|od)/.test(navigator.userAgent)&&!t,s=a&&/OS 4_\d(_\d)?/.test(navigator.userAgent),o=a&&/OS [6-7]_\d/.test(navigator.userAgent),i=navigator.userAgent.indexOf("BB10")>0;e.prototype.needsClick=function(e){switch(e.nodeName.toLowerCase()){case"button":case"select":case"textarea":if(e.disabled)return!0;break;case"input":if(a&&"file"===e.type||e.disabled)return!0;break;case"label":case"iframe":case"video":return!0}return/\bneedsclick\b/.test(e.className)},e.prototype.needsFocus=function(e){switch(e.nodeName.toLowerCase()){case"textarea":return!0;case"select":return!n;case"input":switch(e.type){case"button":case"checkbox":case"file":case"image":case"radio":case"submit":return!1}return!e.disabled&&!e.readOnly;default:return/\bneedsfocus\b/.test(e.className)}},e.prototype.sendClick=function(e,t){var n,a;document.activeElement&&document.activeElement!==e&&document.activeElement.blur(),a=t.changedTouches[0],(n=document.createEvent("MouseEvents")).initMouseEvent(this.determineEventType(e),!0,!0,window,1,a.screenX,a.screenY,a.clientX,a.clientY,!1,!1,!1,!1,0,null),n.forwardedTouchEvent=!0,e.dispatchEvent(n)},e.prototype.determineEventType=function(e){return n&&"select"===e.tagName.toLowerCase()?"mousedown":"click"},e.prototype.focus=function(e){var t;a&&e.setSelectionRange&&0!==e.type.indexOf("date")&&"time"!==e.type&&"month"!==e.type?(t=e.value.length,e.setSelectionRange(t,t)):e.focus()},e.prototype.updateScrollParent=function(e){var t,n;if(!(t=e.fastClickScrollParent)||!t.contains(e)){n=e;do{if(n.scrollHeight>n.offsetHeight){t=n,e.fastClickScrollParent=n;break}n=n.parentElement}while(n)}t&&(t.fastClickLastScrollTop=t.scrollTop)},e.prototype.getTargetElementFromEventTarget=function(e){return e.nodeType===Node.TEXT_NODE?e.parentNode:e},e.prototype.onTouchStart=function(e){var t,n,o;if(e.targetTouches.length>1)return!0;if(t=this.getTargetElementFromEventTarget(e.target),n=e.targetTouches[0],a){if((o=window.getSelection()).rangeCount&&!o.isCollapsed)return!0;if(!s){if(n.identifier&&n.identifier===this.lastTouchIdentifier)return e.preventDefault(),!1;this.lastTouchIdentifier=n.identifier,this.updateScrollParent(t)}}return this.trackingClick=!0,this.trackingClickStart=e.timeStamp,this.targetElement=t,this.touchStartX=n.pageX,this.touchStartY=n.pageY,e.timeStamp-this.lastClickTime<this.tapDelay&&e.preventDefault(),!0},e.prototype.touchHasMoved=function(e){var t=e.changedTouches[0],n=this.touchBoundary;return Math.abs(t.pageX-this.touchStartX)>n||Math.abs(t.pageY-this.touchStartY)>n},e.prototype.onTouchMove=function(e){return!this.trackingClick||((this.targetElement!==this.getTargetElementFromEventTarget(e.target)||this.touchHasMoved(e))&&(this.trackingClick=!1,this.targetElement=null),!0)},e.prototype.findControl=function(e){return void 0!==e.control?e.control:e.htmlFor?document.getElementById(e.htmlFor):e.querySelector("button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea")},e.prototype.onTouchEnd=function(e){var t,i,r,l,c,d=this.targetElement;if(!this.trackingClick)return!0;if(e.timeStamp-this.lastClickTime<this.tapDelay)return this.cancelNextClick=!0,!0;if(e.timeStamp-this.trackingClickStart>this.tapTimeout)return!0;if(this.cancelNextClick=!1,this.lastClickTime=e.timeStamp,i=this.trackingClickStart,this.trackingClick=!1,this.trackingClickStart=0,o&&(c=e.changedTouches[0],(d=document.elementFromPoint(c.pageX-window.pageXOffset,c.pageY-window.pageYOffset)||d).fastClickScrollParent=this.targetElement.fastClickScrollParent),"label"===(r=d.tagName.toLowerCase())){if(t=this.findControl(d)){if(this.focus(d),n)return!1;d=t}}else if(this.needsFocus(d))return e.timeStamp-i>100||a&&window.top!==window&&"input"===r?(this.targetElement=null,!1):(this.focus(d),this.sendClick(d,e),a&&"select"===r||(this.targetElement=null,e.preventDefault()),!1);return!(!a||s||!(l=d.fastClickScrollParent)||l.fastClickLastScrollTop===l.scrollTop)||(this.needsClick(d)||(e.preventDefault(),this.sendClick(d,e)),!1)},e.prototype.onTouchCancel=function(){this.trackingClick=!1,this.targetElement=null},e.prototype.onMouse=function(e){return!(this.targetElement&&!e.forwardedTouchEvent&&e.cancelable&&(!this.needsClick(this.targetElement)||this.cancelNextClick)&&(e.stopImmediatePropagation?e.stopImmediatePropagation():e.propagationStopped=!0,e.stopPropagation(),e.preventDefault(),1))},e.prototype.onClick=function(e){var t;return this.trackingClick?(this.targetElement=null,this.trackingClick=!1,!0):"submit"===e.target.type&&0===e.detail||((t=this.onMouse(e))||(this.targetElement=null),t)},e.prototype.destroy=function(){var e=this.layer;n&&(e.removeEventListener("mouseover",this.onMouse,!0),e.removeEventListener("mousedown",this.onMouse,!0),e.removeEventListener("mouseup",this.onMouse,!0)),e.removeEventListener("click",this.onClick,!0),e.removeEventListener("touchstart",this.onTouchStart,!1),e.removeEventListener("touchmove",this.onTouchMove,!1),e.removeEventListener("touchend",this.onTouchEnd,!1),e.removeEventListener("touchcancel",this.onTouchCancel,!1)},e.notNeeded=function(e){var t,a,s;if(void 0===window.ontouchstart)return!0;if(a=+(/Chrome\/([0-9]+)/.exec(navigator.userAgent)||[,0])[1]){if(!n)return!0;if(t=document.querySelector("meta[name=viewport]")){if(-1!==t.content.indexOf("user-scalable=no"))return!0;if(a>31&&document.documentElement.scrollWidth<=window.outerWidth)return!0}}if(i&&(s=navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/))[1]>=10&&s[2]>=3&&(t=document.querySelector("meta[name=viewport]"))){if(-1!==t.content.indexOf("user-scalable=no"))return!0;if(document.documentElement.scrollWidth<=window.outerWidth)return!0}return"none"===e.style.msTouchAction||"manipulation"===e.style.touchAction||!!(+(/Firefox\/([0-9]+)/.exec(navigator.userAgent)||[,0])[1]>=27&&(t=document.querySelector("meta[name=viewport]"))&&(-1!==t.content.indexOf("user-scalable=no")||document.documentElement.scrollWidth<=window.outerWidth))||"none"===e.style.touchAction||"manipulation"===e.style.touchAction},e.attach=function(t,n){return new e(t,n)},ta.exports?(ta.exports=e.attach,ta.exports.FastClick=e):window.FastClick=e}();var aa=na.exports,sa=u(m),oa=sa.jsx;var ia=function(e){return oa("svg",l(r({},Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},e)),{children:oa("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"})}))};const ra=h((e=>ae(e)),(e=>"true"===(null==e?void 0:e.FeatureFlagAppsEnabled)));function la(e,t){return async(n,a)=>{const s=x(a(),t),o=(null==s?void 0:s.team_id)||"";return n(se({clientFunc:()=>te.getAppsBindings(e,t,o),onSuccess:oe.RECEIVED_APP_BINDINGS}))}}function ca(){return async(e,t)=>{const n=t();let a;try{const t=await e(re());a=new Set(t.data)}catch(r){return{error:r}}a.add(B(n));const s=Object.keys(le(n)),o=new Set(s.filter((e=>!a.has(e)))),i=[];for(const l of o.values())i.push({type:ce.PROFILE_NO_LONGER_VISIBLE,data:{user_id:l}});return i.length>0&&e(de(i)),{data:!0}}}function da(e=""){return function(e,t=""){return async(n,a)=>{let s;n({type:ue.GET_ANALYTICS_REQUEST,data:null});try{s=await te.getAnalytics(e,t)}catch(i){return me(i,n,a),n(de([{type:ue.GET_ANALYTICS_FAILURE,error:i},he(i)])),{error:i}}const o=[{type:ue.GET_ANALYTICS_SUCCESS,data:null}];return""===t?o.push({type:ue.RECEIVED_SYSTEM_ANALYTICS,data:s,name:e}):o.push({type:ue.RECEIVED_TEAM_ANALYTICS,data:s,name:e,teamId:t}),n(de(o)),{data:s}}}("standard",e)}function ua(){return h(B,pe,_e,((e,t)=>t),((e,t,n,a)=>{const s=Object.values(n).reduce(((e,t)=>t.type===ge.DM_CHANNEL?l(r({},e),{[t.name]:t}):e),{});return a.map((n=>{const a=fe(e,n.id),o=s[a],i=o?t[o.id]:null;return l(r({},n),{last_viewed_at:o&&i?i.last_viewed_at:0})}))}))}const ma=e=>{const t=B(e);return Z.getPreviousTeamId(t)},ha=e=>e.views.channel.toastStatus;function pa(){return e=>{e({type:ne.UPDATE_MOBILE_VIEW,data:ye()})}}function _a(){return async(e,t)=>{const n=t(),a=we(n)||{},s=Ee(n),o=Ce(n),i=Object.assign({},s,o);let r=Se(i,(e=>{const t=B(e),n=O(e);return Z.getPreviousChannelName(t,n)})(n));return a.id===r.id&&(r=Se(i,Te(n,O(n)))),e((l=r,async(e,t)=>{const n=t(),a=ke(n);if(l.fake||l.userId){const t=l.userId?l.name:l.display_name,s=Ae(n,t);if(!s)return{error:!0};if((await e(Wn(s.id))).error)return{error:!0};Ie.push(`${a}/messages/@${l.name}`)}else if(l.type===P.GM_CHANNEL){const e=x(n,l.id);Ie.push(`${a}/group/${e.name}`)}else Ie.push(`${a}/group/${l.name}`);return{data:!0}}));var l}}function ga(e){return async(t,n)=>{const a=n(),s=B(a);return Ne(a).forEach((t=>{const n=Z.getPreviousChannelName(s,t.id,a),o=Z.getPenultimateChannelName(s,t.id,a);e===n?Z.removePreviousChannelName(s,t.id,a):e===o&&Z.removePenultimateChannelName(s,t.id,a)})),{data:!0}}}function fa(e,t){const n=ua();return async(a,s)=>{const o=s(),i=O(o),c=await a(De(e,i,t)),d=c.data;return d?l(r({},c),{data:l(r({},d),{users:n(o,d.users||[]),out_of_channel:n(o,d.out_of_channel||[])})}):c}}function ba(e,t=!1){return async n=>{const a=Date.now();t&&n({type:ne.PREFETCH_POSTS_FOR_CHANNEL,channelId:e,status:be.STARTED});const{data:s,error:o}=await n(Re(e));if(o)return t&&n({type:ne.PREFETCH_POSTS_FOR_CHANNEL,channelId:e,status:be.FAILURE}),{error:o,atLatestMessage:!1,atOldestmessage:!1};const i=[];return i.push({type:ne.INCREASE_POST_VISIBILITY,data:e,amount:s.order.length}),t&&i.push({type:ne.PREFETCH_POSTS_FOR_CHANNEL,channelId:e,status:be.SUCCESS}),""===s.next_post_id&&i.push({type:ne.RECEIVED_POSTS_FOR_CHANNEL_AT_TIME,channelId:e,time:a}),n(d(i)),{atLatestMessage:""===s.next_post_id,atOldestmessage:""===s.prev_post_id}}}function va(e,t){return async n=>{const{data:a,error:s}=await n(xe(e,t,Oe.POST_CHUNK_SIZE/2));return s?{error:s,atLatestMessage:!1,atOldestmessage:!1}:(n({type:ne.INCREASE_POST_VISIBILITY,data:e,amount:a.order.length}),{atLatestMessage:""===a.next_post_id,atOldestmessage:""===a.prev_post_id})}}function ya(e){return async t=>{const n=Date.now(),{data:a,error:s}=await t(Le(e,0,Oe.POST_CHUNK_SIZE/2));return s?{error:s,atLatestMessage:!1,atOldestmessage:!1}:(t({type:ne.RECEIVED_POSTS_FOR_CHANNEL_AT_TIME,channelId:e,time:n}),{data:a,atLatestMessage:""===a.next_post_id,atOldestmessage:""===a.prev_post_id})}}function wa({channelId:e,postId:t,type:n}){return async a=>{const s=P.POST_CHUNK_SIZE/2;a({type:ne.LOADING_POSTS,data:!0,channelId:e});let o;o=n===Me.BEFORE_ID?await a(Pe(e,t,0,s)):await a(Ue(e,t,0,s));const{data:i}=o,r=[{type:ne.LOADING_POSTS,data:!1,channelId:e}];return o.error?{error:o.error,moreToLoad:!0}:(r.push({type:ne.INCREASE_POST_VISIBILITY,data:e,amount:i.order.length}),a(d(r)),{moreToLoad:n===Me.BEFORE_ID?""!==i.prev_post_id:""!==i.next_post_id})}}function Ea(e,t,n=!1){return async(a,s)=>{const o=Date.now(),i=s(),r=(e=>e.websocket)(i);let l=t;const c=((e,t)=>e.views.channel.lastGetPosts[t])(i,e),u=[];c&&c<r.lastDisconnectAt&&(l=c),n&&a({type:ne.PREFETCH_POSTS_FOR_CHANNEL,channelId:e,status:be.STARTED});const{data:m,error:h}=await a(ve(e,l));return m&&u.push({type:ne.RECEIVED_POSTS_FOR_CHANNEL_AT_TIME,channelId:e,time:o}),n&&(h?u.push({type:ne.PREFETCH_POSTS_FOR_CHANNEL,channelId:e,status:be.FAILURE}):u.push({type:ne.PREFETCH_POSTS_FOR_CHANNEL,channelId:e,status:be.SUCCESS})),a(d(u)),{data:m,error:h}}}function Ca(e,t){return async(n,a)=>{const s=a(),o=Fe(s,e);if(!s.entities.posts.postsInChannel[e]||!o)return t&&await new Promise((e=>setTimeout(e,t))),n(ba(e,!0));const i=Ge(s,o);return n(Ea(e,i.create_at,!0))}}function Sa(){return()=>{He.emit(je.POST_LIST_SCROLL_TO_BOTTOM)}}function Ta(e){return t=>{t({type:ne.UPDATE_TOAST_STATUS,data:e})}}var ka=new class{constructor(){c(this,"conn"),c(this,"connectionUrl"),c(this,"responseSequence"),c(this,"serverSequence"),c(this,"connectFailCount"),c(this,"eventCallback"),c(this,"responseCallbacks"),c(this,"firstConnectCallback"),c(this,"reconnectCallback"),c(this,"missedEventCallback"),c(this,"errorCallback"),c(this,"closeCallback"),c(this,"connectionId"),this.conn=null,this.connectionUrl=null,this.responseSequence=1,this.serverSequence=0,this.connectFailCount=0,this.eventCallback=null,this.responseCallbacks={},this.firstConnectCallback=null,this.reconnectCallback=null,this.missedEventCallback=null,this.errorCallback=null,this.closeCallback=null,this.connectionId=""}initialize(e=this.connectionUrl,t){if(this.conn)return;if(null==e)return;this.connectFailCount,this.conn=new WebSocket(`${e}?connection_id=${this.connectionId}&sequence_number=${this.serverSequence}`),this.connectionUrl=e;const n="true"===ae(Be.getState()).EnableReliableWebSockets;this.conn.onopen=()=>{n||(this.serverSequence=0),t&&this.sendMessage("authentication_challenge",{token:t}),this.connectFailCount>0?!n&&this.reconnectCallback&&this.reconnectCallback():this.firstConnectCallback&&this.firstConnectCallback(),this.connectFailCount=0},this.conn.onclose=()=>{this.conn=null,this.responseSequence=1,this.connectFailCount,this.connectFailCount++,this.closeCallback&&this.closeCallback(this.connectFailCount);let n=3e3;this.connectFailCount>7&&(n=3e3*this.connectFailCount*this.connectFailCount,n>3e5&&(n=3e5)),setTimeout((()=>{this.initialize(e,t)}),n)},this.conn.onerror=e=>{this.connectFailCount,this.errorCallback&&this.errorCallback(e)},this.conn.onmessage=e=>{var t;const a=JSON.parse(e.data);if(a.seq_reply)a.error,this.responseCallbacks[a.seq_reply]&&(this.responseCallbacks[a.seq_reply](a),Reflect.deleteProperty(this.responseCallbacks,a.seq_reply));else if(this.eventCallback){if(n){if(a.event===Ve.HELLO&&this.missedEventCallback&&(""!==this.connectionId&&this.connectionId!==a.data.connection_id&&(this.missedEventCallback(),this.serverSequence=0),this.connectionId=a.data.connection_id),a.seq!==this.serverSequence)return this.connectFailCount=0,this.responseSequence=1,void(null==(t=this.conn)||t.close())}else a.seq!==this.serverSequence&&this.missedEventCallback&&this.missedEventCallback();this.serverSequence=a.seq+1,this.eventCallback(a)}}}setEventCallback(e){this.eventCallback=e}setFirstConnectCallback(e){this.firstConnectCallback=e}setReconnectCallback(e){this.reconnectCallback=e}setMissedEventCallback(e){this.missedEventCallback=e}setErrorCallback(e){this.errorCallback=e}setCloseCallback(e){this.closeCallback=e}close(){this.connectFailCount=0,this.responseSequence=1,this.conn&&this.conn.readyState===WebSocket.OPEN&&(this.conn.onclose=()=>{},this.conn.close(),this.conn=null)}sendMessage(e,t,n){const a={action:e,seq:this.responseSequence++,data:t};n&&(this.responseCallbacks[a.seq]=n),this.conn&&this.conn.readyState===WebSocket.OPEN?this.conn.send(JSON.stringify(a)):this.conn&&this.conn.readyState!==WebSocket.CLOSED||(this.conn=null,this.initialize())}userTyping(e,t,n){const a={channel_id:e,parent_id:t};this.sendMessage("user_typing",a,n)}userUpdateActiveStatus(e,t,n){const a={user_is_active:e,manual:t};this.sendMessage("user_update_active_status",a,n)}getStatuses(e){this.sendMessage("get_statuses",null,e)}getStatusesByIds(e,t){const n={user_ids:e};this.sendMessage("get_statuses_by_ids",n,t)}};const Aa=Be.dispatch,Ia=Be.getState,Na={};function Da(){if(!window.WebSocket)return void console.log("Browser does not support websocket");const e=ae(Ia());let t="";if(e.WebsocketURL)t=e.WebsocketURL;else{t=new URL("https://gomlo.me"),"https:"===t.protocol?t.protocol="wss:":t.protocol="ws:",/:\d+$/.test(t.host)||("wss:"===t.protocol?t.host+=":"+e.WebsocketSecurePort:t.host+=":"+e.WebsocketPort),t=t.toString()}t.length>0&&"/"===t[t.length-1]&&(t=t.substring(0,t.length-1)),t+=te.getUrlVersion()+"/websocket",ka.setEventCallback(Ma),ka.setFirstConnectCallback(La),ka.setReconnectCallback((()=>xa(!1))),ka.setMissedEventCallback((()=>xa(!1))),ka.setCloseCallback(Oa),ka.initialize(t,te.getToken())}function Ra(){ka.close()}function xa(e=!0){e&&(Ra(),Da()),Aa({type:Ye.WEBSOCKET_SUCCESS,timestamp:Date.now()});const t=Ia();if(t.entities.teams.currentTeamId){const e=We(t),n=Fe(t,e),a=Ge(t,n);Aa(qn()),Aa(Ga()),Aa(a?Ea(e,a.create_at):Le(e)),Aa(qe())}t.websocket.lastDisconnectAt&&Aa(ze()),Aa((async e=>{e({type:ne.RESET_WS_ERROR_COUNT})})),Aa(Je())}function La(){Aa(d([{type:Ye.WEBSOCKET_SUCCESS,timestamp:Date.now()},Je()]))}function Oa(e){e>7&&Aa(he({type:"critical",message:$e.WEBSOCKET_PORT_ERROR},!0)),Aa(d([{type:Ye.WEBSOCKET_FAILURE,timestamp:Date.now()},async e=>{e({type:ne.INCREMENT_WS_ERROR_COUNT})}]))}function Ma(e){switch(e.event){case Ve.POSTED:case Ve.EPHEMERAL_MESSAGE:Pa(e);break;case Ve.POST_EDITED:!function(e){const t=JSON.parse(e.data.post);Aa(yt(t)),ft([t],Aa,Ia);const n=We(Ia());n===e.broadcast.channel_id&&(Aa(ht(n)),window.isActive&&Aa(wt(n)))}(e);break;case Ve.POST_DELETED:!function(e){const t=JSON.parse(e.data.post);Aa(Et(t)),t.is_pinned&&Aa(ht(t.channel_id))}(e);break;case Ve.POST_UNREAD:!function(e){Aa({type:ne.POST_UNREAD_SUCCESS,data:{lastViewedAt:e.data.last_viewed_at,channelId:e.broadcast.channel_id,msgCount:e.data.msg_count,mentionCount:e.data.mention_count}})}(e);break;case Ve.LEAVE_TEAM:!function(e){const t=Ia(),n=[{type:ce.RECEIVED_PROFILE_NOT_IN_TEAM,data:{id:e.data.team_id,user_id:e.data.user_id}},{type:Tt.REMOVE_MEMBER_FROM_TEAM,data:{team_id:e.data.team_id,user_id:e.data.user_id}}],a=kt(t),s=a&&a[e.data.team_id]||[];for(const i of s)n.push({type:mt.REMOVE_MEMBER_FROM_CHANNEL,data:{id:i,user_id:e.data.user_id}});Aa(d(n));const o=At(t);if(o.id===e.data.user_id)Aa({type:Tt.LEAVE_TEAM,data:{id:e.data.team_id}}),O(t)===e.data.team_id&&(global.location.pathname.startsWith("/admin_console")||rs()),It(o)&&Aa(ca());else{const n=Nt(t,e.data.team_id),a=Dt(t),s=Object.values(a).some((t=>t[e.data.user_id]));n&&It(o)&&!s&&Aa(d([{type:ce.PROFILE_NO_LONGER_VISIBLE,data:{user_id:e.data.user_id}},{type:Tt.REMOVE_MEMBER_FROM_TEAM,data:{team_id:n.id,user_id:e.data.user_id}}]))}}(e);break;case Ve.UPDATE_TEAM:!function(e){Aa({type:Tt.UPDATED_TEAM,data:JSON.parse(e.data.team)})}(e);break;case Ve.UPDATE_TEAM_SCHEME:Aa(St());break;case Ve.DELETE_TEAM:!function(e){const t=JSON.parse(e.data.team),n=Be.getState(),{teams:a}=n.entities.teams;if(t&&a&&a[t.id]&&0===a[t.id].delete_at){const{currentUserId:e}=n.entities.users,{currentTeamId:a,myMembers:s}=n.entities.teams,o=Object.values(s),i=o.find((t=>t.user_id===e&&t.team_id===a));let r="";if(t&&i&&t.id===i.team_id){const e={};Rt(n).forEach((t=>{e[t.id]=t}));for(let n=0;n<o.length;n++){const a=o[n].team_id;if(e&&e[a]&&0===e[a].delete_at&&t.id!==a){r=a;break}}}if(Aa(d([{type:Tt.RECEIVED_TEAM_DELETED,data:{id:t.id}},{type:Tt.UPDATED_TEAM,data:t}])),r){Aa({type:Tt.SELECT_TEAM,data:r});const e=Ia(),t=Te(e,r);Ie.push(`${xt(e)}/group/${t}`)}else Ie.push("/")}}(e);break;case Ve.ADDED_TO_TEAM:!async function(e){await Aa(Ct(e.data.team_id)),await Aa(St()),await Aa(qe())}(e);break;case Ve.USER_ADDED:Aa(function(e){return async(t,n)=>{const a=n(),s=ae(a),o=nt(a),i="true"===s.ExperimentalTimezone,r=We(a);r===e.broadcast.channel_id&&(t(ht(r)),t({type:ce.RECEIVED_PROFILE_IN_CHANNEL,data:{id:e.broadcast.channel_id,user_id:e.data.user_id}}),"true"===(null==o?void 0:o.IsLicensed)&&"true"===(null==o?void 0:o.LDAPGroups)&&t(pt(r,i)));const l=O(n()),c=B(n());l===e.data.team_id&&c===e.data.user_id&&t(Ua(e.broadcast.channel_id)),"true"===o.Cloud&&at(n())&&t(da())}}(e));break;case Ve.USER_REMOVED:!async function(e){const t=Ia(),n=we(t)||{},a=At(t),s=ae(t),o=nt(t),i="true"===s.ExperimentalTimezone;if(e.broadcast.user_id===a.id){Aa((async(e,t)=>{const n=t(),a=M(n);await e(H(O(n)));for(const s of a){const t=x(n,s);t&&t.type===P.DM_CHANNEL?e(U(t.id)):t&&t.type===P.GM_CHANNEL&&e(F(t.id))}G()}));const s=Lt(t);if(e.data.channel_id===s&&Aa(Ot()),e.data.channel_id===n.id)if(e.data.remover_id===e.broadcast.user_id)Ie.push(ke(t)),await Aa({type:mt.LEAVE_CHANNEL,data:{id:e.data.channel_id,user_id:e.broadcast.user_id}});else{Mt(t,e.data.remover_id)||Aa(Pt(e.data.remover_id)),console.info("handleUserRemovedEvent"),await Aa({type:mt.LEAVE_CHANNEL,data:{id:e.data.channel_id,user_id:e.broadcast.user_id}}),rs()}It(a)&&Aa(ca())}else e.broadcast.channel_id===n.id&&(Aa(ht(n.id)),Aa({type:ce.RECEIVED_PROFILE_NOT_IN_CHANNEL,data:{id:e.broadcast.channel_id,user_id:e.data.user_id}}),"true"===(null==o?void 0:o.IsLicensed)&&"true"===(null==o?void 0:o.LDAPGroups)&&Aa(pt(n.id,i)));if(e.broadcast.user_id!==a.id){const n=x(t,e.broadcast.channel_id),s=Dt(t),o=Object.values(s).some((t=>t[e.data.user_id]));if(n&&It(a)&&!o){const t=[{type:ce.PROFILE_NO_LONGER_VISIBLE,data:{user_id:e.data.user_id}},{type:Tt.REMOVE_MEMBER_FROM_TEAM,data:{team_id:n.team_id,user_id:e.data.user_id}}];Aa(d(t))}}const r=e.broadcast.channel_id||e.data.channel_id,l=e.broadcast.user_id||e.data.user_id,c=x(t,r);!c||Ut(t,{permission:Ft.VIEW_MEMBERS})||Gt(t,{permission:Ft.VIEW_MEMBERS,team:c.team_id})||Aa(d([{type:ce.RECEIVED_PROFILE_NOT_IN_TEAM,data:{id:c.team_id,user_id:l}},{type:Tt.REMOVE_MEMBER_FROM_TEAM,data:{team_id:c.team_id,user_id:l}}]))}(e);break;case Ve.USER_UPDATED:!async function(e){const t=Ia(),n=At(t),a=e.data.user,s=ae(t),o=nt(t),i=It(a),r="true"===s.ExperimentalTimezone,l="true"===(null==o?void 0:o.IsLicensed)&&"true"===(null==o?void 0:o.LDAPGroups);if(i||r&&l){let e=Ht(t);const n=We(t);let s=e&&e[a.id];s||(await Aa(jt(n,a.id)),e=Ht(Ia()),s=e&&e[a.id]),s&&(l&&r&&Aa(pt(n,!0)),It(a)&&Aa(ht(n)))}n.id===a.id?a.update_at>n.update_at&&Bt()(Aa,Ia):Aa({type:ce.RECEIVED_PROFILE,data:a})}(e);break;case Ve.ROLE_ADDED:!function(e){const t=JSON.parse(e.data.role);Aa({type:Vt.RECEIVED_ROLE,data:t})}(e);break;case Ve.ROLE_REMOVED:!function(e){const t=JSON.parse(e.data.role);Aa({type:Vt.ROLE_DELETED,data:t})}(e);break;case Ve.CHANNEL_SCHEME_UPDATED:!function(e){Aa(Yt(e.broadcast.channel_id))}(e);break;case Ve.MEMBERROLE_UPDATED:!function(e){const t=JSON.parse(e.data.member),n=t.roles.split(" ");Aa(_t(n)),Aa({type:Tt.RECEIVED_MY_TEAM_MEMBER,data:t})}(e);break;case Ve.ROLE_UPDATED:!function(e){const t=JSON.parse(e.data.role);Aa({type:Vt.RECEIVED_ROLE,data:t})}(e);break;case Ve.CHANNEL_CREATED:Aa(function(e){return async(t,n)=>{const a=e.data.channel_id,s=e.data.team_id,o=n();if(O(o)===s){let e=x(o,a);e||(await t(dt(a)),e=x(n(),a)),t(ut(e,!1))}}}(e));break;case Ve.CHANNEL_DELETED:!function(e){const t=Ia(),n="true"===ae(t).ExperimentalViewArchivedChannels;if(We(t)===e.data.channel_id&&!n){const e=ke(t),n=O(t),a=Te(t,n);Ie.push(e+"/group/"+a)}Aa({type:mt.RECEIVED_CHANNEL_DELETED,data:{id:e.data.channel_id,team_id:e.broadcast.team_id,deleteAt:e.data.delete_at,viewArchivedChannels:n}})}(e);break;case Ve.CHANNEL_UNARCHIVED:!function(e){const t=Ia(),n="true"===ae(t).ExperimentalViewArchivedChannels;Aa({type:mt.RECEIVED_CHANNEL_UNARCHIVED,data:{id:e.data.channel_id,team_id:e.broadcast.team_id,viewArchivedChannels:n}})}(e);break;case Ve.CHANNEL_CONVERTED:!function(e){const t=e.data.channel_id;if(t){const e=x(Ia(),t);e&&Aa({type:mt.RECEIVED_CHANNEL,data:l(r({},e),{type:ge.PRIVATE_CHANNEL})})}}(e);break;case Ve.CHANNEL_UPDATED:Aa(function(e){return(t,n)=>{const a=JSON.parse(e.data.channel);t({type:mt.RECEIVED_CHANNEL,data:a});const s=n();a.id===We(s)&&Ie.replace(`${ke(s)}/group/${a.name}`)}}(e));break;case Ve.CHANNEL_MEMBER_UPDATED:!function(e){const t=JSON.parse(e.data.channelMember),n=t.roles.split(" ");Aa(_t(n)),Aa({type:mt.RECEIVED_MY_CHANNEL_MEMBER,data:t})}(e);break;case Ve.DIRECT_ADDED:case Ve.GROUP_ADDED:Aa(function(e){return Ua(e.broadcast.channel_id)}(e));break;case Ve.PREFERENCE_CHANGED:!function(e){const t=JSON.parse(e.data.preference);Aa({type:z.RECEIVED_PREFERENCES,data:[t]}),Fa(t)&&G()}(e);break;case Ve.PREFERENCES_CHANGED:!function(e){const t=JSON.parse(e.data.preferences);Aa({type:z.RECEIVED_PREFERENCES,data:t}),-1!==t.findIndex(Fa)&&G()}(e);break;case Ve.PREFERENCES_DELETED:!function(e){const t=JSON.parse(e.data.preferences);Aa({type:z.DELETED_PREFERENCES,data:t})}(e);break;case Ve.TYPING:Aa(function(e){return async(t,n)=>{const a=n(),s=ae(a),o=B(a),i=e.data.user_id,r={id:e.broadcast.channel_id+e.data.parent_id,userId:i,now:Date.now()};if(t({type:it.TYPING,data:r}),setTimeout((()=>{t({type:it.STOP_TYPING,data:r})}),parseInt(s.TimeBetweenUserTypingUpdatesMilliseconds,10)),i!==o){const e=await t(rt([i]));if(e.data&&e.data.length>0)return}lt(a,i)!==ge.ONLINE&&t(ct([i]))}}(e));break;case Ve.STATUS_CHANGED:!function(e){Aa({type:ce.RECEIVED_STATUSES,data:[{user_id:e.data.user_id,status:e.data.status}]})}(e);break;case Ve.HELLO:!function(e){Wt(e.data.server_version)(Aa,Ia)}(e);break;case Ve.REACTION_ADDED:!function(e){const t=JSON.parse(e.data.reaction);Aa(qt(t.emoji_name)),Aa({type:zt.RECEIVED_REACTION,data:t})}(e);break;case Ve.REACTION_REMOVED:!function(e){const t=JSON.parse(e.data.reaction);Aa({type:zt.REACTION_DELETED,data:t})}(e);break;case Ve.EMOJI_ADDED:!function(e){const t=JSON.parse(e.data.emoji);Aa({type:Jt.RECEIVED_CUSTOM_EMOJI,data:t})}(e);break;case Ve.CHANNEL_VIEWED:!function(e){window.isActive&&We(Ia())===e.data.channel_id||B(Ia())!==e.broadcast.user_id||Aa($t(e.data.channel_id,"",!1))}(e);break;case Ve.PLUGIN_ENABLED:case Ve.PLUGIN_DISABLED:!function(e){e.data.manifest}(e);break;case Ve.USER_ROLE_UPDATED:!function(e){const t=Be.getState().entities.users.profiles[e.data.user_id];if(t){const n=e.data.roles,a=n.split(" "),s=t.roles.includes(P.PERMISSIONS_SYSTEM_ADMIN)&&!n.includes(P.PERMISSIONS_SYSTEM_ADMIN);Be.dispatch({type:ce.RECEIVED_PROFILE,data:l(r({},t),{roles:n})}),Aa(_t(a)),s&&global.location.pathname.startsWith("/admin_console")&&rs()}}(e);break;case Ve.CONFIG_CHANGED:!function(e){Be.dispatch({type:Ye.CLIENT_CONFIG_RECEIVED,data:e.data.config})}(e);break;case Ve.LICENSE_CHANGED:!function(e){Be.dispatch({type:Ye.CLIENT_LICENSE_RECEIVED,data:e.data.license})}(e);break;case Ve.PLUGIN_STATUSES_CHANGED:!function(e){Be.dispatch({type:ue.RECEIVED_PLUGIN_STATUSES,data:e.data.plugin_statuses})}(e);break;case Ve.OPEN_DIALOG:!function(e){const t=e.data&&e.data.dialog||{},n=JSON.parse(t);Be.dispatch({type:Kt.RECEIVED_DIALOG,data:n});const a=Ia().entities.integrations.dialogTriggerId;if(n.trigger_id!==a)return;console.info("handleOpenDialogEvent",e)}(e);break;case Ve.RECEIVED_GROUP:!function(e){const t=JSON.parse(e.data.group);Aa(d([{type:Qt.RECEIVED_GROUP,data:t},{type:Qt.RECEIVED_MY_GROUPS,data:[t]}]))}(e);break;case Ve.RECEIVED_GROUP_ASSOCIATED_TO_TEAM:!function(e){Be.dispatch({type:Qt.RECEIVED_GROUP_ASSOCIATED_TO_TEAM,data:{teamID:e.broadcast.team_id,groups:[{id:e.data.group_id}]}})}(e);break;case Ve.RECEIVED_GROUP_NOT_ASSOCIATED_TO_TEAM:!function(e){Be.dispatch({type:Qt.RECEIVED_GROUP_NOT_ASSOCIATED_TO_TEAM,data:{teamID:e.broadcast.team_id,groups:[{id:e.data.group_id}]}})}(e);break;case Ve.RECEIVED_GROUP_ASSOCIATED_TO_CHANNEL:!function(e){Be.dispatch({type:Qt.RECEIVED_GROUP_ASSOCIATED_TO_CHANNEL,data:{channelID:e.broadcast.channel_id,groups:[{id:e.data.group_id}]}})}(e);break;case Ve.RECEIVED_GROUP_NOT_ASSOCIATED_TO_CHANNEL:!function(e){Be.dispatch({type:Qt.RECEIVED_GROUP_NOT_ASSOCIATED_TO_CHANNEL,data:{channelID:e.broadcast.channel_id,groups:[{id:e.data.group_id}]}})}(e);break;case Ve.WARN_METRIC_STATUS_RECEIVED:!function(e){var t=JSON.parse(e.data.warnMetricStatus);let n;t.id===Xt.SYSTEM_WARN_METRIC_NUMBER_OF_ACTIVE_USERS_500?n=$e.WARN_METRIC_STATUS_NUMBER_OF_USERS:t.id===Xt.SYSTEM_WARN_METRIC_NUMBER_OF_POSTS_2M&&(n=$e.WARN_METRIC_STATUS_NUMBER_OF_POSTS);Be.dispatch(d([{type:Ye.WARN_METRIC_STATUS_RECEIVED,data:t},{type:ne.SHOW_NOTICE,data:[n]}]))}(e);break;case Ve.WARN_METRIC_STATUS_REMOVED:!function(e){Be.dispatch({type:Ye.WARN_METRIC_STATUS_REMOVED,data:{id:e.data.warnMetricId}})}(e);break;case Ve.SIDEBAR_CATEGORY_CREATED:Aa(function(e){return(t,n)=>{const a=n();e.broadcast.team_id===O(a)&&t(ot(e.broadcast.team_id))}}(e));break;case Ve.SIDEBAR_CATEGORY_UPDATED:Aa(function(e){return(t,n)=>{const a=n();e.broadcast.team_id===O(a)&&t(ot(e.broadcast.team_id))}}(e));break;case Ve.SIDEBAR_CATEGORY_DELETED:Aa(function(e){return(t,n)=>{const a=n();e.broadcast.team_id===O(a)&&t(ot(e.broadcast.team_id))}}(e));break;case Ve.SIDEBAR_CATEGORY_ORDER_UPDATED:Aa(function(e){return st(e.broadcast.team_id,e.data.order)}(e));break;case Ve.USER_ACTIVATION_STATUS_CHANGED:Aa(((e,t)=>{const n=t();"true"===nt(n).Cloud&&(at(n)&&e(da()),e(se({clientFunc:te.getSubscriptionStats,onSuccess:ie.RECEIVED_CLOUD_SUBSCRIPTION_STATS})))}));break;case Ve.CLOUD_PAYMENT_STATUS_UPDATED:Aa((e=>e(se({clientFunc:te.getSubscription,onSuccess:[ie.RECEIVED_CLOUD_SUBSCRIPTION]}))));break;case Ve.FIRST_ADMIN_VISIT_MARKETPLACE_STATUS_RECEIVED:!function(e){const t=JSON.parse(e.data.firstAdminVisitMarketplaceStatus);Be.dispatch({type:Ye.FIRST_ADMIN_VISIT_MARKETPLACE_STATUS_RECEIVED,data:t})}(e);break;case Ve.THREAD_FOLLOW_CHANGED:Aa(function(e){return async(t,n)=>{const a=n();!Ze(a,e.data.thread_id)&&e.data.state&&await t(et(B(a),O(a),e.data.thread_id,!0)),tt(t,e.data.thread_id,e.broadcast.team_id,e.data.state)}}(e));break;case Ve.THREAD_READ_CHANGED:Aa(function(e){return(t,n)=>{var a;if(e.data.thread_id){const s=null==(a=n().entities.threads.threads)?void 0:a[e.data.thread_id];s&&Qe(t,e.data.thread_id,e.broadcast.team_id,e.data.channel_id,{lastViewedAt:e.data.timestamp,prevUnreadMentions:s.unread_mentions,newUnreadMentions:e.data.unread_mentions,prevUnreadReplies:s.unread_replies,newUnreadReplies:e.data.unread_replies})}else Xe(t,e.broadcast.team_id)}}(e));break;case Ve.THREAD_UPDATED:Aa(function(e){return(t,n)=>{try{const a=JSON.parse(e.data.thread);Ke(t,n,a,e.broadcast.team_id)}catch{}}}(e));break;case Ve.CONTACT_CHANGED:!function(e){const t=e.data.contact;"created"===e.data.event?Aa({type:Zt.NEW_CONTACT,data:t}):Aa({type:Zt.RECEIVED_PROFILE,data:t})}(e);break;case Ve.APPS_FRAMEWORK_REFRESH_BINDINGS:Aa(Ga())}Object.values(Na).forEach((t=>{t&&t.hasOwnProperty(e.event)&&"function"==typeof t[e.event]&&t[e.event](e)}))}const Pa=function(e){let t,n=[],a=0;const s=()=>{t=null,n.length>0&&Aa(function(e){return(t,n)=>{const a=e.map((e=>JSON.parse(e.data.post))),s=en(n()),o=a.map((e=>tn(e,s)));t(d(o)),t(nn(a)),ft(a,t,n)}}(n)),n=[],a=0};return function(o){t&&a>4?(n.push(o)>200&&(n=[],console.log("channel broken because of too many incoming messages")),clearTimeout(t),t=setTimeout(s,e)):(a+=1,Aa(function(e){return(t,n)=>{const a=JSON.parse(e.data.post);t(gt(a,e)),ft([a],t,n),a.user_id!==B(n())&&!bt(n(),a.user_id)&&e.data.set_online&&t({type:ce.RECEIVED_STATUSES,data:[{user_id:a.user_id,status:vt.ONLINE}]})}}(o)),clearTimeout(t),t=setTimeout(s,e))}}(100);function Ua(e){return async t=>{const{data:n,error:a}=await t(dt(e));a||t(ut(n.channel))}}function Fa(e){return e.category===P.Preferences.CATEGORY_DIRECT_CHANNEL_SHOW&&"true"===e.value}function Ga(){return(e,t)=>{const n=t();return ra(n)&&e(la(B(n),We(n))),{data:!0}}}function Ha(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var ja=function(e,t){for(var n=arguments.length,a=new Array(n>2?n-2:0),s=2;s<n;s++)a[s-2]=arguments[s];if(!e){var o;if(void 0===t)o=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var i=0;(o=new Error(t.replace(/%s/g,(function(){return String(a[i++])})))).name="Invariant Violation"}throw o.framesToPop=1,o}},Ba=function(){function e(){Ha(this,"_callbacks",void 0),Ha(this,"_isDispatching",void 0),Ha(this,"_isHandled",void 0),Ha(this,"_isPending",void 0),Ha(this,"_lastID",void 0),Ha(this,"_pendingPayload",void 0),this._callbacks={},this._isDispatching=!1,this._isHandled={},this._isPending={},this._lastID=1}var t=e.prototype;return t.register=function(e){var t="ID_"+this._lastID++;return this._callbacks[t]=e,t},t.unregister=function(e){this._callbacks[e]||ja(!1),delete this._callbacks[e]},t.waitFor=function(e){this._isDispatching||ja(!1);for(var t=0;t<e.length;t++){var n=e[t];this._isPending[n]?this._isHandled[n]||ja(!1):(this._callbacks[n]||ja(!1),this._invokeCallback(n))}},t.dispatch=function(e){this._isDispatching&&ja(!1),this._startDispatching(e);try{for(var t in this._callbacks)this._isPending[t]||this._invokeCallback(t)}finally{this._stopDispatching()}},t.isDispatching=function(){return this._isDispatching},t._invokeCallback=function(e){this._isPending[e]=!0,this._callbacks[e](this._pendingPayload),this._isHandled[e]=!0},t._startDispatching=function(e){for(var t in this._callbacks)this._isPending[t]=!1,this._isHandled[t]=!1;this._pendingPayload=e,this._isDispatching=!0},t._stopDispatching=function(){delete this._pendingPayload,this._isDispatching=!1},e}();const Va=P.PayloadSources,Ya=Object.assign(new Ba,{handleServerAction:function(e){e.type||console.warn("handleServerAction called with undefined action type");var t={source:Va.SERVER_ACTION,action:e};this.dispatch(t)},handleViewAction:function(e){e.type||console.warn("handleViewAction called with undefined action type");var t={source:Va.VIEW_ACTION,action:e};this.dispatch(t)}}),Wa=Be.dispatch,qa=Be.getState;const za=new class{constructor(){c(this,"hasCheckedLocalStorage"),c(this,"localStorageSupported")}setItem(e,t){Wa(an(e,t))}getItem(e,t){return sn(e,t)(qa())}removeItem(e){Wa(on(e))}setGlobalItem(e,t){Wa(rn(e,t))}getGlobalItem(e,t=null){return ln(e,t)(qa())}removeGlobalItem(e){Wa(cn(e))}signalLogout(){if(this.isLocalStorageSupported()){const e=dn();un(mn.ANNOUNCEMENT),sessionStorage.setItem(mn.LOGOUT,e),localStorage.setItem(mn.LOGOUT,e),localStorage.removeItem(mn.LOGOUT)}}isSignallingLogout(e){return e===sessionStorage.getItem(mn.LOGOUT)}signalLogin(){if(this.isLocalStorageSupported()){const e=dn();sessionStorage.setItem(mn.LOGIN,e),localStorage.setItem(mn.LOGIN,e),localStorage.removeItem(mn.LOGIN)}}isSignallingLogin(e){return e===sessionStorage.getItem(mn.LOGIN)}clear(e){Wa(hn(e))}isLocalStorageSupported(){if(this.hasCheckedLocalStorage)return this.localStorageSupported;this.localStorageSupported=!1;try{localStorage.setItem("__testLocal__","1"),"1"===localStorage.getItem("__testLocal__")&&(this.localStorageSupported=!0),localStorage.removeItem("__testLocal__")}catch(e){this.localStorageSupported=!1}try{sessionStorage.setItem("__testSession__","1"),sessionStorage.removeItem("__testSession__")}catch(e){Ie.push("/error?type="+pn.LOCAL_STORAGE)}return this.hasCheckedLocalStorage=!0,this.localStorageSupported}hasSeenLandingPage(){return localStorage.getItem(mn.LANDING_PAGE_SEEN)}setLandingPageSeen(e){localStorage.setItem(mn.LANDING_PAGE_SEEN,String(e))}getLandingPreference(e){return localStorage.getItem(mn.LANDING_PREFERENCE+String(e))}setLandingPreferenceToMattermostApp(e){localStorage.setItem(mn.LANDING_PREFERENCE+String(e),_n.MATTERMOSTAPP)}setLandingPreferenceToBrowser(e){localStorage.setItem(mn.LANDING_PREFERENCE+String(e),_n.BROWSER)}clearLandingPreference(e){localStorage.removeItem(mn.LANDING_PREFERENCE+String(e))}};const Ja=Be.dispatch,$a=Be.getState;function Ka(e){function t(e){const t=$a(),n=B(t),a=e.team_id||O(t),s=Tn(t),o=kn(t)===An.PIN,i=kn(t)===An.CHANNEL_FILES,r=In(t,e.id),l=We(t);Ja(ht(e.id));const c=Z.getPreviousChannelName(n,a);c!==e.name&&(Z.setPenultimateChannelName(n,a,c),Z.setPreviousChannelName(n,a,e.name)),s&&o&&Ja(Nn(An.PIN,e.id)),s&&i&&Ja(Nn(An.CHANNEL_FILES,e.id)),l&&G(),Ja(d([{type:mt.SELECT_CHANNEL,data:e.id},{type:ne.SELECT_CHANNEL_WITH_MEMBER,data:e.id,channel:e,member:r||{}}])),ra(t)&&Ja(la(n,e.id))}e.fake?async function(e,t,n){const a=$a(),s=B(a),o=Sn(e),i=await Y(s,o)(Ja,$a);"data"in i?t(i.data):n()}(e,(e=>{t(e)}),(()=>{Ie.push("/")})):t(e)}function Qa(e,t=Date.now()){return{type:ne.UPDATE_CHANNEL_LAST_VIEWED_AT,channel_id:e,last_viewed_at:t}}function Xa(){Ja(Ot())}function Za(){Ya.handleViewAction({type:ne.TOGGLE_SHORTCUTS_MODAL,value:!0})}function es(e){Ya.handleViewAction({type:ne.TOGGLE_CHANNEL_NAME_UPDATE_MODAL,value:!0,channel:e})}function ts(e){Ya.handleViewAction({type:ne.TOGGLE_GET_PUBLIC_LINK_MODAL,value:!0,fileId:e})}function ns(e){Ya.handleViewAction({type:ne.TOGGLE_LEAVE_PRIVATE_CHANNEL_MODAL,value:e})}let as=0;function ss(e,t){return Ja((async(n,a)=>{const s=a(),o=ae(s),i=Date.now(),r=gn(s),l=r?r.member_count:0,c=fn(o.TimeBetweenUserTypingUpdatesMilliseconds),d=fn(o.MaxNotificationsPerChannel);return i-as>c&&l<d&&"true"===o.EnableUserTypingMessages&&(ka.userTyping(e,t),as=i),{data:!0}}))}function os(e="#/",t=!0,n=!0,a){n&&Z.setWasLoggedIn(!1),0!==e.indexOf("#")&&(e=`#${e}`),Ja(bn()).then((()=>{t&&za.signalLogout(),za.clear(),vn(),Ra(),yn(),(a||Ie).push(e)})).catch((()=>{(a||Ie).push(e)}))}function is(e){Ja({type:ne.BROWSER_CHANGE_FOCUS,focus:e})}async function rs(e){let t=$a(),n=At(t);if((wn(En(t))||!n)&&(await Ja(ee()),t=$a(),n=At(t)),!n)return;const a=Cn(t),s=Z.getPreviousTeamId(n.id);let o,i=Rt(t);if(0!==i.length)if(s&&(o=Nt(t,s)),o&&0===o.delete_at)ls(e||Ie,`/${o.name}`,!e);else{i=function(e,t,n=""){if(!e)return[];const a=n.split(",");return[...e.filter((e=>null!==e&&a.includes(e.id))).sort(((e,t)=>a.indexOf(e.id)-a.indexOf(t.id))),...e.filter((e=>null!==e&&!a.includes(e.id))).sort(((e,n)=>function(e,t,n){return null!==t.display_name&&t.display_name!==n.display_name?t.display_name.localeCompare(n.display_name,e,{numeric:!0}):t.name.localeCompare(n.name,e,{numeric:!0})}(t,e,n)))].filter((e=>e&&!e.delete_at>0&&null!=e.display_name))}(i,a);for(const t of i)return void ls(e||Ie,`/${t.name}`,!e);ls(e||Ie,"/pick-team",!e)}else ls(e||Ie,"/join",!e)}function ls(e,t,n){t=n?`#${t}`:t,e.replace(t)}const cs=p.createContext({setTitle:()=>{},selectDot:()=>{}}),ds=cs.Provider;function us(){return _.exports.useContext(cs)}class ms extends p.PureComponent{constructor(){super(...arguments),c(this,"handleLocaleChange",(e=>{te.setAcceptLanguage(e),this.loadTranslationsIfNecessary(e)})),c(this,"loadTranslationsIfNecessary",(e=>{const{translations:t,actions:n}=this.props;if(t)return;const a=Rn(e);a&&n.loadTranslations(e,a.url)}))}componentDidMount(){Dn(),xn(Ln),this.handleLocaleChange(this.props.locale)}componentDidUpdate(e){e.locale!==this.props.locale&&this.handleLocaleChange(this.props.locale)}render(){const{locale:e,translations:t,children:n}=this.props;return t?g(f,{locale:e,messages:t,textComponent:"span",wrapRichTextChunksInFragment:!1,children:n},e):null}}var hs=b((function(e){const t=Cn(e);return{locale:t,translations:On(e,t)}}),(function(e){return{actions:v({loadTranslations:ea},e)}}))(ms);function ps(e){const{formatMessage:t}=y();return g("span",l(r({},e),{children:g("svg",{xmlns:"http://www.w3.org/2000/svg",className:e.className,x:"0px",y:"0px",viewBox:"0 0 512 512",enableBackground:"new 0 0 512 512",role:"img",fill:"currentColor","aria-label":t({id:"generic_icons.gomlo",defaultMessage:"Gomlo Logo"}),children:w("g",{children:[g("path",{d:"M413.84 122.759C433.616 106.181 433.565 75.576 411.018 63.0267C376.991 44.0888 337.986 31.8955 296.975 27.6627C238.402 21.6172 179.099 32.157 128.492 57.6067C77.8856 83.0564 38.8794 121.956 17.6739 168.121C-3.53157 214.286 -5.7194 265.069 11.4582 312.396C28.6358 359.724 64.193 400.88 112.478 429.323C160.763 457.767 219.005 471.865 277.945 469.377C336.886 466.888 393.143 447.957 437.775 415.591C468.009 393.666 491.732 366.429 507.442 336.051C519.483 312.766 502.332 287.122 476.469 282.846V282.846C452.952 278.959 430.986 294.585 418.424 314.841C408.382 331.033 394.723 345.606 378.035 357.707C348.803 378.905 311.957 391.305 273.353 392.935C234.749 394.564 196.603 385.33 164.978 366.701C133.353 348.072 110.064 321.116 98.8134 290.118C87.5627 259.12 88.9956 225.86 102.884 195.623C116.773 165.386 142.321 139.909 175.467 123.24C208.612 106.572 247.454 99.6683 285.817 103.628C311.85 106.315 336.648 113.899 358.441 125.656C376.142 135.206 398.426 135.679 413.84 122.759V122.759Z",style:_s}),g("path",{style:_s,d:"M64.7395 393.165C64.8585 393.263 64.977 393.363 65.095 393.464C85.9559 411.246 83.1645 450.984 59.9564 486C106.088 475.852 167.616 469.657 235.184 469.657C245.142 469.657 254.969 469.792 264.635 470.054V396.357C257.318 398.835 249.092 400.226 240.398 400.226C226.274 400.226 213.388 396.555 203.621 390.517H114.703V393.165H64.7395Z"}),g("ellipse",{rx:"42.3825",ry:"44.0261",transform:"matrix(0.968445 0.249228 -0.229831 0.97323 468.384 215.272)",style:_s}),g("ellipse",{rx:"34.7662",ry:"36.1144",transform:"matrix(0.968445 0.249228 -0.229831 0.97323 365.788 240.744)",style:_s}),g("ellipse",{rx:"28.255",ry:"29.3508",transform:"matrix(0.968445 0.249228 -0.229831 0.97323 276.722 263.097)",style:_s})]})})}))}const _s={fillRule:"evenodd",clipRule:"evenodd"};var gs,fs,bs,vs,ys=e=>g("svg",{xmlns:"http://www.w3.org/2000/svg",className:e.className,viewBox:"0 0 20 20",fill:"currentColor",children:g("path",{fillRule:"evenodd",d:"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z",clipRule:"evenodd"})}),ws=e=>g("svg",{xmlns:"http://www.w3.org/2000/svg",className:e.className,viewBox:"0 0 20 20",fill:"currentColor",children:g("path",{fillRule:"evenodd",d:"M5 10a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1z",clipRule:"evenodd"})});function Es(){return(Es=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function Cs(e,t){if(null==e)return{};var n,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}function Ss(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function Ts(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return Ss(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ss(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=e[Symbol.iterator]()).next.bind(n)}function ks(e,t){if(e in t){for(var n=t[e],a=arguments.length,s=new Array(a>2?a-2:0),o=2;o<a;o++)s[o-2]=arguments[o];return"function"==typeof n?n.apply(void 0,s):n}var i=new Error('Tried to handle "'+e+'" but there is no handler defined. Only defined handlers are: '+Object.keys(t).map((function(e){return'"'+e+'"'})).join(", ")+".");throw Error.captureStackTrace&&Error.captureStackTrace(i,ks),i}function As(e){var t=e.props,n=e.slot,a=e.defaultTag,s=e.features,o=e.visible,i=void 0===o||o,r=e.name;if(i)return Is(t,n,a,r);var l=null!=s?s:gs.None;if(l&gs.Static){var c=t.static,d=void 0!==c&&c,u=Cs(t,["static"]);if(d)return Is(u,n,a,r)}if(l&gs.RenderStrategy){var m,h=t.unmount,p=void 0===h||h,_=Cs(t,["unmount"]);return ks(p?bs.Unmount:bs.Hidden,((m={})[bs.Unmount]=function(){return null},m[bs.Hidden]=function(){return Is(Es({},_,{hidden:!0,style:{display:"none"}}),n,a,r)},m))}return Is(t,n,a,r)}function Is(e,t,n,a){var s;void 0===t&&(t={});var o=Ds(e,["unmount","static"]),i=o.as,r=void 0===i?n:i,l=o.children,c=o.refName,d=void 0===c?"ref":c,u=Cs(o,["as","children","refName"]),m=void 0!==e.ref?((s={})[d]=e.ref,s):{},h="function"==typeof l?l(t):l;if(u.className&&"function"==typeof u.className&&(u.className=u.className(t)),r===_.exports.Fragment&&Object.keys(u).length>0){if(!_.exports.isValidElement(h)||Array.isArray(h)&&h.length>1)throw new Error(['Passing props on "Fragment"!',"","The current component <"+a+' /> is rendering a "Fragment".',"However we need to passthrough the following props:",Object.keys(u).map((function(e){return"  - "+e})).join("\n"),"","You can apply a few solutions:",['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".',"Render a single element as the child so that we can forward the props onto that element."].map((function(e){return"  - "+e})).join("\n")].join("\n"));return _.exports.cloneElement(h,Object.assign({},function(e,t,n){for(var a,s=Object.assign({},e),o=function(){var n,o=a.value;void 0!==e[o]&&void 0!==t[o]&&Object.assign(s,((n={})[o]=function(n){n.defaultPrevented||e[o](n),n.defaultPrevented||t[o](n)},n))},i=Ts(n);!(a=i()).done;)o();return s}(function(e){var t=Object.assign({},e);for(var n in t)void 0===t[n]&&delete t[n];return t}(Ds(u,["ref"])),h.props,["onClick"]),m))}return _.exports.createElement(r,Object.assign({},Ds(u,["ref"]),r!==_.exports.Fragment&&m),h)}function Ns(e){var t;return Object.assign(_.exports.forwardRef(e),{displayName:null!=(t=e.displayName)?t:e.name})}function Ds(e,t){void 0===t&&(t=[]);for(var n,a=Object.assign({},e),s=Ts(t);!(n=s()).done;){var o=n.value;o in a&&delete a[o]}return a}(fs=gs||(gs={}))[fs.None=0]="None",fs[fs.RenderStrategy=1]="RenderStrategy",fs[fs.Static=2]="Static",(vs=bs||(bs={}))[vs.Unmount=0]="Unmount",vs[vs.Hidden=1]="Hidden";var Rs,xs,Ls="undefined"!=typeof window?_.exports.useLayoutEffect:_.exports.useEffect,Os={serverHandoffComplete:!1};function Ms(){var e=_.exports.useState(Os.serverHandoffComplete),t=e[0],n=e[1];return _.exports.useEffect((function(){!0!==t&&n(!0)}),[t]),_.exports.useEffect((function(){!1===Os.serverHandoffComplete&&(Os.serverHandoffComplete=!0)}),[]),t}function Ps(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var a=_.exports.useRef(t);return _.exports.useEffect((function(){a.current=t}),[t]),_.exports.useCallback((function(e){for(var t,n=Ts(a.current);!(t=n()).done;){var s=t.value;null!=s&&("function"==typeof s?s(e):s.current=e)}}),[a])}function Us(e){for(var t,n,a=e.parentElement,s=null;a&&!(a instanceof HTMLFieldSetElement);)a instanceof HTMLLegendElement&&(s=a),a=a.parentElement;var o=null!=(t=""===(null==(n=a)?void 0:n.getAttribute("disabled")))&&t;return(!o||!function(e){if(!e)return!1;var t=e.previousElementSibling;for(;null!==t;){if(t instanceof HTMLLegendElement)return!1;t=t.previousElementSibling}return!0}(s))&&o}(xs=Rs||(Rs={})).Space=" ",xs.Enter="Enter",xs.Escape="Escape",xs.Backspace="Backspace",xs.ArrowLeft="ArrowLeft",xs.ArrowUp="ArrowUp",xs.ArrowRight="ArrowRight",xs.ArrowDown="ArrowDown",xs.Home="Home",xs.End="End",xs.PageUp="PageUp",xs.PageDown="PageDown",xs.Tab="Tab";var Fs=0;function Gs(){return++Fs}function Hs(){var e=Ms(),t=_.exports.useState(e?Gs:null),n=t[0],a=t[1];return Ls((function(){null===n&&a(Gs())}),[n]),null!=n?""+n:void 0}function js(e,t,n){var a=_.exports.useRef(t);a.current=t,_.exports.useEffect((function(){function t(e){a.current.call(window,e)}return window.addEventListener(e,t,n),function(){return window.removeEventListener(e,t,n)}}),[e,n])}var Bs,Vs,Ys,Ws,qs,zs,Js,$s,Ks=["[contentEditable=true]","[tabindex]","a[href]","area[href]","button:not([disabled])","iframe","input:not([disabled])","select:not([disabled])","textarea:not([disabled])"].map((function(e){return e+":not([tabindex='-1'])"})).join(",");function Qs(e){null==e||e.focus({preventScroll:!0})}function Xs(e,t){var n=Array.isArray(e)?e:function(e){return void 0===e&&(e=document.body),null==e?[]:Array.from(e.querySelectorAll(Ks))}(e),a=document.activeElement,s=function(){if(t&(Bs.First|Bs.Next))return qs.Next;if(t&(Bs.Previous|Bs.Last))return qs.Previous;throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last")}(),o=function(){if(t&Bs.First)return 0;if(t&Bs.Previous)return Math.max(0,n.indexOf(a))-1;if(t&Bs.Next)return Math.max(0,n.indexOf(a))+1;if(t&Bs.Last)return n.length-1;throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last")}(),i=t&Bs.NoScroll?{preventScroll:!0}:{},r=0,l=n.length,c=void 0;do{var d;if(r>=l||r+l<=0)return Ys.Error;var u=o+r;if(t&Bs.WrapAround)u=(u+l)%l;else{if(u<0)return Ys.Underflow;if(u>=l)return Ys.Overflow}null==(d=c=n[u])||d.focus(i),r+=s}while(c!==document.activeElement);return c.hasAttribute("tabindex")||c.setAttribute("tabindex","0"),Ys.Success}function Zs(){var e=_.exports.useRef(!1);return _.exports.useEffect((function(){return e.current=!0,function(){e.current=!1}}),[]),e}(Vs=Bs||(Bs={}))[Vs.First=1]="First",Vs[Vs.Previous=2]="Previous",Vs[Vs.Next=4]="Next",Vs[Vs.Last=8]="Last",Vs[Vs.WrapAround=16]="WrapAround",Vs[Vs.NoScroll=32]="NoScroll",(Ws=Ys||(Ys={}))[Ws.Error=0]="Error",Ws[Ws.Overflow=1]="Overflow",Ws[Ws.Success=2]="Success",Ws[Ws.Underflow=3]="Underflow",(zs=qs||(qs={}))[zs.Previous=-1]="Previous",zs[zs.Next=1]="Next",($s=Js||(Js={}))[$s.Strict=0]="Strict",$s[$s.Loose=1]="Loose";var eo,to,no,ao,so,oo,io,ro,lo=_.exports.createContext(null);function co(){return _.exports.useContext(lo)}function uo(e){var t=e.value,n=e.children;return g(lo.Provider,{value:t,children:n})}function mo(e){var t;if(e.type)return e.type;var n=null!=(t=e.as)?t:"button";return"string"==typeof n&&"button"===n.toLowerCase()?"button":void 0}function ho(e,t){var n=_.exports.useState((function(){return mo(e)})),a=n[0],s=n[1];return Ls((function(){s(mo(e))}),[e.type,e.as]),Ls((function(){a||t.current&&t.current instanceof HTMLButtonElement&&!t.current.hasAttribute("type")&&s("button")}),[a,t]),a}function po(){var e=[],t={requestAnimationFrame:function(e){function t(){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(){var e=requestAnimationFrame.apply(void 0,arguments);t.add((function(){return cancelAnimationFrame(e)}))})),nextFrame:function(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];t.requestAnimationFrame((function(){t.requestAnimationFrame.apply(t,n)}))},setTimeout:function(e){function t(){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(){var e=setTimeout.apply(void 0,arguments);t.add((function(){return clearTimeout(e)}))})),add:function(t){e.push(t)},dispose:function(){for(var t,n=Ts(e.splice(0));!(t=n()).done;){(0,t.value)()}}};return t}function _o(){var e=_.exports.useState(po)[0];return _.exports.useEffect((function(){return function(){return e.dispose()}}),[e]),e}function go(e,t){var n=t.resolveItems();if(n.length<=0)return null;var a=t.resolveActiveIndex(),s=null!=a?a:-1,o=function(){switch(e.focus){case no.First:return n.findIndex((function(e){return!t.resolveDisabled(e)}));case no.Previous:var a=n.slice().reverse().findIndex((function(e,n,a){return!(-1!==s&&a.length-n-1>=s)&&!t.resolveDisabled(e)}));return-1===a?a:n.length-1-a;case no.Next:return n.findIndex((function(e,n){return!(n<=s)&&!t.resolveDisabled(e)}));case no.Last:var o=n.slice().reverse().findIndex((function(e){return!t.resolveDisabled(e)}));return-1===o?o:n.length-1-o;case no.Specific:return n.findIndex((function(n){return t.resolveId(n)===e.id}));case no.Nothing:return null;default:!function(e){throw new Error("Unexpected object: "+e)}(e)}}();return-1===o?a:o}lo.displayName="OpenClosedContext",(to=eo||(eo={}))[to.Open=0]="Open",to[to.Closed=1]="Closed",function(e){e[e.First=0]="First",e[e.Previous=1]="Previous",e[e.Next=2]="Next",e[e.Last=3]="Last",e[e.Specific=4]="Specific",e[e.Nothing=5]="Nothing"}(no||(no={})),(oo=so||(so={}))[oo.Open=0]="Open",oo[oo.Closed=1]="Closed",(ro=io||(io={}))[ro.OpenMenu=0]="OpenMenu",ro[ro.CloseMenu=1]="CloseMenu",ro[ro.GoToItem=2]="GoToItem",ro[ro.Search=3]="Search",ro[ro.ClearSearch=4]="ClearSearch",ro[ro.RegisterItem=5]="RegisterItem",ro[ro.UnregisterItem=6]="UnregisterItem";var fo=((ao={})[io.CloseMenu]=function(e){return e.menuState===so.Closed?e:Es({},e,{activeItemIndex:null,menuState:so.Closed})},ao[io.OpenMenu]=function(e){return e.menuState===so.Open?e:Es({},e,{menuState:so.Open})},ao[io.GoToItem]=function(e,t){var n=go(t,{resolveItems:function(){return e.items},resolveActiveIndex:function(){return e.activeItemIndex},resolveId:function(e){return e.id},resolveDisabled:function(e){return e.dataRef.current.disabled}});return""===e.searchQuery&&e.activeItemIndex===n?e:Es({},e,{searchQuery:"",activeItemIndex:n})},ao[io.Search]=function(e,t){var n=e.searchQuery+t.value.toLowerCase(),a=e.items.findIndex((function(e){var t;return(null==(t=e.dataRef.current.textValue)?void 0:t.startsWith(n))&&!e.dataRef.current.disabled}));return-1===a||a===e.activeItemIndex?Es({},e,{searchQuery:n}):Es({},e,{searchQuery:n,activeItemIndex:a})},ao[io.ClearSearch]=function(e){return""===e.searchQuery?e:Es({},e,{searchQuery:""})},ao[io.RegisterItem]=function(e,t){return Es({},e,{items:[].concat(e.items,[{id:t.id,dataRef:t.dataRef}])})},ao[io.UnregisterItem]=function(e,t){var n=e.items.slice(),a=null!==e.activeItemIndex?n[e.activeItemIndex]:null,s=n.findIndex((function(e){return e.id===t.id}));return-1!==s&&n.splice(s,1),Es({},e,{items:n,activeItemIndex:s===e.activeItemIndex||null===a?null:n.indexOf(a)})},ao),bo=_.exports.createContext(null);function vo(e){var t=_.exports.useContext(bo);if(null===t){var n=new Error("<"+e+" /> is missing a parent <"+Eo.name+" /> component.");throw Error.captureStackTrace&&Error.captureStackTrace(n,vo),n}return t}function yo(e,t){return ks(t.type,fo,e,t)}bo.displayName="MenuContext";var wo=_.exports.Fragment;function Eo(e){var t,n=_.exports.useReducer(yo,{menuState:so.Closed,buttonRef:_.exports.createRef(),itemsRef:_.exports.createRef(),items:[],searchQuery:"",activeItemIndex:null}),a=n[0],s=a.menuState,o=a.itemsRef,i=a.buttonRef,r=n[1];js("mousedown",(function(e){var t,n,a,l=e.target;s===so.Open&&((null==(t=i.current)?void 0:t.contains(l))||(null==(n=o.current)?void 0:n.contains(l))||(r({type:io.CloseMenu}),function(e,t){var n;return void 0===t&&(t=Js.Strict),e!==document.body&&ks(t,((n={})[Js.Strict]=function(){return e.matches(Ks)},n[Js.Loose]=function(){for(var t=e;null!==t;){if(t.matches(Ks))return!0;t=t.parentElement}return!1},n))}(l,Js.Loose)||(e.preventDefault(),null==(a=i.current)||a.focus())))}));var l=_.exports.useMemo((function(){return{open:s===so.Open}}),[s]);return g(bo.Provider,{value:n,children:g(uo,{value:ks(s,(t={},t[so.Open]=eo.Open,t[so.Closed]=eo.Closed,t)),children:As({props:e,slot:l,defaultTag:wo,name:"Menu"})})})}var Co,So,To=Ns((function e(t,n){var a,s=vo([Eo.name,e.name].join(".")),o=s[0],i=s[1],r=Ps(o.buttonRef,n),l="headlessui-menu-button-"+Hs(),c=_o(),d=_.exports.useCallback((function(e){switch(e.key){case Rs.Space:case Rs.Enter:case Rs.ArrowDown:e.preventDefault(),e.stopPropagation(),i({type:io.OpenMenu}),c.nextFrame((function(){return i({type:io.GoToItem,focus:no.First})}));break;case Rs.ArrowUp:e.preventDefault(),e.stopPropagation(),i({type:io.OpenMenu}),c.nextFrame((function(){return i({type:io.GoToItem,focus:no.Last})}))}}),[i,c]),u=_.exports.useCallback((function(e){switch(e.key){case Rs.Space:e.preventDefault()}}),[]),m=_.exports.useCallback((function(e){if(Us(e.currentTarget))return e.preventDefault();t.disabled||(o.menuState===so.Open?(i({type:io.CloseMenu}),c.nextFrame((function(){var e;return null==(e=o.buttonRef.current)?void 0:e.focus({preventScroll:!0})}))):(e.preventDefault(),e.stopPropagation(),i({type:io.OpenMenu})))}),[i,c,o,t.disabled]),h=_.exports.useMemo((function(){return{open:o.menuState===so.Open}}),[o]);return As({props:Es({},t,{ref:r,id:l,type:ho(t,o.buttonRef),"aria-haspopup":!0,"aria-controls":null==(a=o.itemsRef.current)?void 0:a.id,"aria-expanded":t.disabled?void 0:o.menuState===so.Open,onKeyDown:d,onKeyUp:u,onClick:m}),slot:h,defaultTag:"button",name:"Menu.Button"})})),ko=gs.RenderStrategy|gs.Static,Ao=Ns((function e(t,n){var a,s,o,i,r,l,c,d,u,m,h=vo([Eo.name,e.name].join(".")),p=h[0],g=h[1],f=Ps(p.itemsRef,n),b="headlessui-menu-items-"+Hs(),v=_o(),y=co(),w=null!==y?y===eo.Open:p.menuState===so.Open;_.exports.useEffect((function(){var e=p.itemsRef.current;e&&p.menuState===so.Open&&e!==document.activeElement&&e.focus({preventScroll:!0})}),[p.menuState,p.itemsRef]),o={container:p.itemsRef.current,enabled:p.menuState===so.Open,accept:function(e){return"menuitem"===e.getAttribute("role")?NodeFilter.FILTER_REJECT:e.hasAttribute("role")?NodeFilter.FILTER_SKIP:NodeFilter.FILTER_ACCEPT},walk:function(e){e.setAttribute("role","none")}},i=o.container,r=o.accept,l=o.walk,c=o.enabled,d=void 0===c||c,u=_.exports.useRef(r),m=_.exports.useRef(l),_.exports.useEffect((function(){u.current=r,m.current=l}),[r,l]),Ls((function(){if(i&&d)for(var e=u.current,t=m.current,n=Object.assign((function(t){return e(t)}),{acceptNode:e}),a=document.createTreeWalker(i,NodeFilter.SHOW_ELEMENT,n,!1);a.nextNode();)t(a.currentNode)}),[i,d,u,m]);var E=_.exports.useCallback((function(e){switch(v.dispose(),e.key){case Rs.Space:if(""!==p.searchQuery)return e.preventDefault(),e.stopPropagation(),g({type:io.Search,value:e.key});case Rs.Enter:if(e.preventDefault(),e.stopPropagation(),g({type:io.CloseMenu}),null!==p.activeItemIndex){var t,n=p.items[p.activeItemIndex].id;null==(t=document.getElementById(n))||t.click()}po().nextFrame((function(){var e;return null==(e=p.buttonRef.current)?void 0:e.focus({preventScroll:!0})}));break;case Rs.ArrowDown:return e.preventDefault(),e.stopPropagation(),g({type:io.GoToItem,focus:no.Next});case Rs.ArrowUp:return e.preventDefault(),e.stopPropagation(),g({type:io.GoToItem,focus:no.Previous});case Rs.Home:case Rs.PageUp:return e.preventDefault(),e.stopPropagation(),g({type:io.GoToItem,focus:no.First});case Rs.End:case Rs.PageDown:return e.preventDefault(),e.stopPropagation(),g({type:io.GoToItem,focus:no.Last});case Rs.Escape:e.preventDefault(),e.stopPropagation(),g({type:io.CloseMenu}),po().nextFrame((function(){var e;return null==(e=p.buttonRef.current)?void 0:e.focus({preventScroll:!0})}));break;case Rs.Tab:e.preventDefault(),e.stopPropagation();break;default:1===e.key.length&&(g({type:io.Search,value:e.key}),v.setTimeout((function(){return g({type:io.ClearSearch})}),350))}}),[g,v,p]),C=_.exports.useCallback((function(e){switch(e.key){case Rs.Space:e.preventDefault()}}),[]),S=_.exports.useMemo((function(){return{open:p.menuState===so.Open}}),[p]);return As({props:Es({},t,{"aria-activedescendant":null===p.activeItemIndex||null==(a=p.items[p.activeItemIndex])?void 0:a.id,"aria-labelledby":null==(s=p.buttonRef.current)?void 0:s.id,id:b,onKeyDown:E,onKeyUp:C,role:"menu",tabIndex:0,ref:f}),slot:S,defaultTag:"div",features:ko,visible:w,name:"Menu.Items"})})),Io=_.exports.Fragment;function No(){var e=_.exports.useRef(!0);return _.exports.useEffect((function(){e.current=!1}),[]),e.current}function Do(e){for(var t,n=arguments.length,a=new Array(n>1?n-1:0),s=1;s<n;s++)a[s-1]=arguments[s];e&&a.length>0&&(t=e.classList).add.apply(t,a)}function Ro(e){for(var t,n=arguments.length,a=new Array(n>1?n-1:0),s=1;s<n;s++)a[s-1]=arguments[s];e&&a.length>0&&(t=e.classList).remove.apply(t,a)}function xo(e,t,n,a,s,o){var i,r,l=po(),c=void 0!==o?(i=o,r={called:!1},function(){if(!r.called)return r.called=!0,i.apply(void 0,arguments)}):function(){};return Ro.apply(void 0,[e].concat(s)),Do.apply(void 0,[e].concat(t,n)),l.nextFrame((function(){Ro.apply(void 0,[e].concat(n)),Do.apply(void 0,[e].concat(a)),l.add(function(e,t){var n=po();if(!e)return n.dispose;var a=getComputedStyle(e),s=[a.transitionDuration,a.transitionDelay].map((function(e){var t=e.split(",").filter(Boolean).map((function(e){return e.includes("ms")?parseFloat(e):1e3*parseFloat(e)})).sort((function(e,t){return t-e}))[0];return void 0===t?0:t})),o=s[0],i=s[1];return 0!==o?n.setTimeout((function(){t(Co.Finished)}),o+i):t(Co.Finished),n.add((function(){return t(Co.Cancelled)})),n.dispose}(e,(function(n){return Ro.apply(void 0,[e].concat(a,t)),Do.apply(void 0,[e].concat(s)),c(n)})))})),l.add((function(){return Ro.apply(void 0,[e].concat(t,n,a,s))})),l.add((function(){return c(Co.Cancelled)})),l.dispose}function Lo(e){return void 0===e&&(e=""),_.exports.useMemo((function(){return e.split(" ").filter((function(e){return e.trim().length>1}))}),[e])}Eo.Button=To,Eo.Items=Ao,Eo.Item=function e(t){var n=t.disabled,a=void 0!==n&&n,s=t.onClick,o=Cs(t,["disabled","onClick"]),i=vo([Eo.name,e.name].join(".")),r=i[0],l=i[1],c="headlessui-menu-item-"+Hs(),d=null!==r.activeItemIndex&&r.items[r.activeItemIndex].id===c;Ls((function(){if(r.menuState===so.Open&&d){var e=po();return e.nextFrame((function(){var e;return null==(e=document.getElementById(c))||null==e.scrollIntoView?void 0:e.scrollIntoView({block:"nearest"})})),e.dispose}}),[c,d,r.menuState]);var u=_.exports.useRef({disabled:a});Ls((function(){u.current.disabled=a}),[u,a]),Ls((function(){var e,t;u.current.textValue=null==(e=document.getElementById(c))||null==(t=e.textContent)?void 0:t.toLowerCase()}),[u,c]),Ls((function(){return l({type:io.RegisterItem,id:c,dataRef:u}),function(){return l({type:io.UnregisterItem,id:c})}}),[u,c]);var m=_.exports.useCallback((function(e){return a?e.preventDefault():(l({type:io.CloseMenu}),po().nextFrame((function(){var e;return null==(e=r.buttonRef.current)?void 0:e.focus({preventScroll:!0})})),s?s(e):void 0)}),[l,r.buttonRef,a,s]),h=_.exports.useCallback((function(){if(a)return l({type:io.GoToItem,focus:no.Nothing});l({type:io.GoToItem,focus:no.Specific,id:c})}),[a,c,l]),p=_.exports.useCallback((function(){a||d||l({type:io.GoToItem,focus:no.Specific,id:c})}),[a,d,c,l]),g=_.exports.useCallback((function(){a||d&&l({type:io.GoToItem,focus:no.Nothing})}),[a,d,l]),f=_.exports.useMemo((function(){return{active:d,disabled:a}}),[d,a]);return As({props:Es({},o,{id:c,role:"menuitem",tabIndex:!0===a?void 0:-1,"aria-disabled":!0===a||void 0,disabled:void 0,onClick:m,onFocus:h,onPointerMove:p,onMouseMove:p,onPointerLeave:g,onMouseLeave:g}),slot:f,defaultTag:Io,name:"Menu.Item"})},(So=Co||(Co={})).Finished="finished",So.Cancelled="cancelled";var Oo,Mo,Po=_.exports.createContext(null);Po.displayName="TransitionContext",(Mo=Oo||(Oo={})).Visible="visible",Mo.Hidden="hidden";var Uo=_.exports.createContext(null);function Fo(e){return"children"in e?Fo(e.children):e.current.filter((function(e){return e.state===Oo.Visible})).length>0}function Go(e){var t=_.exports.useRef(e),n=_.exports.useRef([]),a=Zs();_.exports.useEffect((function(){t.current=e}),[e]);var s=_.exports.useCallback((function(e,s){var o;void 0===s&&(s=bs.Hidden);var i=n.current.findIndex((function(t){return t.id===e}));-1!==i&&(ks(s,((o={})[bs.Unmount]=function(){n.current.splice(i,1)},o[bs.Hidden]=function(){n.current[i].state=Oo.Hidden},o)),!Fo(n)&&a.current&&(null==t.current||t.current()))}),[t,a,n]),o=_.exports.useCallback((function(e){var t=n.current.find((function(t){return t.id===e}));return t?t.state!==Oo.Visible&&(t.state=Oo.Visible):n.current.push({id:e,state:Oo.Visible}),function(){return s(e,bs.Unmount)}}),[n,s]);return _.exports.useMemo((function(){return{children:n,register:o,unregister:s}}),[o,s,n])}function Ho(){}Uo.displayName="NestingContext";var jo=["beforeEnter","afterEnter","beforeLeave","afterLeave"];function Bo(e){for(var t,n={},a=Ts(jo);!(t=a()).done;){var s,o=t.value;n[o]=null!=(s=e[o])?s:Ho}return n}var Vo=gs.RenderStrategy;function Yo(e){var t,n=e.beforeEnter,a=e.afterEnter,s=e.beforeLeave,o=e.afterLeave,i=e.enter,r=e.enterFrom,l=e.enterTo,c=e.entered,d=e.leave,u=e.leaveFrom,m=e.leaveTo,h=Cs(e,["beforeEnter","afterEnter","beforeLeave","afterLeave","enter","enterFrom","enterTo","entered","leave","leaveFrom","leaveTo"]),p=_.exports.useRef(null),f=_.exports.useState(Oo.Visible),b=f[0],v=f[1],y=h.unmount?bs.Unmount:bs.Hidden,w=function(){var e=_.exports.useContext(Po);if(null===e)throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");return e}(),E=w.show,C=w.appear,S=function(){var e=_.exports.useContext(Uo);if(null===e)throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");return e}(),T=S.register,k=S.unregister,A=No(),I=Hs(),N=_.exports.useRef(!1),D=Go((function(){N.current||(v(Oo.Hidden),k(I),F.current.afterLeave())}));Ls((function(){if(I)return T(I)}),[T,I]),Ls((function(){var e;y===bs.Hidden&&I&&(E&&b!==Oo.Visible?v(Oo.Visible):ks(b,((e={})[Oo.Hidden]=function(){return k(I)},e[Oo.Visible]=function(){return T(I)},e)))}),[b,I,T,k,E,y]);var R=Lo(i),x=Lo(r),L=Lo(l),O=Lo(c),M=Lo(d),P=Lo(u),U=Lo(m),F=function(e){var t=_.exports.useRef(Bo(e));return _.exports.useEffect((function(){t.current=Bo(e)}),[e]),t}({beforeEnter:n,afterEnter:a,beforeLeave:s,afterLeave:o}),G=Ms();_.exports.useEffect((function(){if(G&&b===Oo.Visible&&null===p.current)throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?")}),[p,b,G]);var H=A&&!C;Ls((function(){var e=p.current;if(e&&!H)return N.current=!0,E&&F.current.beforeEnter(),E||F.current.beforeLeave(),E?xo(e,R,x,L,O,(function(e){N.current=!1,e===Co.Finished&&F.current.afterEnter()})):xo(e,M,P,U,O,(function(e){N.current=!1,e===Co.Finished&&(Fo(D)||(v(Oo.Hidden),k(I),F.current.afterLeave()))}))}),[F,I,N,k,D,p,H,E,R,x,L,M,P,U]);var j={ref:p},B=h;return g(Uo.Provider,{value:D,children:g(uo,{value:ks(b,(t={},t[Oo.Visible]=eo.Open,t[Oo.Hidden]=eo.Closed,t)),children:As({props:Es({},B,j),defaultTag:"div",features:Vo,visible:b===Oo.Visible,name:"Transition.Child"})})})}function Wo(e){var t,n=e.show,a=e.appear,s=void 0!==a&&a,o=e.unmount,i=Cs(e,["show","appear","unmount"]),l=co();void 0===n&&null!==l&&(n=ks(l,((t={})[eo.Open]=!0,t[eo.Closed]=!1,t)));if(![!0,!1].includes(n))throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");var c=_.exports.useState(n?Oo.Visible:Oo.Hidden),d=c[0],u=c[1],m=Go((function(){u(Oo.Hidden)})),h=No(),p=_.exports.useMemo((function(){return{show:n,appear:s||!h}}),[n,s,h]);_.exports.useEffect((function(){n?u(Oo.Visible):Fo(m)||u(Oo.Hidden)}),[n,m]);var f={unmount:o};return g(Uo.Provider,{value:m,children:g(Po.Provider,{value:p,children:As({props:Es({},f,{as:_.exports.Fragment,children:g(Yo,r({},Object.assign({},f,i)))}),defaultTag:_.exports.Fragment,features:Vo,visible:d===Oo.Visible,name:"Transition"})})})}Wo.Child=function(e){var t=null!==_.exports.useContext(Po),n=null!==co();return g(!t&&n?Wo:Yo,r({},Object.assign({},e)))},Wo.Root=Wo;var qo=sa.jsx;var zo=function(e){return qo("svg",l(r({},Object.assign({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20",fill:"currentColor"},e)),{children:qo("path",{fillRule:"evenodd",d:"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z",clipRule:"evenodd"})}))},Jo=({children:e})=>g(Wo,{as:_.exports.Fragment,enter:"u3-transition u3-ease-out u3-duration-100",enterFrom:"u3-transform u3-opacity-0 u3-scale-95",enterTo:"u3-transform u3-opacity-100 u3-scale-100",leave:"u3-transition u3-ease-in u3-duration-75",leaveFrom:"u3-transform u3-opacity-100 u3-scale-100",leaveTo:"u3-transform u3-opacity-0 u3-scale-95",children:e}),$o=e=>{const t=e.className||"u3-group u3-text-gray-900 u3-flex u3-rounded-md u3-items-center u3-w-full u3-px-2 u3-py-1 u3-text-sm",n=e.classActive||"u3-bg-primary u3-text-white";return g(Eo.Item,{children:({active:a})=>w("button",{onClick:e.onClick,className:E(t,{[n]:a}),children:[e.icon,e.name]})})};var Ko="u3-cxx-2eca89dd",Qo="u3-cxx-286d3fce";var Xo=b()((function({history:e}){return w(Eo,{as:"div",className:"u3-relative u3-inline-block",children:[g(Eo.Button,{className:Ko,children:g(zo,{className:"u3-w-4 u3-h-4 u3-text-violet-200 hover:text-violet-100","aria-hidden":"true"})}),g(Jo,{children:g(Eo.Items,{className:Qo,children:g("div",{className:"u3-px-1 u3-py-1",children:g($o,{name:"Giới thiệu",onClick:()=>{return t="/about",void e.push(t);var t}})})})})]})}));const Zo=p.lazy((()=>Mn((()=>import("./index.afa2bce1.js")),["assets/index.afa2bce1.js","assets/vendor.b4a3f96f.js","assets/index.c04d0919.js","assets/index.b7b5f55f.css"]))),ei=p.lazy((()=>Mn((()=>import("./index.b4b79fde.js")),["assets/index.b4b79fde.js","assets/index.5d5bbcd0.css","assets/vendor.b4a3f96f.js","assets/index.c04d0919.js","assets/index.b7b5f55f.css"]))),ti=p.lazy((()=>Mn((()=>import("./index.ac33edad.js")),["assets/index.ac33edad.js","assets/index.7188efea.css","assets/vendor.b4a3f96f.js","assets/index.c04d0919.js","assets/index.b7b5f55f.css"]))),ni=p.lazy((()=>Mn((()=>import("./index.29bd3d7a.js")),["assets/index.29bd3d7a.js","assets/index.7716f017.css","assets/vendor.b4a3f96f.js","assets/index.c04d0919.js","assets/index.b7b5f55f.css"]))),ai=p.lazy((()=>Mn((()=>import("./index.fcd1cc0a.js")),["assets/index.fcd1cc0a.js","assets/index.fcfacf4f.css","assets/vendor.b4a3f96f.js","assets/index.c04d0919.js","assets/index.b7b5f55f.css","assets/FormattedMarkdownMessage.84b68eef.js"]))),si=p.lazy((()=>Mn((()=>import("./index.41022ad5.js")),["assets/index.41022ad5.js","assets/index.671c7ba5.css","assets/vendor.b4a3f96f.js","assets/index.c04d0919.js","assets/index.b7b5f55f.css","assets/FormattedMarkdownMessage.84b68eef.js"]))),oi=Pn(Zo),ii=Pn(ei),ri=Pn(ti),li=Pn(ni),ci=Pn(ai),di=Pn(si),ui=e=>{var t=e,{component:n}=t,i=((e,t)=>{var n={};for(var i in e)s.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&a)for(var i of a(e))t.indexOf(i)<0&&o.call(e,i)&&(n[i]=e[i]);return n})(t,["component"]);return g(S,l(r({},i),{render:e=>g(oi,l(r({},e),{children:g(n,r({},e))}))}))};var mi=e=>w(C,{children:[g(S,{path:"/error",component:ii}),g(S,{path:"/about",component:ri}),g(S,{path:"/connect",component:li}),g(ui,{path:"/join",component:ci}),g(ui,{path:"/:team",component:di}),g(T,{to:l(r({},e.location),{pathname:"/connect"})})]});var hi="u3-cxx-f9aed0ee",pi="u3-cxx-3b27c386",_i="u3-cxx-d95bf1e3",gi="u3-cxx-94c03c1e",fi="u3-cxx-6db5bde9",bi="u3-cxx-1f6ae2bf",vi="u3-cxx-51f29819",yi="u3-cxx-36d27ec1",wi="u3-cxx-6962ecaf",Ei="u3-cxx-e957fb9b",Ci=k,Si=/\s/;var Ti=function(e){for(var t=e.length;t--&&Si.test(e.charAt(t)););return t},ki=/^\s+/;var Ai=function(e){return e?e.slice(0,Ti(e)+1).replace(ki,""):e},Ii=A,Ni=I,Di=/^[-+]0x[0-9a-f]+$/i,Ri=/^0b[01]+$/i,xi=/^0o[0-7]+$/i,Li=parseInt;var Oi=A,Mi=function(){return Ci.Date.now()},Pi=function(e){if("number"==typeof e)return e;if(Ni(e))return NaN;if(Ii(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=Ii(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=Ai(e);var n=Ri.test(e);return n||xi.test(e)?Li(e.slice(2),n?2:8):Di.test(e)?NaN:+e},Ui=Math.max,Fi=Math.min;var Gi=function(e,t,n){var a,s,o,i,r,l,c=0,d=!1,u=!1,m=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function h(t){var n=a,o=s;return a=s=void 0,c=t,i=e.apply(o,n)}function p(e){return c=e,r=setTimeout(g,t),d?h(e):i}function _(e){var n=e-l;return void 0===l||n>=t||n<0||u&&e-c>=o}function g(){var e=Mi();if(_(e))return f(e);r=setTimeout(g,function(e){var n=t-(e-l);return u?Fi(n,o-(e-c)):n}(e))}function f(e){return r=void 0,m&&a?h(e):(a=s=void 0,i)}function b(){var e=Mi(),n=_(e);if(a=arguments,s=this,l=e,n){if(void 0===r)return p(l);if(u)return clearTimeout(r),r=setTimeout(g,t),h(l)}return void 0===r&&(r=setTimeout(g,t)),i}return t=Pi(t)||0,Oi(n)&&(d=!!n.leading,o=(u="maxWait"in n)?Ui(Pi(n.maxWait)||0,t):o,m="trailing"in n?!!n.trailing:m),b.cancel=function(){void 0!==r&&clearTimeout(r),c=0,a=l=s=r=void 0},b.flush=function(){return void 0===r?i:f(Mi())},b},Hi=Gi,ji=A;var Bi=function(e,t,n){var a=!0,s=!0;if("function"!=typeof e)throw new TypeError("Expected a function");return ji(n)&&(a="leading"in n?!!n.leading:a,s="trailing"in n?!!n.trailing:s),Hi(e,t,{leading:a,maxWait:t,trailing:s})};class Vi extends p.PureComponent{constructor(e){var t,n;super(e),c(this,"mounted"),c(this,"titleRef"),c(this,"debounceReload"),c(this,"handleConfigLoaded",(e=>{const{location:t,history:n,noAccounts:a,currentUserId:s}=this.props;(a||!s&&!e)&&n.push(`/connect?next=${encodeURIComponent(t.pathname)}`),this.setState({configLoaded:!0}),Gn()(Be.dispatch,Be.getState)})),c(this,"handleLogoutLoginSignal",(e=>{const t=e=>e.storageArea===localStorage&&e.newValue;if(e.key===mn.LOGOUT&&t(e)&&(console.log("detected logout from a different tab"),os("#u3-app",!1,!1,this.props.history)),e.key===mn.LOGIN&&t(e)){let e=function(){location.reload()};if(At(Be.getState()))return;document.addEventListener("visibilitychange",e,!1)}})),c(this,"handleDndEvent",(e=>{e.preventDefault(),e.stopPropagation()})),c(this,"handleExpanned",(()=>{var e,t;!0===this.state.expanded?null==(e=Jn())||e.classList.add("u3-collapsed"):null==(t=Jn())||t.classList.remove("u3-collapsed"),this.setState({expanded:!this.state.expanded})})),c(this,"handleReload",(()=>{this.debounceReload&&this.debounceReload.cancel(),this.setState({reload:!0}),this.debounceReload()})),c(this,"setTitle",(e=>{this.titleRef.current.innerHTML=e})),c(this,"selectDot",(e=>{this.setState({badge:e})})),this.mounted=!1,this.titleRef=p.createRef(),Un(jn()),Bn(Vn),window.addEventListener("storage",this.handleLogoutLoginSignal),null==(t=Jn())||t.addEventListener("drop",this.handleDndEvent),null==(n=Jn())||n.addEventListener("dragover",this.handleDndEvent),this.debounceReload=Bi((()=>{this.props.history.replace("/")}),5e3,{trailing:!1}),this.state={configLoaded:!!e.siteName,expanded:!0,reload:!1,badge:""}}async componentDidMount(){var e,t,n;aa(document.getElementById("u3-chatting")),null==(t=Jn())||t.style.setProperty("--u3-chatting-content-width",`${(null==(e=Jn())?void 0:e.clientWidth)||440}px`),null==(n=Jn())||n.classList.add("u3-chat-main"),this.mounted=!0;const a=this.props;if(a.clientId){const e=Z.getToken(a.clientId),t=Z.getCsrf(a.clientId);e&&t&&(te.setToken(e),te.setCSRF(t))}if(!a.siteName&&a.clientId){const[e,t,n,s]=await a.actions.loadMeAndConfig(a.clientId);"/"===a.location.pathname&&s&&s.data&&rs(a.history),this.handleConfigLoaded(s&&s.data)}}componentDidUpdate(e){const{location:t,noAccounts:n,allowedDomains:a,clientValid:s}=this.props;!this.state.configLoaded||"/error"===t.pathname||s||-1!==a.indexOf(Fn())?"/"===t.pathname&&n&&!this.props.currentUserId&&e.history.replace("/connect"):e.history.replace("/error?type=client-invalid")}componentWillUnmount(){this.mounted=!1,window.removeEventListener("storage",this.handleLogoutLoginSignal)}render(){const{configLoaded:e,reload:t}=this.state;if(!e)return g(hs,{children:g(Hn,{message:"Tải cài đặt"})});let n=g(ys,{className:"u3-w-3.5 u3-h-3.5"});return this.state.expanded&&(n=g(ws,{className:"u3-w-3.5 u3-h-3.5"})),g(hs,{children:w(ds,{value:{setTitle:this.setTitle,selectDot:this.selectDot},children:[w("div",{className:hi,children:[w("div",{className:pi,children:[g(ps,{className:"u3-w-4 u3-h-4"}),g("div",{className:E(_i,{[fi]:"Unread"===this.state.badge,[gi]:"Mention"===this.state.badge,"u3-animate-ping":""!==this.state.badge})}),g("div",{className:E(_i,bi,{[fi]:"Unread"===this.state.badge,[gi]:"Mention"===this.state.badge})}),g("h3",{ref:this.titleRef,children:"U3 Chat"})]}),w("div",{className:vi,children:[g("button",{onClick:this.handleReload,className:yi,children:g(ia,{className:E("u3-h-4 u3-w-4 u3-text-white",{"u3-animate-spin":t})})}),g("button",{onClick:this.handleExpanned,className:wi,children:n}),g(Xo,{history:this.props.history})]})]}),g("div",{className:E(Ei,{"u3-collapsed":!this.state.expanded}),children:g(mi,r({},this.props))})]})})}}var Yi=Vi;var Wi=b((function(e){const t=$n(),n=ae(e),a=Yn(e),s=e.plugins.components.CustomRouteComponent,o=t.clientId===a.clientId,i=a.allowed,r=B(e),l=Z.getPreviousTeamId(B(e)),c=Nt(e,l);return{siteName:n.SiteName,noAccounts:"true"===n.NoAccounts,clientValid:o,clientId:t.clientId,allowedDomains:i,hasUserToken:!!t.userToken,permalinkRedirectTeamName:c?c.name:"",currentUserId:r,plugins:s}}),(function(e){return{actions:v({loadMeAndConfig:Xn},e)}}))(Yi),qi=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:Wi});export{Qa as $,ts as A,za as B,Eo as C,Jo as D,ns as E,Bs as F,ga as G,Ca as H,qn as I,Wn as J,Rs as K,Ka as L,ps as M,ha as N,Xa as O,ra as P,Ta as Q,ba as R,eo as S,Wo as T,wa as U,ya as V,ka as W,va as X,pa as Y,Ea as Z,Cs as _,os as a,ua as a0,fa as a1,zn as a2,es as a3,ss as a4,Za as a5,Sa as a6,_a as a7,Jn as a8,xa as a9,ma as aa,qi as ab,rs as b,Ra as c,Ls as d,is as e,As as f,$n as g,Zs as h,Da as i,Qs as j,Xs as k,Ys as l,js as m,Ts as n,Hs as o,Es as p,gs as q,sa as r,Ns as s,Ps as t,Ms as u,Us as v,co as w,ks as x,us as y,Gi as z};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
