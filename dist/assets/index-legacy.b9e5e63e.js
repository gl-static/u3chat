!function(){function e(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}System.register(["./vendor-legacy.59c63cb5.js","./index-legacy.01f15e5d.js","./index-legacy.e59665c7.js"],(function(n){"use strict";var t,o,i,s,a,r,c,d,u,l,h,m,p,w,f,g,v,L,b,k,y,E,U;return{setters:[function(e){t=e.R,o=e.x,i=e.w,s=e.I,a=e.J},function(e){r=e.aQ,c=e.bX,d=e.bY,u=e.ad,l=e.bZ,h=e.bS,m=e.N,p=e.aK,w=e.y,f=e.ag,g=e.$,v=e.b_},function(e){L=e.i,b=e.e,k=e.a,y=e.B,E=e.c,U=e.W}],execute:function(){function S(e){return async(n,t)=>{const o=r(t()),i=c(t(),o.id),s=i.automaticTimezone!==e;if(i.useAutomaticTimezone&&s){const s={useAutomaticTimezone:"true",automaticTimezone:e,manualTimezone:i.manualTimezone},a={...o,timezone:s};d(a)(n,t)}return{}}}const z=u.dispatch,B=u.getState;class T extends t.PureComponent{constructor(n){super(n),e(this,"onDesktopMessageListener",(e=>{const{origin:n,data:{type:t,message:o={}}={}}=e;if(this.props.currentUser&&n===window.location.origin)switch(t){case"register-desktop":{const{version:e}=o;window.desktop||(window.desktop={}),window.desktop.version=i.valid(i.coerce(e));break}case"user-activity-update":{const{userIsActive:e,manual:n}=o;!0!==e&&!1!==e||U.userUpdateActiveStatus(e,n);break}case"notification-clicked":{const{channel:e,teamId:n}=o;window.focus(),this.props.actions.getChannelURLAction(e,n);break}}})),e(this,"handleBackSpace",(e=>{8!==e.which||["input","textarea"].includes(e.target.tagName.toLowerCase())||e.preventDefault()})),e(this,"handleBeforeUnload",(()=>{window.removeEventListener("beforeunload",this.handleBeforeUnload),document.cookie.indexOf(`${m.COOKIE.SESSION_USER}=`)>-1&&p("",this.props.currentChannelId||"")(z,B),E()}));const t=document.getElementById("u3-chatting");t&&(t.className+=" channel-view")}isValidState(){return null!=this.props.currentUser}componentDidMount(){const{currentUser:e,enableTimezone:n,actions:t,location:o}=this.props;L(),n&&t.autoUpdateTimezone(l()),window.addEventListener("beforeunload",this.handleBeforeUnload),window.addEventListener("focus",this.onFocusListener),window.addEventListener("blur",this.onBlurListener),document.hasFocus()||b(!1),window.addEventListener("message",this.onDesktopMessageListener),window.postMessage({type:"webapp-ready"},window.location.origin),e||k("/error?type=no-auth&redirect_to="+encodeURIComponent(o.pathname),!0,!1),window.addEventListener("keydown",this.handleBackSpace),this.isValidState()&&y.signalLogin()}componentWillUnmount(){E(),window.removeEventListener("keydown",this.handleBackSpace),window.removeEventListener("focus",this.onFocusListener),window.removeEventListener("blur",this.onBlurListener),window.removeEventListener("message",this.onDesktopMessageListener)}render(){return this.isValidState()?this.props.children:o(h,{message:"Xác thực tài khoản"})}onFocusListener(){b(!0)}onBlurListener(){b(!1)}}var I=T;const x=(e,n)=>(t,o)=>g.push(v(o(),e,n));n("default",s((function(e){const n=w(e);return{currentUser:r(e),currentChannelId:f(e),enableTimezone:"true"===n.ExperimentalTimezone}}),(function(e){return{actions:a({autoUpdateTimezone:S,getChannelURLAction:x},e)}}))(I))}}}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
